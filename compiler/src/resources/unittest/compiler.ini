;;
; Compiler tests
;
; $Id: compiler.ini 15110 2010-12-28 18:19:21Z friebe $

[this]
description="Compiler tests"

[checks]
class="net.xp_lang.tests.checks.ChecksTest"

[checks.ConstantsAreDiscouragedTest]
class="net.xp_lang.tests.checks.ConstantsAreDiscouragedTest"

[checks.ArmTypesAreCloseableTest]
class="net.xp_lang.tests.checks.ArmTypesAreCloseableTest"

[checks.FieldsVerificationTest]
class="net.xp_lang.tests.checks.FieldsVerificationTest"

[checks.MemberAccessVerificationTest]
class="net.xp_lang.tests.checks.MemberAccessVerificationTest"

[checks.ArrayAccessVerificationTest]
class="net.xp_lang.tests.checks.ArrayAccessVerificationTest"

[checks.MemberRedeclarationCheckTest]
class="net.xp_lang.tests.checks.MemberRedeclarationCheckTest"

[checks.MethodCallVerificationTest]
class="net.xp_lang.tests.checks.MethodCallVerificationTest"

[checks.RoutinesVerificationTest]
class="net.xp_lang.tests.checks.RoutinesVerificationTest"

[checks.TypeHasDocumentationTest]
class="net.xp_lang.tests.checks.TypeHasDocumentationTest"

[checks.TypeMemberHasDocumentationTest]
class="net.xp_lang.tests.checks.TypeMemberHasDocumentationTest"

[checks.NoNativeImports]
class="net.xp_lang.tests.checks.NoNativeImportsTest"

[checks.IsInlineable]
class="net.xp_lang.tests.checks.IsInlineableTest"

[compilation.CommentsTest]
class="net.xp_lang.tests.compilation.CommentsTest"

[compilation.TypeTest]
class="net.xp_lang.tests.compilation.TypeTest"

[compilation.ClassAnnotations]
class="net.xp_lang.tests.compilation.ClassAnnotationsTest"

[compilation.MethodAnnotations]
class="net.xp_lang.tests.compilation.MethodAnnotationsTest"

[compilation.OperatorAnnotations]
class="net.xp_lang.tests.compilation.OperatorAnnotationsTest"

[compilation.ConstructorAnnotations]
class="net.xp_lang.tests.compilation.ConstructorAnnotationsTest"

[compilation.FieldAnnotations]
class="net.xp_lang.tests.compilation.FieldAnnotationsTest"

[execution.source.AnnotationTest]
class="net.xp_lang.tests.execution.source.AnnotationTest"

[execution.source.ArrayTest]
class="net.xp_lang.tests.execution.source.ArrayTest"

[execution.source.AssignmentTest]
class="net.xp_lang.tests.execution.source.AssignmentTest"

[execution.source.AutoPropertiesTest]
class="net.xp_lang.tests.execution.source.AutoPropertiesTest"

[execution.source.CastingTest]
class="net.xp_lang.tests.execution.source.CastingTest"

[execution.source.CatchTest]
class="net.xp_lang.tests.execution.source.CatchTest"

[execution.source.ChainingTest]
class="net.xp_lang.tests.execution.source.ChainingTest"

[execution.source.ClassDeclarationTest]
class="net.xp_lang.tests.execution.source.ClassDeclarationTest"

[execution.source.ComparisonTest]
class="net.xp_lang.tests.execution.source.ComparisonTest"

[execution.source.ConcatTest]
class="net.xp_lang.tests.execution.source.ConcatTest"

[execution.source.DefaultArgsTest]
class="net.xp_lang.tests.execution.source.DefaultArgsTest"

[execution.source.EnumDeclarationTest]
class="net.xp_lang.tests.execution.source.EnumDeclarationTest"

[execution.source.ExtensionMethodsTest]
class="net.xp_lang.tests.execution.source.ExtensionMethodsTest"

[execution.source.FinallyTest]
class="net.xp_lang.tests.execution.source.FinallyTest"

[execution.source.InstanceCreationTest]
class="net.xp_lang.tests.execution.source.InstanceCreationTest"

[execution.source.InterfaceDeclarationTest]
class="net.xp_lang.tests.execution.source.InterfaceDeclarationTest"

[execution.source.LambdaTest]
class="net.xp_lang.tests.execution.source.LambdaTest"

[execution.source.LoopExecutionTest]
class="net.xp_lang.tests.execution.source.LoopExecutionTest"

[execution.source.MathTest]
class="net.xp_lang.tests.execution.source.MathTest"

[execution.source.MemberInitTest]
class="net.xp_lang.tests.execution.source.MemberInitTest"

[execution.source.MethodOverloadingTest]
class="net.xp_lang.tests.execution.source.MethodOverloadingTest"

[execution.source.MultiCatchTest]
class="net.xp_lang.tests.execution.source.MultiCatchTest"

[execution.source.NativeClassUsageTest]
class="net.xp_lang.tests.execution.source.NativeClassUsageTest"

[execution.source.OperatorOverloadingTest]
class="net.xp_lang.tests.execution.source.OperatorOverloadingTest"

[execution.source.OperatorTest]
class="net.xp_lang.tests.execution.source.OperatorTest"

[execution.source.PropertiesTest]
class="net.xp_lang.tests.execution.source.PropertiesTest"

[execution.source.PropertiesOverloadingTest]
class="net.xp_lang.tests.execution.source.PropertiesOverloadingTest"

[execution.source.StaticImportTest]
class="net.xp_lang.tests.execution.source.StaticImportTest"

[execution.source.TernaryOperatorTest]
class="net.xp_lang.tests.execution.source.TernaryOperatorTest"

[execution.source.VarArgsTest]
class="net.xp_lang.tests.execution.source.VarArgsTest"

[execution.source.VariablesTest]
class="net.xp_lang.tests.execution.source.VariablesTest"

[execution.source.WithTest]
class="net.xp_lang.tests.execution.source.WithTest"

[execution.source.TypeRestrictionTest]
class="net.xp_lang.tests.execution.source.TypeRestrictionTest"

[FileManagerTest]
class="net.xp_lang.tests.FileManagerTest"

[integration.CircularDependencyTest]
class="net.xp_lang.tests.integration.CircularDependencyTest"

[integration.ExtensionMethodsIntegrationTest]
class="net.xp_lang.tests.integration.ExtensionMethodsIntegrationTest"

[integration.UsesDeclarationsTest]
class="net.xp_lang.tests.integration.UsesDeclarationsTest"

[LocalsToMemberPromoterTest]
class="net.xp_lang.tests.LocalsToMemberPromoterTest"

[SourceNativeImporterTest]
class="net.xp_lang.tests.SourceNativeImporterTest"

[optimizations]
class="net.xp_lang.tests.optimization.OptimizationsTest"

[optimization.BinaryOptimizationTest]
class="net.xp_lang.tests.optimization.BinaryOptimizationTest"

[optimization.TryOptimizationTest]
class="net.xp_lang.tests.optimization.TryOptimizationTest"

[optimization.InliningOptimizationTest]
class="net.xp_lang.tests.optimization.InliningOptimizationTest"

[optimization.AssignOptimizationTest]
class="net.xp_lang.tests.optimization.AssignOptimizationTest"

[StringEscapes]
class="net.xp_lang.tests.StringEscapes"

[syntax.php.AnnotationTest]
class="net.xp_lang.tests.syntax.php.AnnotationTest"

[syntax.php.ArraySyntaxTest]
class="net.xp_lang.tests.syntax.php.ArraySyntaxTest"

[syntax.php.ArrayTest]
class="net.xp_lang.tests.syntax.php.ArrayTest"

[syntax.php.AssignmentTest]
class="net.xp_lang.tests.syntax.php.AssignmentTest"

[syntax.php.BinaryOpTest]
class="net.xp_lang.tests.syntax.php.BinaryOpTest"

[syntax.php.BitOperatorsTest]
class="net.xp_lang.tests.syntax.php.BitOperatorsTest"

[syntax.php.BooleanOpTest]
class="net.xp_lang.tests.syntax.php.BooleanOpTest"

[syntax.php.CastingTest]
class="net.xp_lang.tests.syntax.php.CastingTest"

[syntax.php.ChainingTest]
class="net.xp_lang.tests.syntax.php.ChainingTest"

[syntax.php.ClassConstantsTest]
class="net.xp_lang.tests.syntax.php.ClassConstantsTest"

[syntax.php.ClassDeclarationTest]
class="net.xp_lang.tests.syntax.php.ClassDeclarationTest"

[syntax.php.ComparisonTest]
class="net.xp_lang.tests.syntax.php.ComparisonTest"

[syntax.php.ControlStructuresTest]
class="net.xp_lang.tests.syntax.php.ControlStructuresTest"

[syntax.php.DynamicTest]
class="net.xp_lang.tests.syntax.php.DynamicTest"

[syntax.php.ExceptionExpressionTest]
class="net.xp_lang.tests.syntax.php.ExceptionExpressionTest"

[syntax.php.FieldDeclarationTest]
class="net.xp_lang.tests.syntax.php.FieldDeclarationTest"

[syntax.php.ImportTest]
class="net.xp_lang.tests.syntax.php.ImportTest"

[syntax.php.InstanceOfTest]
class="net.xp_lang.tests.syntax.php.InstanceOfTest"

[syntax.php.LambdaTest]
class="net.xp_lang.tests.syntax.php.LambdaTest"

[syntax.php.LiteralTest]
class="net.xp_lang.tests.syntax.php.LiteralTest"

[syntax.php.LoopTest]
class="net.xp_lang.tests.syntax.php.LoopTest"

[syntax.php.MapTest]
class="net.xp_lang.tests.syntax.php.MapTest"

[syntax.php.MethodDeclarationTest]
class="net.xp_lang.tests.syntax.php.MethodDeclarationTest"

[syntax.php.NumbersTest]
class="net.xp_lang.tests.syntax.php.NumbersTest"

[syntax.php.ObjectOperationTest]
class="net.xp_lang.tests.syntax.php.ObjectOperationTest"

[syntax.php.SilenceOperatorTest]
class="net.xp_lang.tests.syntax.php.SilenceOperatorTest"

[syntax.php.StreamLexerTest]
class="net.xp_lang.tests.syntax.php.StreamLexerTest"

[syntax.php.StringLexerTest]
class="net.xp_lang.tests.syntax.php.StringLexerTest"

[syntax.php.StringTest]
class="net.xp_lang.tests.syntax.php.StringTest"

[syntax.php.TernaryTest]
class="net.xp_lang.tests.syntax.php.TernaryTest"

[syntax.php.UnaryOpTest]
class="net.xp_lang.tests.syntax.php.UnaryOpTest"

[syntax.xp.AnnotationTest]
class="net.xp_lang.tests.syntax.xp.AnnotationTest"

[syntax.xp.ArrayTest]
class="net.xp_lang.tests.syntax.xp.ArrayTest"

[syntax.xp.AssignmentTest]
class="net.xp_lang.tests.syntax.xp.AssignmentTest"

[syntax.xp.BinaryOpTest]
class="net.xp_lang.tests.syntax.xp.BinaryOpTest"

[syntax.xp.BitOperatorsTest]
class="net.xp_lang.tests.syntax.xp.BitOperatorsTest"

[syntax.xp.BooleanOpTest]
class="net.xp_lang.tests.syntax.xp.BooleanOpTest"

[syntax.xp.CastingTest]
class="net.xp_lang.tests.syntax.xp.CastingTest"

[syntax.xp.ChainingTest]
class="net.xp_lang.tests.syntax.xp.ChainingTest"

[syntax.xp.ClassConstantsTest]
class="net.xp_lang.tests.syntax.xp.ClassConstantsTest"

[syntax.xp.ClassDeclarationTest]
class="net.xp_lang.tests.syntax.xp.ClassDeclarationTest"

[syntax.xp.ComparisonTest]
class="net.xp_lang.tests.syntax.xp.ComparisonTest"

[syntax.xp.ControlStructuresTest]
class="net.xp_lang.tests.syntax.xp.ControlStructuresTest"

[syntax.xp.EnumDeclarationTest]
class="net.xp_lang.tests.syntax.xp.EnumDeclarationTest"

[syntax.xp.ExceptionExpressionTest]
class="net.xp_lang.tests.syntax.xp.ExceptionExpressionTest"

[syntax.xp.FieldDeclarationTest]
class="net.xp_lang.tests.syntax.xp.FieldDeclarationTest"

[syntax.xp.ImportTest]
class="net.xp_lang.tests.syntax.xp.ImportTest"

[syntax.xp.LambdaTest]
class="net.xp_lang.tests.syntax.xp.LambdaTest"

[syntax.xp.LiteralTest]
class="net.xp_lang.tests.syntax.xp.LiteralTest"

[syntax.xp.LoopTest]
class="net.xp_lang.tests.syntax.xp.LoopTest"

[syntax.xp.MapTest]
class="net.xp_lang.tests.syntax.xp.MapTest"

[syntax.xp.MethodDeclarationTest]
class="net.xp_lang.tests.syntax.xp.MethodDeclarationTest"

[syntax.xp.NumbersTest]
class="net.xp_lang.tests.syntax.xp.NumbersTest"

[syntax.xp.ObjectOperationTest]
class="net.xp_lang.tests.syntax.xp.ObjectOperationTest"

[syntax.xp.OperatorTest]
class="net.xp_lang.tests.syntax.xp.OperatorTest"

[syntax.xp.StreamLexerTest]
class="net.xp_lang.tests.syntax.xp.StreamLexerTest"

[syntax.xp.StringLexerTest]
class="net.xp_lang.tests.syntax.xp.StringLexerTest"

[syntax.xp.StringTest]
class="net.xp_lang.tests.syntax.xp.StringTest"

[syntax.xp.TernaryTest]
class="net.xp_lang.tests.syntax.xp.TernaryTest"

[syntax.xp.UnaryOpTest]
class="net.xp_lang.tests.syntax.xp.UnaryOpTest"

[syntax.xp.UnsupportedFeaturesTest]
class="net.xp_lang.tests.syntax.xp.UnsupportedFeaturesTest"

[syntax.xp.WithTest]
class="net.xp_lang.tests.syntax.xp.WithTest"

[syntax.xp.InvocationTest]
class="net.xp_lang.tests.syntax.xp.InvocationTest"

[syntax.xp.ParseErrorTest]
class="net.xp_lang.tests.syntax.xp.ParseErrorTest"

[types.ArrayTypeOfTest]
class="net.xp_lang.tests.types.ArrayTypeOfTest"

[types.CompiledTypeTest]
class="net.xp_lang.tests.types.CompiledTypeTest"

[types.GenericTypeTest]
class="net.xp_lang.tests.types.GenericTypeTest"

[types.MapTypeOfTest]
class="net.xp_lang.tests.types.MapTypeOfTest"

[types.ScopeTest]
class="net.xp_lang.tests.types.ScopeTest"

[types.TypeDeclarationTest]
class="net.xp_lang.tests.types.TypeDeclarationTest"

[types.TypeInstanceTest]
class="net.xp_lang.tests.types.TypeInstanceTest"

[types.TypeNameTest]
class="net.xp_lang.tests.types.TypeNameTest"

[types.TypeReferenceTest]
class="net.xp_lang.tests.types.TypeReferenceTest"

[types.TypeReflectionTest]
class="net.xp_lang.tests.types.TypeReflectionTest"

[visitor]
class="net.xp_lang.tests.VisitorTest"

[profilereader]
class="net.xp_lang.tests.CompilationProfileReaderTest"

[resolve.numbers]
class="net.xp_lang.tests.resolve.NumberResolveTest"

[buffer]
class="net.xp_lang.tests.BufferTest"
