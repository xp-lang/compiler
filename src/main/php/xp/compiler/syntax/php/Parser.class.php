<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassNameAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
use xp\compiler\ast\YieldFromNode;
#line 82 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_YIELD_FROM= 368;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    35,    30,    30,    27,    27, 
         41,    41,    42,    42,    40,    40,    43,    43,    47,    45, 
         48,    45,    50,    45,    51,    45,    53,    45,    54,    45, 
         55,    45,    57,    45,    59,    45,    60,    45,    61,    45, 
         45,    45,    52,    52,    56,    56,    62,    62,    64,    63, 
         65,    63,    44,    44,    49,    66,    49,    58,    67,    67, 
         69,    68,    39,    39,    70,    70,    46,    46,    71,    71, 
         72,    72,    72,    72,    26,    74,    26,    75,    26,    76, 
         26,    77,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    83,    83,    85,    85,    86,    84,    84, 
         38,    88,    38,    89,    38,    25,    25,    25,    25,    25, 
         25,    87,    87,    87,    87,    90,    90,    92,    92,    91, 
         78,    78,    78,    78,    78,    78,    78,    78,    78,    78, 
         78,    78,    79,    79,    79,    79,    79,    79,    79,    79, 
         80,    80,    80,    80,    80,    80,    80,    80,    80,    80, 
         80,    81,    81,    81,    81,    81,    81,    82,    82,    73, 
         73,    93,    93,    95,    94,    96,    94,    94,    94,    94, 
         97,    94,    98,    94,    31,    31,    10,    99,    17,    17, 
         33,    33,   100,   100,   101,   101,   101,   101,   101,   101, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     3,     1,     3,     0,     1, 
          1,     3,     3,     2,     0,     1,     1,     2,     0,     4, 
          0,     7,     0,    10,     0,     8,     0,     6,     0,     8, 
          0,     8,     0,     6,     0,     3,     0,     3,     0,     4, 
          2,     1,     1,     3,     0,     1,     1,     2,     0,     5, 
          0,     4,     1,     3,     0,     0,     3,     1,     1,     2, 
          0,     9,     0,     1,     1,     3,     0,     1,     4,     4, 
          1,     4,     1,     1,     2,     0,     3,     0,     3,     0, 
          5,     0,     6,     2,     1,     2,     4,     2,     1,     1, 
          1,     1,     1,     5,     3,     3,     3,     3,     4,     4, 
          2,     8,     4,     0,     1,     1,     3,     2,     0,     4, 
          1,     0,     4,     0,     5,     1,     1,     1,     1,     1, 
          1,     0,     1,     1,     1,     1,     3,     0,     1,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          4,     4,     3,     3,     3,     3,     3,     3,     4,     4, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          3,     2,     2,     2,     2,     2,     2,     2,     2,     0, 
          1,     1,     2,     0,     4,     0,     4,     2,     2,     4, 
          0,     6,     0,     4,     1,     1,     1,     1,     1,     3, 
          0,     1,     1,     2,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   245,   247,   246,   248,   250,   249,     0,     1,     0, 
         42,   242,     0,     8,     0,     4,     9,     0,    14,    16, 
        244,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   237,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,   162,     0,     0,   171,   167,   170,   168, 
        169,     0,     0,     0,   161,     0,     0,     0,    52,    19, 
          0,     0,     0,    23,    25,     0,     0,     0,     0,   164, 
          0,    46,    47,     0,    21,    25,     0,     0,     0,     0, 
          0,   173,     0,     0,     0,     0,     0,     0,   128,     0, 
          0,     0,     0,   126,     0,     0,     0,     0,   139,   140, 
        141,   142,   143,     0,     0,   176,     0,     0,    50,    51, 
          0,    54,    56,    55,     0,    49,     0,   240,     0,    17, 
          0,    24,    26,    28,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   134,   151,   132, 
          0,     0,   130,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   218,   219,   233,   224,     0, 
        226,   125,   221,     0,     0,   163,     0,     0,     0,     0, 
          0,    15,     0,    27,     0,     0,     0,     0,    29,     0, 
          0,     0,     0,   238,     0,   235,     0,   129,   236,     0, 
          0,     0,     0,   156,   127,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   148,   147,     0,     0,     0,   229,     0,     0, 
        223,   116,     0,   179,   177,    53,   165,     0,     0,    31, 
          0,     0,    33,     0,    30,     0,     0,   153,     0,     0, 
          0,     0,   158,     0,     0,     0,   124,   121,     0,     0, 
          0,     0,     0,     0,     0,     0,   231,     0,     0,   166, 
         34,    32,    37,     0,     0,     0,     0,     0,     0,   157, 
          0,   131,     0,   234,   225,     0,   230,   227,     0,   120, 
        119,   133,     0,     0,     0,     0,     0,     0,     0,    60, 
          0,     0,    69,     0,    89,    73,    77,    79,    75,    85, 
         87,    71,    81,    92,     0,     0,     0,    66,     0,   103, 
        122,   232,    64,     0,     0,     0,   160,     0,    83,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    91, 
        152,    68,     0,     0,    63,    62,     0,     0,     0,     0, 
          0,     0,     0,    86,    88,     0,     0,   104,    40,    57, 
          0,    38,    70,     0,    90,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    58, 
        111,    84,   108,     0,     0,    78,     0,     0,     0,     0, 
          0,     0,   110,     0,     0,     0,     0,   106,    72,    99, 
        101,     0,    96,     0,     0,     0,    80,    94,    76,     0, 
          0,     0,    82,    98,     0,     0,   107,     0,     0,     0, 
         74,     0,   102,     0,   100,     0,     0,   112, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   105,   131,   216, 
         36,    51,    72,    88,    37,    53,    74,   132,   133,   204, 
        134,   135,   205,   283,    65,   356,   338,   329,   384,   402, 
        339,    34,    21,    35,    66,    67,    68,   107,   199,   357, 
        340,   341,   358,   359,   360,   244,   368,   377,   439,   371, 
        374,   429,   372,   373,   378,   442,   388,   422,   375,   376, 
        370,   443,   444,   451,   452,   450,   423,   424,   432,   200, 
        218,   299,   192,   152,   147,   226,   220,   109,   110,   111, 
        112,   113,   222,   319,   223,   224,   114,    76,   121,   115, 
        116,   275,   193,   194,   266,   270,   326,   265,   219,    22, 
         23, 
    );
    protected static $yySindex = array(         -285,
          0,     0,  -262,  -172,  -172,    77,  -262,     0,     5,    62, 
        127,     0,     0,     0,     0,     0,     0,    48,     0,    41, 
          0,     0,   -44,     0,  -172,     0,     0,   150,     0,     0, 
          0,     0,   -79,   125,   172,   -79,   -79,     0,  -172,   187, 
        -44,   150,     0,   -45,   -27,     0,  1084,     0,     0,   -79, 
          8,   -79,   205,     0,   -79,   234,     0,     0,     0,     0, 
          0,   271,   297,   -47,     0,   333,   336,   340,     0,     0, 
        -79,   257,   342,     0,     0,  3979,   354,   731,   731,     0, 
       -249,     0,     0,  -115,     0,     0,   -79,    21,  4359,  4375, 
       4375,     0,  4375,  4375,  4375,  4375,  4375,  4375,     0,  4375, 
       4375,   357,   375,     0,     7,  1318,   -34,   374,     0,     0, 
          0,     0,     0,   326,   377,     0,  4375,     0,     0,     0, 
       3979,     0,     0,     0,   234,     0,   221,     0,   162,     0, 
       -303,     0,     0,     0,   123,   307,   327,  1362,  1401,  2449, 
        -20,   -20,  -273,   -20,   -20,   -20,    71,     0,     0,     0, 
         83,   -34,     0,  4375,  4375,  4375,  4375,  4375,  4375,  4375, 
       4375,  4375,  4103,  4226,  4375,  4375,  4375,  4375,  4375,  4375, 
       4375,  4375,  4263,  4350,  4375,  4375,  4375,  4375,  4375,  4375, 
       4375,  4375,  4375,  4375,   -32,     0,     0,     0,     0,   -87, 
          0,     0,     0,   -34,  4375,     0,  4375,  2449,   392,   374, 
        405,     0,   391,     0,   153,   197,   397,    77,     0,  4375, 
       4375,   -34,  4375,     0,   419,     0,   421,     0,     0,  4375, 
        397,   422,   418,     0,     0,  -197,  2476,  2503,  2503,  2503, 
       2503,  2503,  2503,  2503,  2503,  4375,  2503,  4375,  2503,  2503, 
       2503,  2503,  2449,   428,  2449,   -13,  3449,  2586,  4375,    53, 
       4375,    53,    95,    95,    95,    95,    95,     6,     6,  -273, 
       -273,  -273,     0,     0,  4375,  4375,   447,     0,  4375,  4375, 
          0,     0,  1318,     0,     0,     0,     0,   247,   162,     0, 
        451,  4375,     0,   154,     0,  2449,  2449,     0,  3305,  4375, 
       4375,   454,     0,   175,    83,   459,     0,     0,   -34,  2503, 
       2503,  4375,  2503,  2503,   472,   423,     0,  1428,  1564,     0, 
          0,     0,     0,  2449,   473,   474,   -34,   477,   399,     0, 
       4375,     0,  3305,     0,     0,  4375,     0,     0,    80,     0, 
          0,     0,    83,  3912,   482,   483,   397,   485,   189,     0, 
        486,   110,     0,   416,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  3912,  1818,   415,     0,  3912,     0, 
          0,     0,     0,   484,   397,    80,     0,  4375,     0,  4375, 
        504,   505,  3912,   506,   488,   495,   515,   517,   433,     0, 
          0,     0,   -17,   -49,     0,     0,   500,  3912,  1862,  4375, 
       4375,   182,  4375,     0,     0,  4375,  4375,     0,     0,     0, 
       3912,     0,     0,   445,     0,   512,  1898,   546,  1963,  1999, 
       2028,   487,   253,  4375,  3912,  4375,   258,  3912,   494,     0, 
          0,     0,     0,   253,   551,     0,  2064,   200,   577,   248, 
         19,   580,     0,  4375,   562,   282,  3912,     0,     0,     0, 
          0,   498,     0,    19,   -79,   583,     0,     0,     0,  3912, 
       4375,   567,     0,     0,   287,  3912,     0,  2299,  3912,   585, 
          0,  3912,     0,   516,     0,  3912,   513,     0, 
    );
    protected static $yyRindex= array(          503,
          0,     0,   -23,     0,     0,   100,   550,     0,    24,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -165,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   535,     0,     0,     0,     0,   -16, 
         51,     0,     0,   -96,   530,     0,     0,     0,     0,     0, 
        531,     0,     0,     0,     0,   -40,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   621,     0,     0, 
          0,     0,   540,     0,     0,   571,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  -160,     0,  1264, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    64,     0,     0,     0,    11,   229,    -1,     0,     0, 
          0,     0,     0,     0,   103,     0,   624,   -39,     0,     0, 
        625,     0,     0,     0,     0,     0,  -160,     0,     0,     0, 
          0,     0,     0,     0,     0,  1291,     0,     0,   120,   285, 
        614,   641,   876,   668,   712,   822,     0,     0,     0,     0, 
        626,   229,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   610,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   490,   286,     0,   149,   118,     0,   112, 
          0,     0,     0,     0,     0,     0,   250,   341,     0,     0, 
          0,   229,     0,     0,     0,     0,     0,     0,     0,   624, 
        331,     0,   639,     0,     0,     0,  1273,    35,    75,   256, 
        280,   736,  1205,  1328,  1538,     0,  2041,     0,  2091,  2119, 
       2199,  2458,   151,     0,   276,  3192,  3169,  3100,     0,  3124, 
          0,  3148,  2692,  2716,  2990,  3032,  2599,  2531,  2558,  1100, 
       1127,  1154,     0,     0,   624,   596,   161,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  3722,  3731,     0,  3216,   624, 
        624,     0,     0,   568,     0,   188,     0,     0,   229,  2704, 
       3264,     0,  3287,  3718,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   266,     0,     0,   229,     0,     0,     0, 
        624,     0,  3239,     0,     0,   624,     0,     0,   649,     0, 
          0,     0,     0,   572,     0,     0,   331,     0,     0,     0, 
        651,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   572,     0,     0,     0,  -110,     0, 
          0,     0,     0,   -43,   331,     0,     0,   637,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   572,     0,   657, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        572,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   657,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,  3753,     0,     0,     0,   676,     0,  3847, 
        593,     0,     0,   624,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   594,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,  -105,     0, 
          0,  -105,     0,     0,     0,   572,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   145,     0,     0,   713,   -33,     3,   -29, 
          0,     0,     0,   635,     0,     0,   130,     0,   514,   444, 
          0,     0,     0,  -171,   446,  3572,     0,     0,     0,     0, 
       -103,   683,   691,     0,   324,   653,     0,    -6,  1605,    59, 
        367,     0,   381,   363,     0,   -75,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   298,     0,     0,     0,     0,   317,     0,     0,    55, 
          0,     0,  -134,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   410,   449,   627,     0,     0,     0, 
        548,     0,   552,     0,     0,     0,     0,     0,     0,   724, 
          0, 
    );
    protected static $yyTable = array(40,
        166,   166,    43,    43,   166,   188,    44,    45,    20,   400, 
        122,     5,    39,    64,    67,    39,    43,   225,    43,    65, 
         70,    43,    73,   184,   172,    77,    18,    45,   182,   180, 
        206,   181,   179,   183,     1,   269,   207,    43,   185,   174, 
         69,    73,   184,   217,    64,    64,   175,   182,   177,   293, 
        123,   115,   183,    43,   115,    18,   189,    73,     5,    39, 
         10,    10,   296,    10,    10,    10,    10,    10,    10,    10, 
         10,    69,    69,   401,    39,   146,    45,   288,   146,    39, 
        171,    10,    10,    10,    10,    10,    10,     9,   191,   184, 
        124,   174,   146,   146,   182,   180,    25,   181,   179,   183, 
        166,   166,   297,   115,   166,   166,   166,   166,   166,   166, 
        166,    18,   175,    43,   177,   181,    10,    10,   181,   272, 
         26,   166,   166,   166,   166,   166,   166,   146,   186,   187, 
        108,   184,   181,   181,   243,   243,   182,   180,    28,   181, 
        179,   183,   298,   175,   125,   130,    10,    10,    10,    11, 
        367,    43,   114,   295,   166,   264,   166,   166,   115,   146, 
        136,   115,    39,   136,   322,   363,   208,   181,   243,    32, 
        114,    39,   267,   241,   243,   108,   115,   136,   136,   241, 
         38,   209,   332,    46,    62,    27,   166,   166,   166,   178, 
        306,   118,   178,   385,   118,   175,   279,   228,   228,   181, 
         85,   228,   228,   228,   228,   228,   228,   228,   118,   118, 
        284,   280,   136,    33,    18,    42,   128,    41,   228,   228, 
        228,   228,   228,   228,   123,   123,    47,    38,   123,   123, 
        123,   123,   123,   123,   123,    12,    13,    14,    15,    16, 
         17,   178,    38,   118,   136,   123,   123,   123,   123,   123, 
        123,   228,   268,   228,   228,    18,     5,     5,     5,     5, 
          5,     5,    67,    67,    50,   220,   220,    65,    65,   220, 
        220,   220,   220,   220,   220,   220,     5,     5,   123,   399, 
        123,   123,    52,   228,   228,   228,   220,   220,   220,   220, 
        220,   220,   387,    35,    78,    43,   182,   190,   185,   182, 
         12,    13,    14,    15,    16,    17,    36,   263,    35,    36, 
        123,   123,   123,   182,   182,   214,   180,   185,    71,   180, 
        183,   220,   220,   183,    36,   138,   117,    75,   138,   117, 
         38,    79,    43,    10,    10,    10,    80,   183,   183,    38, 
         29,    30,   138,   138,   117,   202,   150,   210,   182,    43, 
        241,   241,   220,   220,    10,   129,    12,    13,    14,    15, 
         16,    17,    81,    10,   185,   146,    80,   211,   180,    12, 
         12,    35,   183,    82,    35,   166,    83,   138,   117,    86, 
        182,   186,   187,    84,   241,    87,   178,   176,   186,   187, 
        241,   440,   441,   117,   166,   166,   150,   173,   174,   241, 
        241,   119,   120,   214,   183,   181,   185,   186,   187,   138, 
        215,    43,   214,   379,   151,   455,   153,   195,   196,   337, 
        197,   203,   221,    10,    10,    10,    10,    10,    10,    10, 
         10,    10,   276,    10,    10,    10,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,   277,   404,   146,   146,   146, 
        136,   278,   178,   176,   186,   187,   281,   282,   290,   412, 
        291,   295,   294,   166,   166,   166,   166,   166,   166,   166, 
        166,   166,   228,    12,   166,   166,   166,   166,   166,   166, 
        166,   166,   166,   166,   166,   302,   307,   181,   181,   181, 
        313,   228,   228,   207,   317,   318,   186,   187,   321,   123, 
         12,    13,    14,    15,    16,    17,   310,    57,    58,    59, 
         60,    61,   324,   330,   331,   325,   333,   463,   123,   123, 
        465,   334,   361,   362,   467,   364,   222,   222,   365,   366, 
        222,   222,   222,   222,   222,   222,   222,     2,   369,   381, 
        220,   383,   408,   390,   391,   393,   394,   222,   222,   222, 
        222,   222,   222,   395,   396,   129,   397,   398,   403,   220, 
        228,   228,   228,   228,   228,   228,   228,   228,   228,   413, 
        414,   228,   228,   228,   228,   228,   228,   228,   228,   228, 
        228,   228,   222,   222,     6,   416,   182,   123,   123,   123, 
        123,   123,   123,   123,   123,   123,   421,   428,   123,   123, 
        123,   123,   123,   123,   123,   123,   123,   123,   123,   434, 
        183,   420,   436,   222,   222,   138,   431,   437,   438,   445, 
        447,   448,   453,   456,   459,   464,   460,    43,   220,   220, 
        220,   220,   220,   220,   220,   220,   220,   468,   466,   220, 
        220,   220,   220,   220,   220,   220,   220,   220,   220,   220, 
        214,   214,    22,    20,   214,   214,   214,   214,   214,   214, 
        214,    48,   239,   172,   113,   172,   154,   117,   182,   182, 
        182,   214,   214,   214,   214,   214,   214,   215,   215,   155, 
        241,   215,   215,   215,   215,   215,   215,   215,   117,    59, 
        159,    61,   183,   183,   183,   117,    65,   138,   215,   215, 
        215,   215,   215,   215,   213,   213,   214,   214,   213,   213, 
        213,   213,   213,   213,   213,   113,    93,    95,    97,    24, 
        127,   285,   312,   311,    49,   213,   213,   213,   213,   213, 
        213,    48,   386,   215,   215,   392,   126,   214,   214,   382, 
        433,   454,   342,   320,   274,   271,    31,   201,   216,   216, 
          0,     0,   216,   216,   216,   216,   216,   216,   216,     0, 
        213,   213,     0,     0,   215,   215,     0,     0,     0,   216, 
        216,   216,   216,   216,   216,     0,   184,   426,     0,   184, 
        430,     0,     2,     2,     2,     2,     2,     2,     0,     0, 
          0,   213,   213,   184,   184,     0,     0,     0,     0,   449, 
          0,   222,     2,     2,   216,   216,     0,     0,     0,     0, 
          0,     0,   457,     0,     0,     0,     0,     0,   461,     0, 
        222,    54,    39,     2,     0,     0,     0,     0,   184,     6, 
          6,     6,     6,     6,     6,   216,   216,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     6, 
          6,     0,     0,     0,     0,     0,     0,     0,   217,   217, 
        184,     0,   217,   217,   217,   217,   217,   217,   217,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   217, 
        217,   217,   217,   217,   217,     0,     0,     0,     0,   222, 
        222,   222,   222,   222,   222,   222,   222,   222,     0,     0, 
        222,   222,   222,   222,   222,   222,   222,   222,   222,   222, 
        222,     0,   212,   212,   217,   217,   212,   212,   212,   212, 
        212,   212,   212,     0,     0,   214,     0,     0,     0,     0, 
          0,     0,     0,   212,   212,   212,   212,   212,   212,     0, 
          0,     0,     0,     0,   214,   217,   217,     0,     0,     0, 
          0,     0,   215,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   212,   212, 
          0,   215,     0,     0,     0,     0,     0,     0,     0,   213, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        118,    57,    58,    59,    60,    61,     0,     0,   213,   212, 
        212,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   214,   214,     0,     0,   214,   214,   214, 
        214,   214,     0,   216,   214,   214,   214,   214,   214,   214, 
        214,   214,   214,   214,   214,     0,     0,     0,     0,     0, 
        215,   215,   216,     0,   215,   215,   215,   215,   215,     0, 
          0,   215,   215,   215,   215,   215,   215,   215,   215,   215, 
        215,   215,     0,    63,     0,     0,   184,   213,   213,     0, 
          0,   213,   213,   213,   213,   213,    55,     0,   213,   213, 
        213,   213,   213,   213,   213,   213,   213,   213,   213,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   216,   216,     0,     0,   216,   216,   216,   216,   216, 
          0,     0,   216,   216,   216,   216,   216,   216,   216,   216, 
        216,   216,   216,   217,     0,     0,   203,   203,     0,     0, 
        203,   203,   203,   203,   203,   203,   203,     0,   184,   184, 
        184,     0,   217,     0,     0,     0,     0,   203,   203,   203, 
        203,   203,   203,   204,   204,     0,     0,   204,   204,   204, 
        204,   204,   204,   204,    54,    39,     0,     0,     0,     0, 
          0,     0,     0,     0,   204,   204,   204,   204,   204,   204, 
        205,   205,   203,   203,   205,   205,   205,   205,   205,   205, 
        205,     0,     0,     0,     0,     0,   212,     0,     0,     0, 
          0,   205,   205,   205,   205,   205,   205,     0,     0,   204, 
        204,   217,   217,   203,   203,   217,   217,   217,   217,   217, 
          0,     0,   217,   217,   217,   217,   217,   217,   217,   217, 
        217,   217,   217,     0,     0,   185,   205,   205,   185,     0, 
        204,   204,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   185,   185,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   212,   212,   205,   205,   212, 
        212,   212,   212,   212,     0,     0,   212,   212,   212,   212, 
        212,   212,   212,   212,   212,   212,   212,   185,     0,     0, 
        135,   135,     0,     0,   135,   135,     0,   135,     0,   135, 
        135,     0,     0,   145,     0,     0,   145,     0,     0,     0, 
          0,   135,   135,   135,   135,   135,   135,   166,   166,   185, 
        145,   145,   166,   166,     0,   166,   166,   166,     0,     0, 
          0,     0,     0,    56,    57,    58,    59,    60,    61,     0, 
        166,   166,   166,   166,   184,   172,   135,   135,     0,   182, 
        180,     0,   181,   179,   183,   145,     0,     0,   187,     0, 
          0,   187,     0,     0,     0,     0,     0,   175,   156,   177, 
        168,   166,     0,    62,   166,   187,   187,   135,   135,     0, 
          0,     0,     0,     0,     0,     0,     0,   145,   184,   172, 
          0,     0,   212,   182,   180,     0,   181,   179,   183,     0, 
          0,   171,     0,   166,   166,     0,    63,     0,     0,     0, 
        187,   175,   156,   177,   168,     0,     0,     0,     0,    55, 
        203,     0,     0,     0,     0,     0,     0,   184,   172,     0, 
          0,   170,   182,   180,     0,   181,   179,   183,     0,     0, 
          0,     0,   187,     0,     0,   171,     0,   204,     0,     0, 
        175,   156,   177,   168,   184,   172,     0,     0,     0,   182, 
        180,     0,   181,   179,   183,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   205,   170,     0,   175,   156,   177, 
        168,     0,     0,     0,   171,     0,     0,     0,     0,   203, 
        203,     0,     0,   203,   203,   203,   203,   203,     0,     0, 
        203,   203,   203,   203,   203,   203,   203,   203,   203,   203, 
        203,   171,     0,     0,   170,     0,   204,   204,     0,     0, 
        204,   204,   204,   204,   204,   185,     0,   204,   204,   204, 
        204,   204,   204,   204,   204,   204,   204,   204,     0,     0, 
          0,   170,   327,   205,   205,     0,     0,   205,   205,   205, 
        205,   205,     0,     0,   205,   205,   205,   205,   205,   205, 
        205,   205,   205,   205,   205,   135,     0,     0,   186,     0, 
          0,   186,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   135,   186,   186,     0,     0,     0, 
        184,   172,   166,   145,     0,   182,   180,     0,   181,   179, 
        183,     0,     0,     0,     0,     0,     0,   185,   185,   185, 
          0,     0,   166,   175,   156,   177,   168,     0,     0,   185, 
        186,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   171,   187,     0, 
          0,     0,   186,   135,   135,     0,     0,   135,   135,   135, 
        135,   135,     0,   185,   135,   135,   135,   135,   135,   135, 
        135,   135,   135,   135,   135,   145,   145,   170,   328,     0, 
        166,   166,   166,   166,   166,   166,   166,   166,   166,     0, 
         12,   166,   166,     0,   166,   166,   166,   166,   166,   166, 
        166,   166,   185,     0,     0,     0,     0,   178,   176,   186, 
        187,   157,   158,   159,   160,   162,     0,     0,   173,   174, 
        169,   154,   155,   161,   166,   165,   167,   163,   164,   185, 
        187,   187,   187,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   178,   176,   186,   187,   157,   158,   159,   160,   162, 
          0,     0,   173,   174,     0,   154,   155,   161,   166,   165, 
        167,   163,   164,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        178,   176,   186,   187,   157,   158,   159,   160,   162,     0, 
          0,   173,   174,   213,   154,   155,   161,   166,   165,   167, 
        163,   164,     0,     0,   292,     0,     0,   178,   176,   186, 
        187,   157,   158,   159,   160,   162,     0,     0,   173,   174, 
          0,   154,   155,   161,   166,   165,   167,   163,   164,     0, 
          0,     0,     0,     0,   184,   172,     0,     0,     0,   182, 
        180,     0,   181,   179,   183,     0,     0,     0,   186,   305, 
          0,     0,     0,     0,     0,   185,   380,   175,   156,   177, 
        168,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   315,   316,     0,     0,   184,   172, 
          0,     0,     0,   182,   180,     0,   181,   179,   183,     0, 
          0,   171,     0,     0,     0,     0,     0,     0,     0,     0, 
        405,   175,   156,   177,   168,   335,     0,     0,     0,     0, 
        336,     0,     0,     0,   184,   172,     0,     0,   415,   182, 
        180,   170,   181,   179,   183,     0,     0,     0,     0,     0, 
        186,   186,   186,     0,     0,   171,     0,   175,   156,   177, 
        168,     0,     0,   178,   176,   186,   187,   157,   158,   159, 
        160,   162,     0,     0,   173,   174,     0,   154,   155,   161, 
        166,   165,   167,   163,   164,   170,     0,     0,     0,     0, 
          0,   171,     0,     0,   406,     0,     0,     0,     0,   184, 
        172,     0,     0,     0,   182,   180,     0,   181,   179,   183, 
          0,     0,     0,     0,     0,     0,     0,     0,   425,     0, 
          0,   170,   175,   156,   177,   168,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   184,   172,     0,   446,   418, 
        182,   180,     0,   181,   179,   183,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   171,     0,   175,   156, 
        177,   168,     0,     0,   184,   172,     0,     0,   419,   182, 
        180,     0,   181,   179,   183,     0,     0,     0,     0,     0, 
          0,   210,     0,     0,   210,     0,   170,   175,   156,   177, 
        168,     0,   171,     0,     0,     0,     0,     0,   210,   210, 
        184,   172,     0,     0,   435,   182,   180,     0,   181,   179, 
        183,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   171,   170,   175,   156,   177,   168,     0,     0,   185, 
          0,   211,     0,   210,   211,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   211,   211, 
          0,   170,     0,     0,     0,     0,     0,   171,     0,   188, 
          0,     0,   188,     0,     0,   210,     0,     0,     0,     0, 
          0,     0,     0,   185,     0,     0,   188,   188,     0,     0, 
          0,     0,     0,   211,     0,     0,     0,   170,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   185, 
          0,   188,     0,     0,     0,   211,     0,   178,   176,   186, 
        187,   157,   158,   159,   160,   162,     0,     0,   173,   174, 
          0,   154,   155,   161,   166,   165,   167,   163,   164,   189, 
          0,     0,   189,   188,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   189,   189,     0,     0, 
          0,   178,   176,   186,   187,   157,   158,   159,   160,   162, 
          0,     0,   173,   174,   185,   154,   155,   161,   166,   165, 
        167,   163,   164,     0,     0,     0,     0,     0,     0,     0, 
          0,   189,     0,   417,     0,     0,     0,   178,   176,   186, 
        187,   157,   158,   159,   160,   162,     0,     0,   173,   174, 
        185,   154,   155,   161,   166,   165,   167,   163,   164,     0, 
          0,     0,     0,   189,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   184,   172,     0,     0,   185, 
        182,   180,     0,   181,   179,   183,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   462,     0,   175,   156, 
        177,   168,   178,   176,   186,   187,   157,   158,   159,   160, 
        162,   210,     0,   173,   174,   185,   154,   155,   161,   166, 
        165,   167,   163,   164,     0,     0,     0,     0,     0,     0, 
          0,     0,   171,     0,     0,     0,     0,     0,   178,   176, 
        186,   187,   157,   158,   159,   160,   162,     0,     0,   173, 
        174,     0,   154,   155,   161,   166,   165,   167,   163,   164, 
          0,   211,   170,     0,     0,     0,     0,   178,   176,   186, 
        187,   157,   158,   159,   160,   162,     0,     0,   173,   174, 
          0,   154,   155,   161,   166,   165,   167,   163,   164,   188, 
          0,     0,     0,   210,   210,   210,     0,     0,     0,     0, 
          0,     0,     0,   178,   176,   186,   187,   157,   158,   159, 
        160,   162,     0,     0,   173,   174,     0,   154,   155,   161, 
        166,   165,   167,   163,   164,   184,   172,     0,     0,     0, 
        182,   180,     0,   181,   179,   183,     0,     0,   190,     0, 
          0,   190,     0,   211,   211,   211,     0,     0,   175,   156, 
        177,   168,   184,   172,     0,   190,   190,   182,   180,     0, 
        181,   179,   183,     0,     0,     0,     0,     0,     0,   189, 
          0,   188,   188,   188,     0,   175,   156,   177,   168,   184, 
        172,     0,   171,     0,   182,   180,     0,   181,   179,   183, 
        190,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   175,   156,   177,   168,     0,     0,   201,   171, 
          0,   201,   170,   201,   201,   201,   201,     0,     0,     0, 
          0,     0,   190,     0,     0,     0,     0,     0,   201,   201, 
        201,   201,   201,   201,     0,   202,   171,     0,   202,   170, 
        202,   202,   202,   202,     0,     0,     0,     0,     0,     0, 
        185,   189,   189,   189,     0,   202,   202,   202,   202,   202, 
        202,     0,   184,   201,   201,     0,   170,   182,   180,     0, 
        181,   179,   183,     0,     0,     0,   206,     0,     0,   206, 
          0,     0,   206,     0,     0,   175,     0,   177,     0,     0, 
        202,   202,     0,     0,   201,   201,   206,   206,   206,   206, 
        206,   206,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   202,   202,     0,     0,     0,     0,     0,     0,     0, 
          0,   206,   206,     0,     0,     0,     0,     0,   178,   176, 
        186,   187,   157,   158,   159,   160,   162,     0,     0,   173, 
        174,     0,   154,   155,   161,   166,   165,   167,   163,   164, 
          0,     0,   206,   206,     0,     0,     0,     0,     0,   193, 
          0,     0,   193,     0,     0,   193,     0,     0,     0,     0, 
          0,     0,     0,     0,   191,     0,     0,   191,     0,   193, 
        193,     0,   193,   195,   193,     0,   195,     0,     0,   195, 
        185,   191,   191,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   195,   195,     0,   195,     0,   195,     0, 
          0,     0,     0,     0,   193,   193,     0,   185,   190,     0, 
          0,     0,     0,     0,     0,     0,   191,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   195,   195, 
          0,     0,     0,     0,   185,   193,   193,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   191,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   195, 
        195,     0,     0,     0,     0,     0,     0,     0,   178,   176, 
        186,   187,   157,   158,   159,   160,   162,     0,     0,   173, 
        174,   201,   154,   155,   161,   166,   165,   167,   163,   164, 
        190,   190,   190,     0,     0,   178,   176,   186,   187,   157, 
        158,   159,   160,   162,     0,     0,   173,   174,   202,     0, 
        155,   161,   166,   165,   167,   163,   164,   185,     0,     0, 
          0,     0,   178,   176,   186,   187,   157,   158,   159,   160, 
        162,     0,     0,   173,   174,     0,     0,     0,   161,   166, 
        165,   167,   163,   164,     0,     0,     0,     0,     0,   206, 
        201,   201,     0,     0,   201,   201,   201,   201,   201,     0, 
          0,   201,   201,   201,   201,   201,   201,   201,   201,   201, 
        201,   201,     0,     0,     0,     0,     0,   202,   202,     0, 
          0,   202,   202,   202,   202,   202,     0,     0,   202,   202, 
        202,   202,   202,   202,   202,   202,   202,   202,   202,     0, 
          0,     0,     0,     0,     0,   178,   176,   186,   187,     0, 
          0,     0,     0,     0,     0,     0,   173,   174,   206,   206, 
          0,     0,   206,   206,   206,   206,   206,     0,     0,   206, 
        206,   206,   206,   206,   206,   206,   206,   206,   206,   206, 
          0,     0,   193,     0,     0,     0,     0,   194,     0,     0, 
        194,     0,     0,   194,   191,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   195,   194,   194,     0, 
        194,     0,   194,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   196, 
          0,     0,   196,     0,     0,   196,     0,     0,     0,     0, 
          0,     0,   194,   194,     0,     0,     0,     0,     0,   196, 
        196,     0,   196,     0,   196,   193,   193,   193,   193,   193, 
          0,     0,   193,   193,   193,   193,   193,   193,   193,   193, 
        193,   193,   193,   194,   194,     0,   191,   191,   191,   195, 
        195,   195,   195,   195,   196,   196,   195,   195,   195,   195, 
        195,   195,   195,   195,   195,   195,   195,   208,     0,     0, 
        208,     0,     0,   208,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   196,   196,   208,   208,     0, 
        208,   197,   208,     0,   197,     0,     0,   197,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   197,   197,     0,   197,   198,   197,     0,   198,     0, 
          0,   198,   208,   208,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   198,   198,     0,   198,   209, 
        198,     0,   209,     0,     0,     0,   197,   197,     0,     0, 
          0,     0,     0,   208,   208,     0,   209,   209,     0,   209, 
          0,   209,   207,     0,     0,   207,     0,     0,     0,     0, 
        198,   198,     0,     0,     0,     0,     0,   197,   197,   207, 
        207,     0,   207,     0,   207,     0,   137,     0,     0,   137, 
          0,   209,   209,     0,     0,     0,     0,     0,     0,     0, 
          0,   198,   198,   137,   137,     0,   137,     0,   137,   144, 
          0,     0,   144,     0,   207,     0,     0,     0,     0,     0, 
          0,     0,   209,   209,     0,     0,   144,   144,     0,   144, 
          0,   144,     0,     0,   192,     0,     0,   192,   137,     0, 
          0,     0,     0,     0,     0,   207,   207,     0,     0,     0, 
        194,   192,   192,     0,     0,     0,     0,   199,     0,     0, 
        199,   144,     0,     0,     0,     0,     0,     0,     0,     0, 
        137,   184,   172,     0,   199,   199,   182,   180,     0,   181, 
        179,   183,     0,     0,     0,     0,   192,     0,     0,     0, 
          0,     0,   196,   144,   175,     0,   177,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   199, 
          0,     0,     0,     0,     0,     0,     0,     0,   192,     0, 
          0,     0,     0,   194,   194,   194,   194,   194,   171,     0, 
        194,   194,   194,   194,   194,   194,   194,   194,   194,   194, 
        194,   199,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   170,     0, 
        208,     0,     0,     0,     0,   196,   196,   196,   196,   196, 
          0,     0,   196,   196,   196,   196,   196,   196,   196,   196, 
        196,   196,   196,     0,   197,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   198,     0, 
          0,     0,     0,     0,     0,   184,   172,     0,     0,     0, 
        182,   180,     0,   181,   179,   183,     0,     0,     0,   209, 
          0,     0,     0,   208,   208,   208,   208,   208,   175,     0, 
        177,     0,   208,   208,   208,   208,   208,   208,   208,   208, 
        208,     0,   207,     0,     0,     0,     0,   197,   197,   197, 
        197,   197,     0,     0,     0,     0,   197,   197,   197,   197, 
        197,   197,   197,   197,   197,     0,   137,     0,     0,     0, 
          0,   198,   198,   198,   198,   198,     0,     0,     0,     0, 
        198,   198,   198,   198,   198,   198,   198,   198,   198,   144, 
          0,     0,   209,   209,   209,   209,   209,     0,     0,     0, 
          0,   209,   209,   209,   209,   209,   209,   209,   209,   209, 
          0,     0,     0,     0,   192,   207,   207,   207,   207,   207, 
          0,     0,     0,     0,   207,   207,   207,   207,   207,   207, 
        207,   207,   207,     0,     0,     0,   185,   199,     0,   137, 
        137,   137,   137,   137,     0,     0,     0,     0,   137,   137, 
        137,   137,   137,   137,   137,   137,   137,     0,     0,     0, 
          0,     0,   144,   144,   144,   144,   144,   106,     0,     0, 
          0,   144,   144,   144,   144,   144,   144,   144,   144,   144, 
        138,   139,   140,     0,   141,   142,   143,   144,   145,   146, 
          0,   148,   149,     0,     0,     0,   192,   192,   192,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   198,     0, 
          0,     0,   106,     0,     0,     0,     0,     0,     0,   199, 
        199,   199,     0,     0,   178,   176,   186,   187,     0,     0, 
          0,     0,     0,     0,     0,   173,   174,     0,     0,     0, 
          0,     0,     0,     0,     0,   227,   228,   229,   230,   231, 
        232,   233,   234,   235,   237,   239,   240,   241,   242,   243, 
        245,   246,   247,   248,   250,   252,   253,   254,   255,   256, 
        257,   258,   259,   260,   261,   262,     0,     0,   200,     0, 
        185,   200,   149,     0,     0,   149,   243,     0,   273,     0, 
          0,   150,     0,     0,   150,   200,   200,     0,     0,   149, 
        149,   286,   287,     0,   289,   109,     0,     0,   150,   150, 
          0,   198,   109,     0,     0,   109,     0,   109,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   300,     0,   301, 
        200,   109,     0,     0,   149,     0,   109,     0,     0,     0, 
        303,     0,   304,   150,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   198,   243,     0,     0, 
        308,   309,   200,   109,   109,     0,   149,     0,   178,   176, 
        186,   187,     0,   314,     0,   150,     0,     0,     0,   173, 
        174,   198,   198,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   323,     0,   109,     0,   109,   109,   105, 
          0,     0,     0,     0,     0,     0,   105,     0,     0,   105, 
          0,   105,   198,     0,     0,     0,     0,   198,     0,     0, 
          0,     0,     0,     0,     0,   105,     0,     0,     0,     0, 
        105,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   105,   105,   243, 
          0,   389,     0,     0,    95,     0,     0,     0,     0,     0, 
          0,    89,     0,     0,    93,     0,    94,     0,     0,     0, 
          0,   198,   407,     0,   409,     0,     0,   410,   411,   105, 
        354,   105,   105,     0,     0,   101,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   198,     0,   427,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    54,    39,     0,   198,     0,     0,     0,     0, 
          0,    95,   109,   109,   109,   109,   109,   109,    89,     0, 
          0,    93,   458,    94,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   355,     0,    92,    96,     0,     0, 
          0,     0,   101,     0,     0,     0,     0,     0,   200,     0, 
          0,     0,   149,     0,     0,     0,     0,     0,     0,     0, 
          0,   150,     0,     0,     0,   109,     0,     0,     0,    54, 
         39,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   109,   109,     0,     0,     0, 
          0,     0,   109,   109,   109,   109,     0,     0,   109,     0, 
          0,     0,     0,     0,    96,     0,   105,   105,   105,   105, 
        105,   105,   109,   109,   109,   109,     0,   109,   109,   109, 
        109,     0,   109,   109,   109,   109,   109,     0,     0,     0, 
        200,   200,   200,     0,   149,    95,     0,     0,     0,     0, 
          0,     0,    89,   150,     0,    93,     0,    94,     0,     0, 
          0,     0,     0,     0,   109,   109,     0,     0,     0,   105, 
          0,     0,     0,   236,     0,     0,   101,     0,     0,     0, 
          0,   102,    57,    58,    59,    60,    61,     0,     0,   105, 
        105,     0,     0,     0,     0,     0,   105,   105,   105,   105, 
          0,     0,   105,    54,    39,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   105,   105,   105,   105, 
          0,   105,   105,   105,   105,     0,   105,     0,   105,   105, 
        105,     0,     0,     0,   100,     0,     0,     0,    96,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   102,    57, 
         58,    59,    60,    61,    63,   103,     0,     0,   105,   105, 
          0,   104,   343,   344,   345,     0,     0,    99,    95,     0, 
          0,     0,     0,     0,     0,    89,     0,     0,    93,     0, 
         94,   346,   347,   348,   349,     0,   350,   351,    90,    91, 
          0,   352,     0,   353,     0,     0,   238,     0,     0,   101, 
          0,   100,     0,     0,     0,    95,     0,     0,     0,     0, 
          0,     0,    89,     0,     0,    93,     0,    94,     0,     0, 
          0,    63,   103,    97,    98,     0,    54,    39,   104,     0, 
          0,     0,     0,   249,    99,     0,   101,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    90,    91,     0,     0,     0, 
          0,    96,     0,    54,    39,     0,     0,     0,     0,     0, 
          0,     0,   102,    57,    58,    59,    60,    61,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         97,    98,    95,     0,     0,     0,     0,     0,    96,    89, 
          0,    95,    93,     0,    94,     0,     0,     0,    89,     0, 
          0,    93,     0,    94,     0,     0,     0,    95,     0,     0, 
        251,     0,     0,   101,    89,   100,     0,    93,     0,    94, 
          0,     0,   101,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    63,   103,     0,   101,     0, 
         54,    39,   104,     0,     0,     0,     0,     0,    99,    54, 
         39,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    54,    39,     0,     0,    90, 
         91,     0,     0,     0,     0,    96,     0,     0,     0,     0, 
          0,     0,     0,     0,    96,   102,    57,    58,    59,    60, 
         61,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         96,     0,     0,     0,    97,    98,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   102,    57,    58,    59,    60,    61,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   100,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    63,   103, 
          0,     0,     0,     0,     0,   104,     0,     0,     0,     0, 
          0,    99,     0,     0,     0,   100,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    90,    91,     0,    63,   103,     0,     0,     0, 
          0,     0,   104,     0,     0,     0,     0,     0,    99,   102, 
         57,    58,    59,    60,    61,     0,     0,     0,   136,    57, 
         58,    59,    60,    61,     0,     0,     0,    97,    98,    90, 
         91,     0,     0,     0,   102,    57,    58,    59,    60,    61, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   100,     0,    97,    98,     0,     0,     0,     0, 
          0,   100,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    63,   103,     0,     0,     0,   100,     0,   104, 
          0,   137,   103,     0,     0,    99,     0,     0,   104,     0, 
          0,     0,     0,     0,    99,     0,     0,    63,   103,     0, 
          0,     0,     0,     0,   104,     0,    90,    91,     0,     0, 
         99,     0,     0,     0,     0,    90,    91,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    90,    91,     0,     0,     0,     0,     0,     0,     0, 
          0,    97,    98,     0,     0,     0,     0,     0,     0,     0, 
         97,    98,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    97,    98, 
    );
    protected static $yyCheck = array(33,
         41,    41,    36,    37,    44,    40,    36,    37,     6,    59, 
        260,    35,    92,    47,   125,    59,    50,   152,    52,   125, 
         50,    55,    52,    37,    38,    55,   123,    44,    42,    43, 
        334,    45,    46,    47,   320,   123,   340,    71,   312,    41, 
         47,    71,    37,   147,    78,    79,    60,    42,    62,   221, 
        300,    41,    47,    87,    44,    35,    91,    87,   321,    92, 
         37,    38,   260,    40,    41,    42,    43,    44,    45,    46, 
         47,    78,    79,   123,    92,    41,    93,   212,    44,   123, 
         94,    58,    59,    60,    61,    62,    63,   260,   123,    37, 
        340,    93,    58,    59,    42,    43,    92,    45,    46,    47, 
         37,    38,   300,    93,    41,    42,    43,    44,    45,    46, 
         47,    35,    60,   147,    62,    41,    93,    94,    44,   195, 
         59,    58,    59,    60,    61,    62,    63,    93,   402,   403, 
         76,    37,    58,    59,   300,   301,    42,    43,    91,    45, 
         46,    47,   340,    41,   260,   125,   123,   124,   125,     5, 
         41,   185,    41,    44,    91,   185,    93,    94,    41,   125, 
         41,    44,    92,    44,   299,   337,    44,    93,   334,    25, 
         59,    92,   260,   334,   340,   121,    59,    58,    59,   340, 
        260,    59,   317,    39,   300,    59,   123,   124,   125,    41, 
        266,    41,    44,   365,    44,    93,    44,    37,    38,   125, 
         71,    41,    42,    43,    44,    45,    46,    47,    58,    59, 
        208,    59,    93,    64,   311,    44,    87,    93,    58,    59, 
         60,    61,    62,    63,    37,    38,    40,   260,    41,    42, 
         43,    44,    45,    46,    47,   280,   281,   282,   283,   284, 
        285,    93,   260,    93,   125,    58,    59,    60,    61,    62, 
         63,    91,   340,    93,    94,    35,   280,   281,   282,   283, 
        284,   285,   373,   374,   310,    37,    38,   373,   374,    41, 
         42,    43,    44,    45,    46,    47,   300,   301,    91,   383, 
         93,    94,   310,   123,   124,   125,    58,    59,    60,    61, 
         62,    63,   368,    44,    61,   329,    41,   332,   312,    44, 
        280,   281,   282,   283,   284,   285,    41,   340,    59,    44, 
        123,   124,   125,    58,    59,   333,    41,   312,   311,    44, 
         41,    93,    94,    44,    59,    41,    41,   123,    44,    44, 
        260,    61,   366,   310,   311,   312,    40,    58,    59,   260, 
        300,   301,    58,    59,    59,   125,    40,    41,    93,   383, 
        300,   301,   124,   125,   331,   335,   280,   281,   282,   283, 
        284,   285,   410,   340,   312,   331,    40,    41,    93,   410, 
        410,    41,    93,    41,    44,   312,    41,    93,    93,   123, 
        125,   402,   403,    44,   334,    44,   400,   401,   402,   403, 
        340,   373,   374,    40,   331,   332,    40,   411,   412,   300, 
        301,    78,    79,   333,   125,   331,   312,   402,   403,   125, 
        340,   445,   333,   355,    40,   445,   410,    44,    93,   340, 
         44,   260,   340,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    41,   410,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    41,   388,   413,   414,   415, 
        331,    61,   400,   401,   402,   403,   260,    61,    40,   401, 
         40,    44,    41,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,   410,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    58,    40,   413,   414,   415, 
         40,   331,   332,   340,    41,   321,   402,   403,    40,   312, 
        280,   281,   282,   283,   284,   285,   260,   261,   262,   263, 
        264,   265,    41,    41,    41,    93,    40,   459,   331,   332, 
        462,   123,    41,    41,   466,    41,    37,    38,   340,    44, 
         41,    42,    43,    44,    45,    46,    47,    35,   123,   125, 
        312,    58,   361,    40,    40,    40,    59,    58,    59,    60, 
         61,    62,    63,    59,    40,   335,    40,   125,    59,   331, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   125, 
         59,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    93,    94,    35,    40,   331,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   344,   340,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    59, 
        331,   125,   413,   124,   125,   331,   123,    41,   371,    40, 
         59,   340,   125,    41,    58,    41,   340,    93,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   125,   123,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         37,    38,   123,   123,    41,    42,    43,    44,    45,    46, 
         47,    41,   123,    93,    41,    41,    41,    58,   413,   414, 
        415,    58,    59,    60,    61,    62,    63,    37,    38,    41, 
        340,    41,    42,    43,    44,    45,    46,    47,    93,    41, 
        123,    41,   413,   414,   415,    59,   125,   413,    58,    59, 
         60,    61,    62,    63,    37,    38,    93,    94,    41,    42, 
         43,    44,    45,    46,    47,    59,    41,   125,   125,     7, 
         86,   208,   279,   278,    42,    58,    59,    60,    61,    62, 
         63,    41,   366,    93,    94,   373,    84,   124,   125,   359, 
        424,   444,   333,   295,   197,   194,    23,   121,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    46,    47,    -1, 
         93,    94,    -1,    -1,   124,   125,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    41,   415,    -1,    44, 
        418,    -1,   280,   281,   282,   283,   284,   285,    -1,    -1, 
         -1,   124,   125,    58,    59,    -1,    -1,    -1,    -1,   437, 
         -1,   312,   300,   301,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,   450,    -1,    -1,    -1,    -1,    -1,   456,    -1, 
        331,    91,    92,   321,    -1,    -1,    -1,    -1,    93,   280, 
        281,   282,   283,   284,   285,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   300, 
        301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
        125,    -1,    41,    42,    43,    44,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    37,    38,    93,    94,    41,    42,    43,    44, 
         45,    46,    47,    -1,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,   331,   124,   125,    -1,    -1,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,   331,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,   312,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   331,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,   333,    -1,    -1,   331,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,   346,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   312,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    46,    47,    -1,   413,   414, 
        415,    -1,   331,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    91,    92,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         37,    38,    93,    94,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    93, 
         94,   400,   401,   124,   125,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    41,    93,    94,    44,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   124,   125,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    93,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    -1,    44,    -1,    46, 
         47,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    37,    38,   125, 
         58,    59,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         60,    61,    62,    63,    37,    38,    93,    94,    -1,    42, 
         43,    -1,    45,    46,    47,    93,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    91,    -1,   300,    94,    58,    59,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    94,    -1,   123,   124,    -1,   333,    -1,    -1,    -1, 
         93,    60,    61,    62,    63,    -1,    -1,    -1,    -1,   346, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,   124,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,   125,    -1,    -1,    94,    -1,   331,    -1,    -1, 
         60,    61,    62,    63,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,   124,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    94,    -1,    -1,   124,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,   331,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,   124,   125,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   312,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    58,    59,    -1,    -1,    -1, 
         37,    38,   312,   331,    -1,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,   413,   414,   415, 
         -1,    -1,   332,    60,    61,    62,    63,    -1,    -1,   312, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,   331,    -1, 
         -1,    -1,   125,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,   312,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   413,   414,   124,   125,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
        410,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,   312,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   312, 
        413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,   220,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,   331,   265, 
         -1,    -1,    -1,    -1,    -1,   312,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   290,   291,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         59,    60,    61,    62,    63,   321,    -1,    -1,    -1,    -1, 
        326,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,   124,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
        413,   414,   415,    -1,    -1,    94,    -1,    60,    61,    62, 
         63,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,   124,    -1,    -1,    -1,    -1, 
         -1,    94,    -1,    -1,   390,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   414,    -1, 
         -1,   124,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,   434,    41, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    60,    61, 
         62,    63,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,    -1,    44,    -1,   124,    60,    61,    62, 
         63,    -1,    94,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         37,    38,    -1,    -1,    41,    42,    43,    -1,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    94,   124,    60,    61,    62,    63,    -1,    -1,   312, 
         -1,    41,    -1,    93,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,   124,    -1,    -1,    -1,    -1,    -1,    94,    -1,    41, 
         -1,    -1,    44,    -1,    -1,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   312,    -1,    -1,    58,    59,    -1,    -1, 
         -1,    -1,    -1,    93,    -1,    -1,    -1,   124,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    93,    -1,    -1,    -1,   125,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    41, 
         -1,    -1,    44,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   312,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    -1,   331,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        312,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,   312, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    60,    61, 
         62,    63,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,   331,    -1,   411,   412,   312,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,   331,   124,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   331, 
         -1,    -1,    -1,   413,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    41,    -1, 
         -1,    44,    -1,   413,   414,   415,    -1,    -1,    60,    61, 
         62,    63,    37,    38,    -1,    58,    59,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,   413,   414,   415,    -1,    60,    61,    62,    63,    37, 
         38,    -1,    94,    -1,    42,    43,    -1,    45,    46,    47, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    38,    94, 
         -1,    41,   124,    43,    44,    45,    46,    -1,    -1,    -1, 
         -1,    -1,   125,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    38,    94,    -1,    41,   124, 
         43,    44,    45,    46,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,   413,   414,   415,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    37,    93,    94,    -1,   124,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    38,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    60,    -1,    62,    -1,    -1, 
         93,    94,    -1,    -1,   124,   125,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1,    58, 
         59,    -1,    61,    38,    63,    -1,    41,    -1,    -1,    44, 
        312,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,    -1,    -1,    93,    94,    -1,   312,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,   312,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   331,   414,   415,   416,   417,   418,   419,   420,   421, 
        413,   414,   415,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   331,    -1, 
        415,   416,   417,   418,   419,   420,   421,   312,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,    -1,    -1,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    -1,    -1,   331, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   411,   412,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   331,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    -1,    63,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   124,   125,    -1,   413,   414,   415,   404, 
        405,   406,   407,   408,    93,    94,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    58,    59,    -1, 
         61,    38,    63,    -1,    41,    -1,    -1,    44,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    38,    63,    -1,    41,    -1, 
         -1,    44,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    41, 
         63,    -1,    44,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    58,    59,    -1,    61, 
         -1,    63,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   124,   125,    58, 
         59,    -1,    61,    -1,    63,    -1,    41,    -1,    -1,    44, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    58,    59,    -1,    61,    -1,    63,    41, 
         -1,    -1,    44,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    41,    -1,    -1,    44,    93,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
        331,    58,    59,    -1,    -1,    -1,    -1,    41,    -1,    -1, 
         44,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        125,    37,    38,    -1,    58,    59,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
         -1,    -1,   331,   125,    60,    -1,    62,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    94,    -1, 
        411,   412,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1, 
        331,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    60,    -1, 
         62,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,   331,    -1,    -1,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,    -1,    -1,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,   331,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   331, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,   331,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,   312,   331,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,    -1,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    76,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         89,    90,    91,    -1,    93,    94,    95,    96,    97,    98, 
         -1,   100,   101,    -1,    -1,    -1,   413,   414,   415,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   117,    -1, 
         -1,    -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,   413, 
        414,   415,    -1,    -1,   400,   401,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   411,   412,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   154,   155,   156,   157,   158, 
        159,   160,   161,   162,   163,   164,   165,   166,   167,   168, 
        169,   170,   171,   172,   173,   174,   175,   176,   177,   178, 
        179,   180,   181,   182,   183,   184,    -1,    -1,    41,    -1, 
        312,    44,    41,    -1,    -1,    44,   195,    -1,   197,    -1, 
         -1,    41,    -1,    -1,    44,    58,    59,    -1,    -1,    58, 
         59,   210,   211,    -1,   213,    33,    -1,    -1,    58,    59, 
         -1,   220,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   238, 
         93,    59,    -1,    -1,    93,    -1,    64,    -1,    -1,    -1, 
        249,    -1,   251,    93,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   265,   266,    -1,    -1, 
        269,   270,   125,    91,    92,    -1,   125,    -1,   400,   401, 
        402,   403,    -1,   282,    -1,   125,    -1,    -1,    -1,   411, 
        412,   290,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   302,    -1,   123,    -1,   125,   126,    33, 
         -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43, 
         -1,    45,   321,    -1,    -1,    -1,    -1,   326,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    59,    -1,    -1,    -1,    -1, 
         64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    92,   368, 
         -1,   370,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,   390,   391,    -1,   393,    -1,    -1,   396,   397,   123, 
         59,   125,   126,    -1,    -1,    64,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   414,    -1,   416,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    91,    92,    -1,   434,    -1,    -1,    -1,    -1, 
         -1,    33,   260,   261,   262,   263,   264,   265,    40,    -1, 
         -1,    43,   451,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   123,    -1,    58,   126,    -1,    -1, 
         -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    -1,    -1,   313,    -1,    -1,    -1,    91, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,   341,   342,   343,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,   126,    -1,   260,   261,   262,   263, 
        264,   265,   360,   361,   362,   363,    -1,   365,   366,   367, 
        368,    -1,   370,   371,   372,   373,   374,    -1,    -1,    -1, 
        413,   414,   415,    -1,   413,    33,    -1,    -1,    -1,    -1, 
         -1,    -1,    40,   413,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,   313, 
         -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,   333, 
        334,    -1,    -1,    -1,    -1,    -1,   340,   341,   342,   343, 
         -1,    -1,   346,    91,    92,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   360,   361,   362,   363, 
         -1,   365,   366,   367,   368,    -1,   370,    -1,   372,   373, 
        374,    -1,    -1,    -1,   313,    -1,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,   333,   334,    -1,    -1,   402,   403, 
         -1,   340,   341,   342,   343,    -1,    -1,   346,    33,    -1, 
         -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    43,    -1, 
         45,   360,   361,   362,   363,    -1,   365,   366,   367,   368, 
         -1,   370,    -1,   372,    -1,    -1,    61,    -1,    -1,    64, 
         -1,   313,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,   333,   334,   402,   403,    -1,    91,    92,   340,    -1, 
         -1,    -1,    -1,    61,   346,    -1,    64,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1, 
         -1,   126,    -1,    91,    92,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    33,    -1,    -1,    -1,    -1,    -1,   126,    40, 
         -1,    33,    43,    -1,    45,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    33,    -1,    -1, 
         61,    -1,    -1,    64,    40,   313,    -1,    43,    -1,    45, 
         -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,   334,    -1,    64,    -1, 
         91,    92,   340,    -1,    -1,    -1,    -1,    -1,   346,    91, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    91,    92,    -1,    -1,   367, 
        368,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   126,   260,   261,   262,   263,   264, 
        265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        126,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,   334, 
         -1,    -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1, 
         -1,   346,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   367,   368,    -1,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,   402,   403,   367, 
        368,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   313,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   333,   334,    -1,    -1,    -1,   313,    -1,   340, 
         -1,   333,   334,    -1,    -1,   346,    -1,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,    -1,    -1,   333,   334,    -1, 
         -1,    -1,    -1,    -1,   340,    -1,   367,   368,    -1,    -1, 
        346,    -1,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   367,   368,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', 
      'T_YIELD_FROM', NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 
      'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 
      'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 
      'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 
      'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 
      'T_SHL', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 184 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 199 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 199 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 210 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 211 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 215 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 222 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 227 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 233 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 233 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 242 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 242 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 253 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 254 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 258 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 259 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 263 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 264 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 268 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 269 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 273 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 274 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 275 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 279 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 280 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 284 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 285 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 291 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 301 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 307 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 308 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 314 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 314 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 328 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 329 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 334 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 335 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 339 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 340 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 344 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 348 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 353 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 361 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 362 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 366 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 367 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 372 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 378 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 381 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 384 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassNameAccessNode(new TypeName($yyVals[-2+$yyTop])));
    } break;

    case 57:  #line 391 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 392 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 59:  #line 396 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 60:  #line 397 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 61:  #line 401 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 62:  #line 402 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 63:  #line 406 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 407 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 65:  #line 415 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 67:  #line 420 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 68:  #line 421 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 69:  #line 425 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 70:  #line 425 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 71:  #line 428 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 72:  #line 428 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 73:  #line 433 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 74:  #line 433 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 75:  #line 443 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 76:  #line 443 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 77:  #line 448 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 78:  #line 448 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 79:  #line 452 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 80:  #line 452 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 81:  #line 456 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 82:  #line 456 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 83:  #line 460 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 84:  #line 460 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 85:  #line 465 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 87:  #line 466 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 89:  #line 467 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 90:  #line 467 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 92:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 93:  #line 475 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 94:  #line 476 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 95:  #line 480 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 97:  #line 485 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 98:  #line 486 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 99:  #line 490 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 100:  #line 490 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 101:  #line 494 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 102:  #line 494 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 103:  #line 500 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 104:  #line 501 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 105:  #line 505 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 106:  #line 506 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 107:  #line 506 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 109:  #line 515 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 110:  #line 516 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 111:  #line 520 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 112:  #line 520 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 113:  #line 530 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 115:  #line 535 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 116:  #line 536 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 117:  #line 540 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 119:  #line 545 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 120:  #line 550 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 121:  #line 558 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 122:  #line 561 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 123:  #line 564 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 124:  #line 567 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ClassNameAccessNode(NULL);
    } break;

    case 125:  #line 573 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 126:  #line 579 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 127:  #line 579 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 128:  #line 585 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 129:  #line 585 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 130:  #line 589 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 131:  #line 589 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 132:  #line 599 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 133:  #line 599 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 134:  #line 608 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 135:  #line 611 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 136:  #line 614 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 137:  #line 617 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 138:  #line 620 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldFromNode($yyVals[0+$yyTop]));
    } break;

    case 139:  #line 623 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 140:  #line 626 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 141:  #line 629 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 142:  #line 632 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 143:  #line 635 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 144:  #line 639 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 145:  #line 645 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 146:  #line 651 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 147:  #line 657 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 148:  #line 662 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 149:  #line 667 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 150:  #line 670 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 151:  #line 673 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 152:  #line 676 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-5+$yyTop], (array)$yyVals[-1+$yyTop], $yyVals[-3+$yyTop]));
    } break;

    case 153:  #line 679 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 154:  #line 690 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 156:  #line 695 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 157:  #line 696 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 158:  #line 700 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 159:  #line 704 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 160:  #line 705 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 162:  #line 710 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 163:  #line 710 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 164:  #line 711 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 711 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 166:  #line 715 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 167:  #line 721 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 168:  #line 722 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 169:  #line 723 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 170:  #line 724 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 171:  #line 725 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 172:  #line 729 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 173:  #line 732 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 174:  #line 735 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 175:  #line 738 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 176:  #line 744 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 177:  #line 745 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 178:  #line 749 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 180:  #line 754 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 181:  #line 758 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 182:  #line 759 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 183:  #line 760 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 184:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 185:  #line 762 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 186:  #line 763 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 187:  #line 764 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 188:  #line 765 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 766 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 767 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 192:  #line 769 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 193:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 196:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 197:  #line 777 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 778 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 779 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 200:  #line 780 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 201:  #line 784 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 204:  #line 787 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 205:  #line 788 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 789 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 207:  #line 790 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 209:  #line 792 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 793 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 211:  #line 794 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 798 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 213:  #line 799 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 214:  #line 800 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 215:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 216:  #line 802 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 217:  #line 803 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 218:  #line 807 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 219:  #line 808 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 220:  #line 813 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 222:  #line 818 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 223:  #line 819 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 224:  #line 823 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 225:  #line 823 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 226:  #line 826 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 227:  #line 826 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 228:  #line 829 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 229:  #line 832 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 230:  #line 835 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 231:  #line 838 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 232:  #line 838 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 233:  #line 841 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 234:  #line 841 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 237:  #line 854 "src/main/jay/grammars/php.jay"
    { $yyVal= 'callable' === $yyVals[0+$yyTop] ? new TypeName('->var', null) : new TypeName($yyVals[0+$yyTop]); } break;

    case 238:  #line 858 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 239:  #line 862 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 240:  #line 863 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 241:  #line 869 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 242:  #line 870 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 243:  #line 874 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 244:  #line 875 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 245:  #line 879 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 246:  #line 880 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 247:  #line 881 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 248:  #line 882 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 249:  #line 883 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 250:  #line 884 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2470 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
