<?php
#line 2 "src/main/jay/grammars/php.jay"
namespace xp\compiler\syntax\php;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassNameAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\SilenceOperatorNode;
use xp\compiler\ast\DynamicInstanceCreationNode;
use xp\compiler\ast\DynamicInstanceOfNode;
use xp\compiler\ast\DynamicVariableReferenceNode;
use xp\compiler\ast\NoopNode;
use xp\compiler\ast\YieldNode;
use xp\compiler\ast\UnpackNode;
#line 82 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_SHR= 420;
    const T_SHL= 421;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_DOUBLE_ARROW= 413;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 422;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_NAMESPACE= 320;
    const T_USE= 321;
    const T_OBJECT_OPERATOR= 332;
    const T_ARRAY= 333;
    const T_FUNCTION= 334;
    const T_CONST= 335;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_ELLIPSIS= 423;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     4, 
          4,     8,     8,    11,     3,    15,     3,    12,    12,    13, 
         13,    16,    16,    14,    14,    18,    18,    18,    19,    19, 
         20,    20,    22,    23,    24,    24,    28,    21,    29,    29, 
          9,     9,    32,    32,    34,    34,    34,    36,    36,    37, 
         37,    35,    35,    35,    35,    35,    30,    30,    27,    27, 
         41,    41,    42,    42,    42,    42,    40,    40,    43,    43, 
         47,    45,    48,    45,    50,    45,    52,    45,    54,    45, 
         55,    45,    56,    45,    58,    45,    60,    45,    61,    45, 
         62,    45,    45,    45,    53,    53,    57,    57,    63,    63, 
         65,    64,    66,    64,    44,    44,    49,    67,    49,    59, 
         68,    68,    70,    69,    39,    39,    39,    71,    71,    51, 
         51,    72,    72,    46,    46,    73,    73,    74,    74,    74, 
         74,    26,    76,    26,    77,    26,    78,    26,    79,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    26, 
         26,    26,    26,    26,    26,    26,    26,    26,    26,    85, 
         85,    86,    86,    87,    38,    89,    38,    90,    38,    25, 
         25,    25,    25,    25,    25,    88,    88,    88,    88,    91, 
         91,    93,    93,    92,    80,    80,    80,    80,    80,    80, 
         80,    80,    80,    80,    80,    80,    81,    81,    81,    81, 
         81,    81,    81,    81,    82,    82,    82,    82,    82,    82, 
         82,    82,    82,    82,    82,    82,    83,    83,    83,    83, 
         83,    83,    84,    84,    75,    75,    94,    94,    96,    95, 
         97,    95,    95,    95,    95,    98,    95,    99,    95,    31, 
         31,    10,   100,    17,    17,    33,    33,   101,   101,   102, 
        102,   102,   102,   102,   102, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     3,     1, 
          3,     1,     2,     0,     9,     0,     8,     0,     2,     0, 
          2,     0,     2,     2,     0,     1,     2,     1,     2,     3, 
          2,     3,     3,     3,     0,     2,     0,     9,     0,     2, 
          5,     1,     1,     3,     2,     5,     5,     1,     3,     3, 
          3,     1,     5,     3,     3,     3,     1,     3,     0,     1, 
          1,     3,     3,     4,     2,     3,     0,     1,     1,     2, 
          0,     4,     0,     7,     0,    10,     0,     8,     0,     6, 
          0,     8,     0,     8,     0,     6,     0,     3,     0,     3, 
          0,     4,     2,     1,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     1, 
          1,     2,     0,     9,     0,     1,     3,     2,     1,     0, 
          1,     1,     3,     0,     1,     4,     4,     1,     4,     1, 
          1,     2,     0,     3,     0,     3,     0,     5,     0,     6, 
          2,     1,     2,     4,     1,     1,     1,     1,     1,     5, 
          3,     3,     3,     3,     4,     4,     2,     8,     4,     0, 
          4,     1,     3,     2,     1,     0,     4,     0,     5,     1, 
          1,     1,     1,     1,     1,     0,     1,     1,     1,     1, 
          3,     0,     1,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     4,     4,     3,     3,     3,     3, 
          3,     3,     4,     4,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     3,     3,     2,     2,     2,     2, 
          2,     2,     2,     2,     0,     1,     1,     2,     0,     4, 
          0,     4,     2,     2,     4,     0,     6,     0,     4,     1, 
          1,     1,     1,     1,     3,     0,     1,     1,     2,     1, 
          1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   250,   252,   251,   253,   255,   254,     0,     1,     0, 
         42,   247,     0,     8,     0,     4,     9,     0,    14,    16, 
        249,    11,     0,     0,     0,     0,     0,    12,     0,     0, 
          0,     0,   242,     0,     0,    13,     0,    41,    44,     0, 
          0,     0,     0,   166,     0,     0,   175,   171,   174,   172, 
        173,     0,     0,     0,   165,     0,     0,     0,    52,    19, 
          0,     0,     0,    23,    25,     0,     0,     0,     0,   168, 
          0,    46,    47,     0,    21,    25,     0,     0,     0,     0, 
        177,     0,     0,     0,     0,     0,     0,   135,     0,     0, 
          0,     0,   133,     0,     0,     0,     0,   145,   146,   147, 
        148,   149,     0,     0,   180,     0,     0,    50,    51,     0, 
         54,    56,    55,     0,    49,     0,   245,     0,    17,     0, 
         24,    26,    28,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   141,   157,   139,     0,     0, 
        137,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   223,   224,   238,   229,     0,   231, 
        132,   226,     0,     0,   167,     0,     0,     0,     0,     0, 
          0,    15,     0,    27,     0,     0,     0,     0,    29,     0, 
          0,     0,     0,   243,     0,   240,     0,   136,   241,     0, 
          0,     0,     0,     0,    60,     0,   134,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   154,   153,     0,     0,     0, 
        234,     0,     0,   228,   123,     0,   183,   181,     0,    53, 
          0,   169,     0,     0,    31,     0,     0,    33,     0,    30, 
          0,     0,   159,     0,     0,     0,     0,    65,     0,     0, 
          0,     0,     0,     0,   131,   128,     0,     0,     0,     0, 
          0,     0,     0,     0,   236,     0,     0,   117,   170,    34, 
         32,    37,     0,     0,     0,     0,    66,     0,     0,    63, 
          0,    62,     0,   138,     0,   239,   230,     0,   235,   232, 
          0,   127,   126,   140,     0,     0,    64,     0,     0,     0, 
          0,     0,   162,    71,     0,    91,    75,    79,    81,    77, 
         87,    89,    73,    83,    94,     0,     0,     0,    68,     0, 
        105,   129,   237,     0,   164,     0,   161,     0,    85,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    93, 
        158,    70,     0,     0,   163,     0,     0,     0,     0,     0, 
          0,     0,    88,    90,     0,     0,   106,    40,    57,     0, 
         38,    72,     0,    92,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         58,   113,    86,   110,     0,     0,    80,     0,     0,     0, 
          0,     0,     0,   112,     0,     0,     0,     0,   108,    74, 
        101,   103,     0,    98,     0,     0,     0,    82,    96,    78, 
          0,     0,     0,    84,   100,     0,     0,   109,     0,     0, 
          0,    76,     0,   104,     0,   102,     0,     0,   114, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    19,    10,     4,     7,     8,   104,   130,   216, 
         36,    51,    72,    88,    37,    53,    74,   131,   132,   204, 
        133,   134,   205,   288,    65,   367,   223,   341,   394,   411, 
        224,    34,    21,    35,    66,    67,    68,   106,   199,   368, 
        225,   226,   369,   370,   371,   246,   378,   387,   450,   381, 
        416,   384,   440,   382,   383,   388,   453,   397,   433,   385, 
        386,   380,   454,   455,   462,   463,   461,   434,   435,   443, 
        200,   417,   218,   307,   191,   150,   145,   228,   220,   108, 
        109,   110,   111,   112,   329,   352,   353,   113,    76,   120, 
        114,   115,   278,   192,   193,   269,   273,   338,   268,   219, 
         22,    23, 
    );
    protected static $yySindex = array(         -214,
          0,     0,  -207,  -131,  -131,    54,  -207,     0,    44,    98, 
        133,     0,     0,     0,     0,     0,     0,    52,     0,   -18, 
          0,     0,   135,     0,  -131,     0,     0,   148,     0,     0, 
          0,     0,   -65,   105,   183,   -65,   -65,     0,  -131,   210, 
        135,   148,     0,   -55,   -48,     0,  2743,     0,     0,   -65, 
        -36,   -65,   164,     0,   -65,   232,     0,     0,     0,     0, 
          0,   237,   269,   -99,     0,   275,   280,   288,     0,     0, 
        -65,   236,   317,     0,     0,  4252,   334,   409,   409,     0, 
       -219,     0,     0,  -212,     0,     0,   -65,   175,  4533,  4632, 
          0,  4632,  4632,  4632,  4632,  4632,  4632,     0,  4632,  4632, 
        339,   341,     0,   -23,  1463,   -30,   349,     0,     0,     0, 
          0,     0,   302,   353,     0,   -27,     0,     0,     0,  4252, 
          0,     0,     0,   232,     0,   359,     0,   143,     0,  -187, 
          0,     0,     0,    23,   315,   332,  1591,  1626,    -4,    -4, 
       -257,    -4,    -4,    -4,   -49,     0,     0,     0,   -61,   -30, 
          0,  4632,  4632,  4632,  4632,  4632,  4632,  4632,  4632,  4632, 
       4281,  4307,  4632,  4632,  4632,  4632,  4632,  4632,  4632,  4632, 
       4519,  4544,  4632,  4632,  4632,  4632,  4632,  4632,  4632,  4632, 
       4632,  4632,  4632,   -67,     0,     0,     0,     0,   -66,     0, 
          0,     0,   -30,  4632,     0,  4632,  4632,  2478,   365,   381, 
        385,     0,   368,     0,    32,   174,   375,    54,     0,  4632, 
       4632,   -30,  4632,     0,   397,     0,   398,     0,     0,   -27, 
        375,    99,   402,  -329,     0,   400,     0,  -210,  2575,  2645, 
       2645,  2645,  2645,  2645,  2645,  2645,  2645,  4632,  2645,  4632, 
       2645,  2645,  2645,  2645,  2478,   394,  2478,   707,   642,  1887, 
       4632,    80,  4632,    80,   -13,   -13,   -13,   -13,   -13,     2, 
          2,   -20,   -20,   -20,  -257,     0,     0,   -27,  4632,   414, 
          0,  4632,  4632,     0,     0,  1463,     0,     0,  2478,     0, 
        -27,     0,   370,   143,     0,   421,  4632,     0,   131,     0, 
       2478,  2478,     0,  2698,   -27,   -27,   438,     0,   375,   166, 
        375,   145,   -61,   446,     0,     0,   -30,  2645,  2645,  4632, 
       2645,  2645,   447,   406,     0,  1762,  1859,     0,     0,     0, 
          0,     0,  2478,   463,   464,   -30,     0,   467,   386,     0, 
        375,     0,   -27,     0,  2698,     0,     0,   -27,     0,     0, 
        -61,     0,     0,     0,   171,  4158,     0,   471,   472,   473, 
        375,   156,     0,     0,   392,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  4158,  1926,   393,     0,  4158, 
          0,     0,     0,   461,     0,   171,     0,  4632,     0,  4632, 
        480,   481,  4158,   483,   477,   478,   486,   500,   422,     0, 
          0,     0,   -45,    10,     0,   489,  4158,  2023,  4632,  4632, 
        188,  4632,     0,     0,  4632,  4632,     0,     0,     0,  4158, 
          0,     0,   427,     0,  2478,   494,   349,  2051,   517,  2078, 
       2148,  2189,   434,   220,  4632,  4158,  4632,   225,  4158,   445, 
          0,     0,     0,     0,   220,   510,     0,  2259,   168,   536, 
        222,    38,   543,     0,  4632,   525,   254,  4158,     0,     0, 
          0,     0,   490,     0,    38,   -65,   555,     0,     0,     0, 
       4158,  4632,   539,     0,     0,   262,  4158,     0,  2312,  4158, 
        564,     0,  4158,     0,   491,     0,  4158,   511,     0, 
    );
    protected static $yyRindex= array(           42,
          0,     0,   250,     0,     0,    84,   261,     0,   307,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -221,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   513,     0,     0,     0,     0,    16, 
        -93,     0,     0,   -72,   493,     0,     0,     0,     0,     0, 
        514,     0,     0,     0,     0,   -32,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   604,     0,     0, 
          0,     0,   523,     0,     0,   556,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  -186,     0,  1292, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        404,     0,     0,     0,    22,   566,    -6,     0,     0,     0, 
          0,     0,     0,    -1,     0,   609,   -39,     0,     0,   614, 
          0,     0,     0,     0,     0,  -186,     0,     0,     0,     0, 
          0,     0,     0,     0,  1427,     0,     0,   607,   865,   962, 
        828,   989,  1033,  1164,     0,     0,     0,     0,   615,   566, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   599,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   734,   212,     0,   201,     0,   173,     0,   617, 
          0,     0,     0,     0,     0,     0,    51,   321,     0,     0, 
          0,   566,     0,     0,     0,     0,     0,     0,     0,   609, 
        213,     0,     0,     0,     0,   621,     0,     0,   172,   165, 
        185,  1263,  1267,  1686,  1690,  1694,  2160,     0,  2708,     0, 
       3038,  3118,  3126,  3538,   271,     0,   287,  3596,  3505,  3369, 
          0,  3460,     0,  3484,  3206,  3297,  3321,  3345,  3067,  2877, 
       2905,  2737,  2782,  2809,  1127,     0,     0,   609,   570,   431, 
          0,     0,     0,     0,     0,     0,     0,     0,   276,     0, 
        609,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         27,   208,     0,  3629,   609,   609,     0,     0,   213,   541, 
        213,     0,     0,   529,     0,     0,   566,  3606,  3758,     0, 
       3762,  3768,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    97,     0,     0,   566,     0,     0,     0,     0, 
        213,     0,   609,     0,  3737,     0,     0,   609,     0,     0, 
        615,     0,     0,     0,     0,   542,     0,     0,     0,     0, 
        213,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   542,     0,     0,     0,  -110, 
          0,     0,     0,    11,     0,     0,     0,   616,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   542,     0,   618,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   542, 
          0,     0,     0,     0,   181,     0,    15,     0,     0,     0, 
          0,     0,     0,     0,   618,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,  3899,     0,     0,     0,   627,     0, 
       4043,   551,     0,     0,   637,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   557,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,  -105, 
          0,     0,  -105,     0,     0,     0,   542,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,   352,     0,     0,   674,   -33,    -5,   -29, 
          0,     0,     0,   597,     0,     0,    -9,     0,   484,   411, 
          0,     0,     0,   207,   403,     8,   355,     0,     0,     0, 
       -133,   651,   656,     0,   343,   619,     0,    71,  -137,  -338, 
        395,     0,   329,   134,     0,  -158,     0,     0,     0,     0, 
       -372,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   246,     0,     0,     0,     0,   270,     0,     0, 
          0,   -24,     0,     0,   -75,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   330,   611,     0,     0, 
          0,   537,     0,   544,     0,     0,     0,     0,     0,     0, 
        711,     0, 
    );
    protected static $yyTable = array(40,
         20,   170,    43,    43,   170,    94,    44,    45,   170,   187, 
        301,   217,    89,    64,    69,    92,    43,    93,    43,    67, 
         70,    43,    73,   182,    39,    77,    39,   389,   180,   178, 
         39,   179,   177,   181,   178,   275,   100,    43,   182,   179, 
        121,    73,    39,   180,    64,    64,    39,   124,   181,   304, 
         18,   107,   436,    43,   184,   121,   272,    73,   413,    45, 
        188,    85,   122,    54,    39,   122,   208,   155,   409,    39, 
        155,   423,   457,   121,   227,   284,     2,   127,   248,   248, 
        122,   209,   297,   105,   155,   155,   178,    62,    18,   305, 
        285,   179,   190,   302,    35,   107,   137,   138,    95,   139, 
        140,   141,   142,   143,   144,     1,   146,   147,    45,    35, 
        314,    43,   248,     5,   122,    43,   182,    69,   248,   155, 
        123,   180,   178,   198,   179,   177,   181,   105,     9,   306, 
        313,   474,   410,    39,   476,    25,   293,    36,   478,   173, 
         36,   175,    28,   318,   185,   186,   206,   246,    69,    69, 
         43,   155,   207,   246,   267,    36,    26,   324,   325,   229, 
        230,   231,   232,   233,   234,   235,   236,   237,   239,   241, 
        242,   243,   244,   245,   247,   248,   249,   250,   252,   254, 
        255,   256,   257,   258,   259,   260,   261,   262,   263,   264, 
        265,    27,    38,   270,    38,   348,   377,    41,    38,   376, 
        349,   245,   289,   276,   279,   152,   246,   246,   152,    18, 
         38,    33,   151,   119,    38,   151,   119,   291,   292,   396, 
        294,   122,   152,   152,   122,   185,    42,   198,   185,   151, 
        151,   334,   101,    57,    58,    59,    60,    61,    18,   122, 
        246,   182,   185,   185,   182,   308,   246,   309,   156,    47, 
        344,   156,   124,    35,    50,   124,    35,   152,   311,   408, 
        312,    52,    69,    69,   151,   156,   156,    67,    67,    43, 
        124,   214,   266,   271,    71,   198,   245,   185,   221,   316, 
        317,    29,    30,   214,     5,    99,    75,   214,   198,   152, 
        215,   184,    78,   182,   323,     6,   151,    79,   184,   129, 
        156,   189,   198,   198,   124,    63,   102,    43,    80,   185, 
         81,   125,   103,   184,   125,    82,   118,   335,    98,   118, 
         83,     2,     2,     2,     2,     2,     2,   184,   125,   125, 
        184,    84,   156,    12,    13,    14,    15,    16,    17,    90, 
        198,     2,     2,    10,    10,   198,    10,    10,    10,    10, 
         10,    10,    10,    10,   148,   210,    11,   155,    86,    43, 
         87,   222,     2,   125,    10,    10,    10,    10,    10,    10, 
         12,    80,   211,   116,    96,    97,    32,    12,   148,   184, 
        149,   185,   186,   246,   246,   245,   151,   398,   185,   186, 
         46,   184,   194,    18,   195,   197,   196,   185,   186,    10, 
         10,   183,   203,   185,   186,   280,   415,   418,   183,   420, 
        451,   452,   421,   422,    12,    13,    14,    15,    16,    17, 
        118,   119,    43,   183,   281,   282,   466,   298,   283,    10, 
         10,    10,   415,   286,   438,   287,   295,   296,   299,   155, 
        170,   170,   300,   303,   170,   170,   170,   170,   170,   170, 
        170,   310,   415,   315,    12,    13,    14,    15,    16,    17, 
        322,   170,   170,   170,   170,   170,   170,   233,   233,   469, 
        207,   233,   233,   233,   233,   233,   233,   233,   326,   176, 
        174,   185,   186,   202,   331,   333,   328,   336,   233,   233, 
        233,   233,   233,   233,   170,   152,   170,   170,   337,    54, 
         39,   183,   151,   342,   343,   327,   345,   330,   346,   128, 
        351,   372,   373,   374,   379,   185,   401,   391,   393,   399, 
        400,   233,   402,   233,   233,   405,   170,   170,   170,     5, 
          5,     5,     5,     5,     5,   403,   404,   347,   156,   406, 
          6,     6,     6,     6,     6,     6,   407,   412,   419,     5, 
          5,   424,   425,   233,   233,   233,   427,   375,   431,   437, 
          6,     6,   441,   432,   439,   130,   130,   442,   445,   130, 
        130,   130,   130,   130,   130,   130,   448,   152,   152,   152, 
        447,   460,   456,   458,   151,   151,   130,   130,   130,   130, 
        130,   130,   449,   459,   468,   467,   470,   185,   185,   185, 
        472,   471,   225,   225,   475,    43,   225,   225,   225,   225, 
        225,   225,   225,   477,   464,    22,    10,    10,    10,   130, 
        156,   130,   130,   225,   225,   225,   225,   225,   225,   319, 
         57,    58,    59,    60,    61,   479,    20,    10,    12,    13, 
         14,    15,    16,    17,    48,   244,    10,   143,   176,   115, 
        143,   130,   130,   130,   176,    59,   124,   116,   225,   225, 
        246,    61,   124,   160,   143,   143,    67,    95,   117,    57, 
         58,    59,    60,    61,   124,    97,   120,   120,   182,   170, 
         24,    99,   126,   180,   178,   320,   179,   177,   181,   225, 
        225,   290,    49,   128,   321,   350,    48,   332,   392,   143, 
        465,   173,   125,   175,   444,   395,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,   170,    10,    10,    10,    10, 
         10,    10,    10,    10,    10,    10,    10,    10,    10,    10, 
        201,   143,   277,    31,   170,   170,   274,     0,     0,     0, 
          0,    63,   233,   182,   170,     0,     0,     0,   180,   178, 
          0,   179,   177,   181,    55,     0,     0,     0,     0,     0, 
          0,   233,   233,     0,     0,     0,   173,     0,   175,     0, 
        227,   227,     0,     0,   227,   227,   227,   227,   227,   227, 
        227,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   227,   227,   227,   227,   227,   227,     0,     0,     0, 
        169,     0,     0,   170,   170,   170,   170,   170,   170,   170, 
        170,   170,     0,    12,   170,   170,   170,   170,   170,   170, 
        170,   170,   170,   170,   170,   170,   227,   227,     0,     0, 
        233,   233,   233,   233,   233,   233,   233,   233,   233,     0, 
        130,   233,   233,   233,   233,   233,   233,   233,   233,   233, 
        233,   233,   233,     0,     0,     0,     0,   227,   227,   130, 
        130,     0,     0,     0,   217,   217,     0,     0,   217,   217, 
        217,   217,   217,   217,   217,     0,     0,   225,     0,     0, 
          0,     0,     0,     0,     0,   217,   217,   217,   217,   217, 
        217,     0,     0,     0,     0,     0,   225,     0,     0,     0, 
          0,   219,   219,     0,     0,   219,   219,   219,   219,   219, 
        219,   219,     0,     0,     0,     0,     0,     0,     0,     0, 
        217,   217,   219,   219,   219,   219,   219,   219,   130,   130, 
        130,   130,   130,   130,   130,   130,   130,   143,     0,   130, 
        130,   130,   130,   130,   130,   130,   130,   130,   130,   130, 
        130,   217,   217,   184,     0,     0,     0,   219,   219,     0, 
          0,     0,     0,     0,     0,   225,   225,   225,   225,   225, 
        225,   225,   225,   225,     0,     0,   225,   225,   225,   225, 
        225,   225,   225,   225,   225,   225,   225,   225,   219,   219, 
          0,     0,     0,     0,     0,     0,     0,     0,   220,   220, 
          0,     0,   220,   220,   220,   220,   220,   220,   220,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   184,   220, 
        220,   220,   220,   220,   220,   218,   218,     0,     0,   218, 
        218,   218,   218,   218,   218,   218,     0,     0,     0,     0, 
          0,   176,   174,   185,   186,   227,   218,   218,   218,   218, 
        218,   218,   171,   172,   220,   220,     0,     0,     0,     0, 
          0,     0,     0,   183,   227,     0,     0,     0,     0,   221, 
        221,     0,     0,   221,   221,   221,   221,   221,   221,   221, 
          0,   218,   218,     0,     0,   220,   220,     0,     0,     0, 
        221,   221,   221,   221,   221,   221,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   176,   174,   185,   186, 
          0,     0,   218,   218,     0,     0,     0,   171,   172,     0, 
          0,     0,     0,     0,     0,   221,   221,     0,   183,     0, 
          0,     0,     0,   227,   227,   227,   227,   227,   227,   227, 
        227,   227,     0,     0,   227,   227,   227,   227,   227,   227, 
        227,   227,   227,   227,   227,   227,   221,   221,   217,     0, 
          0,     0,     0,   216,   216,     0,     0,   216,   216,   216, 
        216,   216,   216,   216,     0,     0,   219,     0,     0,     0, 
          0,     0,     0,     0,   216,   216,   216,   216,   216,   216, 
          0,     0,     0,     0,     0,   219,     0,     0,     0,     0, 
        222,   222,     0,     0,   222,   222,   222,   222,   222,   222, 
        222,     0,     0,     0,     0,     0,     0,     0,     0,   216, 
        216,   222,   222,   222,   222,   222,   222,   217,   217,     0, 
          0,   217,   217,   217,   217,   217,     0,     0,   217,   217, 
        217,   217,   217,   217,   217,   217,   217,   217,   217,   217, 
        216,   216,     0,     0,     0,     0,   222,   222,     0,     0, 
          0,     0,     0,     0,   219,   219,     0,     0,   219,   219, 
        219,   219,   219,   220,     0,   219,   219,   219,   219,   219, 
        219,   219,   219,   219,   219,   219,   219,   222,   222,     0, 
          0,     0,   220,     0,     0,     0,     0,     0,     0,     0, 
        218,     0,     0,   186,     0,     0,   186,   187,     0,     0, 
        187,     0,     0,     0,     0,     0,     0,     0,     0,   218, 
        186,   186,     0,     0,   187,   187,     0,     0,   142,   142, 
          0,     0,   142,   142,     0,   142,     0,   142,   142,     0, 
          0,     0,     0,     0,   221,     0,     0,     0,     0,   142, 
        142,   142,   142,   142,   142,   186,     0,     0,     0,   187, 
          0,   220,   220,   221,     0,   220,   220,   220,   220,   220, 
          0,     0,   220,   220,   220,   220,   220,   220,   220,   220, 
        220,   220,   220,   220,   142,   142,     0,   186,   218,   218, 
          0,   187,   218,   218,   218,   218,   218,     0,     0,   218, 
        218,   218,   218,   218,   218,   218,   218,   218,   218,   218, 
        218,     0,     0,     0,     0,   142,   142,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   221,   221,     0,     0,   221,   221,   221,   221, 
        221,     0,     0,   221,   221,   221,   221,   221,   221,   221, 
        221,   221,   221,   221,   221,     0,     0,   216,     0,     0, 
          0,     0,     0,   170,   170,     0,     0,     0,   170,   170, 
          0,   170,   170,   170,     0,   222,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   170,   170,   170,   170, 
          0,     0,     0,     0,   222,     0,     0,     0,     0,   182, 
        170,     0,     0,     0,   180,   178,     0,   179,   177,   181, 
          0,     0,     0,     0,     0,     0,     0,   170,     0,     0, 
        170,     0,   173,   154,   175,   166,   216,   216,     0,     0, 
        216,   216,   216,   216,   216,     0,     0,   216,   216,   216, 
        216,   216,   216,   216,   216,   216,   216,   216,   216,   170, 
        170,     0,     0,     0,     0,     0,   169,     0,     0,     0, 
          0,     0,     0,   222,   222,     0,     0,   222,   222,   222, 
        222,   222,     0,     0,   222,   222,   222,   222,   222,   222, 
        222,   222,   222,   222,   222,   222,   168,     0,     0,     0, 
          0,     0,     0,   186,     0,     0,     0,   187,     0,     0, 
          0,     0,     0,   142,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   142,     0,     0,     0,     0,   182,   170,     0, 
          0,   212,   180,   178,     0,   179,   177,   181,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        173,   154,   175,   166,     0,     0,     0,     0,     0,     0, 
          0,     0,   182,   170,     0,     0,     0,   180,   178,     0, 
        179,   177,   181,     0,     0,   186,   186,   186,     0,   187, 
        187,   187,     0,     0,   169,   173,   154,   175,   166,     0, 
          0,   142,   142,     0,     0,   142,   142,   142,   142,   142, 
          0,     0,   142,   142,   142,   142,   142,   142,   142,   142, 
        142,   142,   142,   142,   168,     0,     0,     0,     0,   169, 
          0,     0,     0,     0,     0,     0,   188,     0,     0,   188, 
        189,     0,     0,   189,   191,     0,     0,   191,   170,     0, 
          0,     0,     0,   188,   188,     0,     0,   189,   189,   168, 
          0,   191,   191,     0,     0,     0,     0,     0,   170,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   184,     0,     0,     0,   188,     0, 
          0,     0,   189,     0,     0,     0,   191,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   182,   170, 
          0,     0,     0,   180,   178,     0,   179,   177,   181,     0, 
        188,     0,     0,     0,   189,     0,     0,     0,   191,     0, 
          0,   173,   154,   175,   166,     0,   170,   170,   170,   170, 
        170,   170,   170,   170,   170,     0,    12,   170,   170,     0, 
        170,   170,   170,   170,   170,   170,   170,   170,   170,     0, 
          0,     0,     0,     0,     0,   169,     0,     0,     0,     0, 
          0,     0,   176,   174,   185,   186,   155,   156,   157,   158, 
        160,     0,     0,   171,   172,   167,   152,   153,   159,   164, 
        163,   165,   161,   162,   183,   168,   339,     0,     0,     0, 
          0,     0,     0,     0,     0,   182,   170,     0,     0,     0, 
        180,   178,   184,   179,   177,   181,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   173,   154, 
        175,   166,     0,   182,     0,     0,     0,     0,   180,   178, 
          0,   179,   177,   181,     0,     0,     0,   184,     0,     0, 
          0,     0,     0,     0,     0,     0,   173,     0,   175,     0, 
          0,     0,   169,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   182,   170,     0,     0,     0,   180,   178,     0, 
        179,   177,   181,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   168,   340,   390,   173,   154,   175,   166,     0, 
        176,   174,   185,   186,   155,   156,   157,   158,   160,     0, 
          0,   171,   172,     0,   152,   153,   159,   164,   163,   165, 
        161,   162,   183,     0,     0,     0,   188,     0,     0,   169, 
        189,     0,     0,     0,   191,   176,   174,   185,   186,   155, 
        156,   157,   158,   160,     0,     0,   171,   172,   213,   152, 
        153,   159,   164,   163,   165,   161,   162,   183,     0,   168, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   182, 
        170,     0,     0,     0,   180,   178,     0,   179,   177,   181, 
          0,     0,     0,   184,     0,     0,     0,     0,     0,     0, 
          0,   414,   173,   154,   175,   166,     0,   182,   170,     0, 
          0,   426,   180,   178,     0,   179,   177,   181,   188,   188, 
        188,     0,   189,   189,   189,     0,   191,   191,   191,     0, 
        173,   154,   175,   166,   182,   170,   169,     0,     0,   180, 
        178,     0,   179,   177,   181,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   173,   154,   175, 
        166,     0,     0,     0,   169,     0,   168,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   176,   174,   185,   186,   155,   156,   157,   158,   160, 
        184,   169,   171,   172,   168,   152,   153,   159,   164,   163, 
        165,   161,   162,   183,   182,   170,     0,     0,   429,   180, 
        178,     0,   179,   177,   181,     0,     0,     0,   184,     0, 
        190,   168,     0,   190,     0,     0,     0,   173,   154,   175, 
        166,     0,     0,     0,     0,     0,     0,   190,   190,     0, 
          0,     0,     0,     0,     0,   182,   170,     0,     0,   430, 
        180,   178,     0,   179,   177,   181,     0,   184,     0,     0, 
          0,   169,     0,     0,     0,     0,     0,     0,   173,   154, 
        175,   166,   190,     0,     0,     0,     0,     0,   176,   174, 
        185,   186,   155,   156,   157,   158,   160,     0,     0,   171, 
        172,   168,   152,   153,   159,   164,   163,   165,   161,   162, 
        183,     0,   169,     0,   190,     0,   176,   174,   185,   186, 
          0,     0,     0,     0,     0,   182,   170,   171,   172,   446, 
        180,   178,     0,   179,   177,   181,     0,     0,   183,     0, 
          0,     0,   168,     0,     0,     0,     0,     0,   173,   154, 
        175,   166,     0,     0,     0,   176,   174,   185,   186,   155, 
        156,   157,   158,   160,   184,     0,   171,   172,     0,   152, 
        153,   159,   164,   163,   165,   161,   162,   183,   182,   170, 
          0,     0,   169,   180,   178,     0,   179,   177,   181,     0, 
          0,     0,   184,     0,     0,     0,     0,     0,     0,   473, 
          0,   173,   154,   175,   166,     0,     0,     0,     0,     0, 
          0,     0,   168,     0,     0,     0,     0,     0,     0,   184, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   169,     0,     0,   428,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   176,   174,   185,   186,   155,   156,   157,   158, 
        160,     0,     0,   171,   172,   168,   152,   153,   159,   164, 
        163,   165,   161,   162,   183,     0,     0,     0,     0,     0, 
        176,   174,   185,   186,   155,   156,   157,   158,   160,   184, 
          0,   171,   172,     0,   152,   153,   159,   164,   163,   165, 
        161,   162,   183,     0,     0,     0,     0,   176,   174,   185, 
        186,   155,   156,   157,   158,   160,     0,     0,   171,   172, 
        190,   152,   153,   159,   164,   163,   165,   161,   162,   183, 
        184,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   182,   170,     0,     0,     0,   180, 
        178,     0,   179,   177,   181,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   173,   154,   175, 
        166,     0,     0,     0,     0,     0,     0,   176,   174,   185, 
        186,   155,   156,   157,   158,   160,     0,     0,   171,   172, 
          0,   152,   153,   159,   164,   163,   165,   161,   162,   183, 
        184,   169,   190,   190,   190,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   176,   174, 
        185,   186,   155,   156,   157,   158,   160,     0,     0,   171, 
        172,   168,   152,   153,   159,   164,   163,   165,   161,   162, 
        183,   182,   170,     0,     0,     0,   180,   178,     0,   179, 
        177,   181,     0,   184,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   173,   154,   175,   166,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   176,   174, 
        185,   186,   155,   156,   157,   158,   160,     0,   169,   171, 
        172,     0,   152,   153,   159,   164,   163,   165,   161,   162, 
        183,   182,   170,     0,     0,     0,   180,   178,     0,   179, 
        177,   181,     0,     0,     0,     0,     0,     0,   168,     0, 
          0,     0,     0,     0,   173,   154,   175,   166,     0,     0, 
          0,   176,   174,   185,   186,   155,   156,   157,   158,   160, 
          0,     0,   171,   172,     0,   152,   153,   159,   164,   163, 
        165,   161,   162,   183,   182,   170,     0,     0,   169,   180, 
        178,     0,   179,   177,   181,     0,     0,     0,   214,     0, 
          0,   214,     0,     0,     0,     0,     0,   173,     0,   175, 
          0,     0,     0,     0,     0,   214,   214,     0,   168,     0, 
          0,     0,     0,   207,   207,     0,     0,   207,   207,   207, 
        207,   207,   207,   207,     0,     0,     0,     0,     0,   184, 
          0,   169,     0,     0,   207,   207,   207,   207,   207,   207, 
        214,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   208,   208, 
          0,   168,   208,   208,   208,   208,   208,   208,   208,   207, 
        207,     0,   214,    54,    39,     0,     0,     0,     0,   208, 
        208,   208,   208,   208,   208,   209,   209,     0,     0,   209, 
        209,   209,   209,   209,   209,   209,     0,     0,     0,     0, 
        207,   207,     0,     0,     0,     0,   209,   209,   209,   209, 
        209,   209,     0,     0,   208,   208,     0,   176,   174,   185, 
        186,   155,   156,   157,   158,   160,   184,     0,   171,   172, 
          0,   152,   153,   159,   164,   163,   165,   161,   162,   183, 
          0,   209,   209,     0,     0,   208,   208,     0,     0,     0, 
          0,     0,     0,     0,   205,     0,     0,   205,     0,   205, 
        205,   205,   205,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   209,   209,   205,   205,   205,   205,   205,   205, 
          0,     0,   206,     0,     0,   206,     0,   206,   206,   206, 
        206,     0,     0,     0,     0,     0,   184,     0,     0,     0, 
          0,     0,   206,   206,   206,   206,   206,   206,     0,   205, 
        205,     0,     0,     0,   176,   174,   185,   186,   155,   156, 
        157,   158,   160,     0,     0,   171,   172,     0,     0,   153, 
        159,   164,   163,   165,   161,   162,   183,   206,   206,     0, 
        205,   205,    56,    57,    58,    59,    60,    61,     0,   184, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   206,   206, 
          0,     0,     0,     0,     0,     0,     0,     0,   214,     0, 
          0,     0,    62,     0,   176,   174,   185,   186,   155,   156, 
        157,   158,   160,     0,     0,   171,   172,     0,     0,     0, 
        159,   164,   163,   165,   161,   162,   183,   207,     0,     0, 
          0,     0,     0,     0,     0,    63,     0,     0,   215,     0, 
          0,   215,     0,     0,     0,     0,     0,     0,    55,     0, 
          0,     0,     0,     0,     0,   215,   215,   176,   174,   185, 
        186,     0,     0,     0,   210,     0,     0,   210,   171,   172, 
        210,     0,   208,     0,     0,     0,     0,     0,     0,   183, 
        214,   214,   214,     0,   210,   210,   210,   210,   210,   210, 
        215,     0,     0,     0,     0,     0,   207,   207,     0,   209, 
        207,   207,   207,   207,   207,     0,     0,   207,   207,   207, 
        207,   207,   207,   207,   207,   207,   207,   207,   192,   210, 
        210,   192,   215,     0,     0,     0,   193,     0,     0,   193, 
          0,     0,     0,     0,     0,   192,   192,     0,     0,     0, 
          0,   208,   208,   193,   193,   208,   208,   208,   208,   208, 
        210,   210,   208,   208,   208,   208,   208,   208,   208,   208, 
        208,   208,   208,     0,     0,     0,     0,   205,   209,   209, 
        192,     0,   209,   209,   209,   209,   209,     0,   193,   209, 
        209,   209,   209,   209,   209,   209,   209,   209,   209,   209, 
          0,     0,     0,     0,     0,   206,     0,     0,     0,     0, 
          0,     0,   192,   197,     0,     0,   197,     0,     0,   197, 
        193,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   197,   197,     0,   197,     0,   197,     0, 
          0,     0,     0,     0,     0,     0,   205,   205,     0,     0, 
        205,   205,   205,   205,   205,     0,     0,   205,   205,   205, 
        205,   205,   205,   205,   205,   205,   205,   205,   197,   197, 
          0,     0,     0,     0,   206,   206,     0,     0,   206,   206, 
        206,   206,   206,     0,     0,   206,   206,   206,   206,   206, 
        206,   206,   206,   206,   206,   206,     0,     0,     0,   197, 
        197,     0,     0,     0,   199,     0,     0,   199,     0,     0, 
        199,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   199,   199,     0,   199,   198,   199, 
          0,   198,     0,     0,   198,     0,     0,     0,   215,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   198,   198, 
          0,   198,   200,   198,     0,   200,     0,     0,   200,   199, 
        199,     0,     0,     0,     0,     0,     0,   210,     0,     0, 
          0,     0,   200,   200,     0,   200,   212,   200,     0,   212, 
          0,     0,   212,   198,   198,     0,     0,     0,     0,     0, 
        199,   199,     0,     0,     0,     0,   212,   212,     0,   212, 
          0,   212,     0,     0,     0,     0,     0,   200,   200,     0, 
          0,     0,     0,     0,   198,   198,     0,     0,   192,     0, 
        215,   215,   215,     0,     0,     0,   193,     0,     0,     0, 
          0,   212,   212,     0,     0,     0,   210,   210,   200,   200, 
        210,   210,   210,   210,   210,     0,     0,   210,   210,   210, 
        210,   210,   210,   210,   210,   210,   210,   210,     0,     0, 
          0,     0,   212,   212,     0,     0,     0,   201,     0,     0, 
        201,     0,     0,   201,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   201,   201,     0, 
        201,   202,   201,     0,   202,     0,     0,   202,     0,     0, 
        192,   192,   192,     0,     0,     0,   197,     0,   193,   193, 
        193,   202,   202,     0,   202,   213,   202,     0,   213,     0, 
          0,     0,   201,   201,     0,     0,     0,     0,     0,     0, 
          0,     0,   213,   213,     0,   213,     0,   213,     0,     0, 
          0,     0,     0,     0,     0,     0,   202,   202,   194,     0, 
          0,   194,     0,   201,   201,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   194,   194,   213,   213,     0, 
          0,     0,     0,     0,     0,     0,     0,   202,   202,   197, 
        197,   197,   197,   197,     0,     0,   197,   197,   197,   197, 
        197,   197,   197,   197,   197,   197,   197,   199,   213,   213, 
        194,     0,     0,     0,     0,     0,   211,     0,     0,   211, 
          0,     0,     0,     0,     0,     0,   195,     0,     0,   195, 
          0,   198,     0,   211,   211,     0,   211,     0,   211,     0, 
          0,     0,   194,   195,   195,     0,     0,     0,     0,   144, 
          0,     0,   144,     0,     0,   200,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   144,   144,   211,   144, 
          0,   144,     0,     0,     0,     0,     0,     0,   195,   212, 
        199,   199,   199,   199,   199,     0,     0,   199,   199,   199, 
        199,   199,   199,   199,   199,   199,   199,   199,     0,   211, 
        211,   144,     0,     0,   198,   198,   198,   198,   198,     0, 
        195,   198,   198,   198,   198,   198,   198,   198,   198,   198, 
        198,   198,     0,     0,     0,     0,     0,     0,   200,   200, 
        200,   200,   200,   144,     0,   200,   200,   200,   200,   200, 
        200,   200,   200,   200,   200,   200,     0,     0,     0,     0, 
          0,     0,   212,   212,   212,   212,   212,   150,     0,     0, 
        150,   212,   212,   212,   212,   212,   212,   212,   212,   212, 
        201,     0,     0,     0,   150,   150,     0,   150,   196,   150, 
          0,   196,   203,     0,     0,   203,     0,     0,   204,     0, 
          0,   204,     0,     0,   202,   196,   196,     0,     0,   203, 
        203,     0,     0,     0,     0,   204,   204,     0,     0,   150, 
          0,     0,     0,     0,     0,   213,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        196,     0,     0,     0,   203,     0,     0,     0,     0,     0, 
        204,   150,     0,   201,   201,   201,   201,   201,   194,     0, 
          0,     0,   201,   201,   201,   201,   201,   201,   201,   201, 
        201,     0,   196,     0,     0,     0,   203,   202,   202,   202, 
        202,   202,   204,     0,     0,     0,   202,   202,   202,   202, 
        202,   202,   202,   202,   202,     0,     0,     0,   213,   213, 
        213,   213,   213,     0,     0,     0,     0,   213,   213,   213, 
        213,   213,   213,   213,   213,   213,   211,     0,     0,     0, 
          0,   111,     0,     0,     0,     0,   195,     0,   111,     0, 
          0,   111,     0,   111,     0,     0,     0,     0,     0,     0, 
        194,   194,   194,     0,     0,     0,     0,   111,     0,   144, 
          0,     0,   111,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   111, 
        111,     0,     0,     0,     0,     0,     0,     0,     0,   211, 
        211,   211,   211,   211,     0,     0,     0,     0,   211,   211, 
        211,   211,   211,   211,   211,   211,   211,     0,   195,   195, 
        195,   111,     0,   111,   111,     0,     0,     0,     0,     0, 
          0,     0,   144,   144,   144,   144,   144,     0,     0,     0, 
          0,   144,   144,   144,   144,   144,   144,   144,   144,   144, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   150,     0,     0, 
          0,     0,     0,     0,     0,   107,     0,     0,     0,     0, 
          0,     0,   107,     0,     0,   107,     0,   107,   196,     0, 
          0,     0,   203,     0,     0,     0,     0,     0,   204,     0, 
          0,   107,     0,     0,     0,     0,   107,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   107,   107,     0,     0,     0,     0,     0, 
        150,   150,   150,   150,   150,     0,     0,     0,     0,   150, 
        150,   150,   150,   150,   150,   150,   150,   150,   111,   111, 
        111,   111,   111,   111,     0,   107,     0,   107,   107,     0, 
        196,   196,   196,     0,   203,   203,   203,     0,     0,     0, 
        204,   204,   204,     0,     0,     0,     0,     0,     0,     0, 
         94,     0,     0,     0,     0,     0,     0,    89,     0,     0, 
         92,     0,    93,     0,     0,     0,     0,     0,     0,     0, 
          0,   111,     0,     0,     0,     0,   365,     0,     0,     0, 
          0,   100,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   111,   111,     0,     0,     0,     0,     0,   111,   111, 
        111,   111,     0,     0,   111,     0,     0,     0,    54,    39, 
          0,     0,     0,     0,     0,     0,     0,     0,   111,   111, 
        111,   111,     0,   111,   111,   111,     0,     0,   111,   111, 
        111,   111,   111,     0,     0,     0,     0,     0,     0,     0, 
        366,     0,     0,    95,    94,     0,     0,     0,     0,     0, 
          0,    89,     0,     0,    92,     0,    93,     0,     0,     0, 
        111,   111,   107,   107,   107,   107,   107,   107,     0,    91, 
          0,     0,     0,    94,     0,   100,     0,     0,     0,     0, 
         89,     0,     0,    92,     0,    93,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    94, 
          0,   238,    54,    39,   100,     0,    89,     0,     0,    92, 
          0,    93,     0,     0,     0,   107,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   240,     0,     0, 
        100,    54,    39,     0,     0,   107,   107,    95,     0,     0, 
          0,     0,   107,   107,   107,   107,     0,     0,   107,     0, 
          0,     0,     0,     0,     0,     0,     0,    54,    39,     0, 
          0,     0,   107,   107,   107,   107,    95,   107,   107,   107, 
          0,     0,   107,     0,   107,   107,   107,   101,    57,    58, 
         59,    60,    61,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    95,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   107,   107,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         99,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         63,   102,     0,     0,     0,     0,     0,   103,   354,   355, 
        356,     0,     0,    98,     0,     0,     0,     0,     0,     0, 
          0,   101,    57,    58,    59,    60,    61,   357,   358,   359, 
        360,     0,   361,   362,    90,     0,     0,   363,     0,   364, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        101,    57,    58,    59,    60,    61,     0,     0,     0,     0, 
          0,    94,     0,     0,     0,     0,     0,     0,    89,    96, 
         97,    92,     0,    93,    99,    94,   101,    57,    58,    59, 
         60,    61,    89,     0,     0,    92,    94,    93,     0,   251, 
          0,     0,   100,    89,    63,   102,    92,     0,    93,     0, 
          0,   103,     0,    99,     0,     0,   100,    98,     0,     0, 
          0,     0,     0,     0,   253,     0,     0,   100,     0,    54, 
         39,     0,     0,    63,   102,     0,     0,     0,    90,    99, 
        103,     0,     0,    54,    39,     0,    98,     0,     0,     0, 
          0,     0,     0,     0,    54,    39,     0,     0,     0,    63, 
        102,     0,     0,     0,    95,     0,   103,    90,     0,     0, 
          0,     0,    98,    96,    97,     0,     0,     0,    95,     0, 
          0,     0,     0,     0,    94,     0,     0,     0,     0,    95, 
          0,    89,     0,    90,    92,     0,    93,     0,     0,     0, 
          0,     0,    96,    97,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   100,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    96,    97, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    54,    39,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    95,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   101,    57, 
         58,    59,    60,    61,     0,     0,     0,     0,     0,     0, 
          0,     0,   135,    57,    58,    59,    60,    61,     0,     0, 
          0,     0,     0,   101,    57,    58,    59,    60,    61,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    99,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    99,     0,     0,     0,     0, 
          0,    63,   102,     0,     0,     0,    99,     0,   103,     0, 
          0,     0,     0,     0,    98,   136,   102,     0,     0,     0, 
          0,     0,   103,     0,     0,     0,    63,   102,    98,     0, 
          0,     0,     0,   103,     0,    90,     0,     0,     0,    98, 
          0,   101,    57,    58,    59,    60,    61,     0,     0,    90, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         90,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         96,    97,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    96,    97,     0,     0,     0,     0, 
          0,     0,     0,     0,    99,    96,    97,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    63,   102,     0,     0,     0,     0, 
          0,   103,     0,     0,     0,     0,     0,    98,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    90,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    96,    97, 
    );
    protected static $yyCheck = array(33,
          6,    41,    36,    37,    44,    33,    36,    37,    41,    40, 
        340,   145,    40,    47,   125,    43,    50,    45,    52,   125, 
         50,    55,    52,    37,    92,    55,    92,   366,    42,    43, 
         92,    45,    46,    47,    41,   194,    64,    71,    37,    41, 
        260,    71,    92,    42,    78,    79,    92,   260,    47,   260, 
        123,    76,   425,    87,   312,    41,   123,    87,   397,    44, 
         91,    71,    41,    91,    92,    44,    44,    41,    59,    59, 
         44,   410,   445,    59,   150,    44,    35,    87,   300,   301, 
        300,    59,   220,    76,    58,    59,    93,   300,    35,   300, 
         59,    93,   123,   423,    44,   120,    89,    90,   126,    92, 
         93,    94,    95,    96,    97,   320,    99,   100,    93,    59, 
        269,   145,   334,   321,    93,   149,    37,    47,   340,    93, 
        340,    42,    43,   116,    45,    46,    47,   120,   260,   340, 
        268,   470,   123,   123,   473,    92,   212,    41,   477,    60, 
         44,    62,    91,   281,   402,   403,   334,   334,    78,    79, 
        184,   125,   340,   340,   184,    59,    59,   295,   296,   152, 
        153,   154,   155,   156,   157,   158,   159,   160,   161,   162, 
        163,   164,   165,   166,   167,   168,   169,   170,   171,   172, 
        173,   174,   175,   176,   177,   178,   179,   180,   181,   182, 
        183,    59,   260,   260,   260,   333,    41,    93,   260,    44, 
        338,   194,   208,   196,   197,    41,   300,   301,    44,    35, 
        260,    64,    41,    41,   260,    44,    44,   210,   211,   378, 
        213,    41,    58,    59,    44,    41,    44,   220,    44,    58, 
         59,   307,   260,   261,   262,   263,   264,   265,   311,    59, 
        334,    41,    58,    59,    44,   238,   340,   240,    41,    40, 
        326,    44,    41,    41,   310,    44,    44,    93,   251,   393, 
        253,   310,   373,   374,    93,    58,    59,   373,   374,   303, 
         59,   333,   340,   340,   311,   268,   269,    93,   340,   272, 
        273,   300,   301,   333,    35,   313,   123,   333,   281,   125, 
        340,   312,    61,    93,   287,    35,   125,    61,   312,   125, 
         93,   332,   295,   296,    93,   333,   334,   341,    40,   125, 
        410,    41,   340,   312,    44,    41,    41,   310,   346,    44, 
         41,   280,   281,   282,   283,   284,   285,    41,    58,    59, 
         44,    44,   125,   280,   281,   282,   283,   284,   285,   367, 
        333,   300,   301,    37,    38,   338,    40,    41,    42,    43, 
         44,    45,    46,    47,    40,    41,     5,   331,   123,   393, 
         44,   423,   321,    93,    58,    59,    60,    61,    62,    63, 
        410,    40,    41,    40,   402,   403,    25,   410,    40,    93, 
         40,   402,   403,   300,   301,   378,   410,   380,   402,   403, 
         39,   312,    44,    35,    93,   423,    44,   402,   403,    93, 
         94,   422,   260,   402,   403,    41,   399,   400,   422,   402, 
        373,   374,   405,   406,   280,   281,   282,   283,   284,   285, 
         78,    79,   456,   422,    44,    41,   456,   221,    61,   123, 
        124,   125,   425,   260,   427,    61,    40,    40,   340,   413, 
         37,    38,    41,    44,    41,    42,    43,    44,    45,    46, 
         47,    58,   445,    40,   280,   281,   282,   283,   284,   285, 
         40,    58,    59,    60,    61,    62,    63,    37,    38,   462, 
        340,    41,    42,    43,    44,    45,    46,    47,    41,   400, 
        401,   402,   403,   125,   340,    40,   321,    41,    58,    59, 
         60,    61,    62,    63,    91,   331,    93,    94,    93,    91, 
         92,   422,   331,    41,    41,   299,    40,   301,   123,   335, 
        340,    41,    41,    41,   123,   331,   383,   125,    58,    40, 
         40,    91,    40,    93,    94,    40,   123,   124,   125,   280, 
        281,   282,   283,   284,   285,    59,    59,   331,   331,    40, 
        280,   281,   282,   283,   284,   285,   125,    59,   361,   300, 
        301,   125,    59,   123,   124,   125,    40,   351,   125,   426, 
        300,   301,   429,   344,   340,    37,    38,   123,    59,    41, 
         42,    43,    44,    45,    46,    47,    41,   413,   414,   415, 
        413,   448,    40,    59,   413,   414,    58,    59,    60,    61, 
         62,    63,   371,   340,   461,    41,    58,   413,   414,   415, 
        467,   340,    37,    38,    41,    93,    41,    42,    43,    44, 
         45,    46,    47,   123,   125,   123,   310,   311,   312,    91, 
        413,    93,    94,    58,    59,    60,    61,    62,    63,   260, 
        261,   262,   263,   264,   265,   125,   123,   331,   280,   281, 
        282,   283,   284,   285,    41,   123,   340,    41,    93,    41, 
         44,   123,   124,   125,    41,    41,    58,    41,    93,    94, 
        340,    41,    93,   123,    58,    59,   125,    41,   260,   261, 
        262,   263,   264,   265,    59,   125,    59,    41,    37,    38, 
          7,   125,    86,    42,    43,   283,    45,    46,    47,   124, 
        125,   208,    42,   335,   284,   341,    41,   303,   370,    93, 
        455,    60,    84,    62,   435,   376,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   312,   410,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,   423, 
        120,   125,   196,    23,   331,   332,   193,    -1,    -1,    -1, 
         -1,   333,   312,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,   332,    -1,    -1,    -1,    60,    -1,    62,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         94,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,   410,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,    93,    94,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
        312,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,   422,    -1,    -1,    -1,    -1,   124,   125,   331, 
        332,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    58,    59,    60,    61,    62,    63,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   331,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        422,   124,   125,   312,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   422,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    46,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   312,    58, 
         59,    60,    61,    62,    63,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   312,    58,    59,    60,    61, 
         62,    63,   411,   412,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   422,   331,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    46,    47, 
         -1,    93,    94,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
         -1,    -1,   124,   125,    -1,    -1,    -1,   411,   412,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    -1,   422,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,   124,   125,   331,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    58,    59,    60,    61,    62,    63,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        413,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
        124,   125,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,   312,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,   422,   124,   125,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    41,    -1,    -1,    44,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         58,    59,    -1,    -1,    58,    59,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    -1,    44,    -1,    46,    47,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    93,    -1,    -1,    -1,    93, 
         -1,   400,   401,   331,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   422,    93,    94,    -1,   125,   400,   401, 
         -1,   125,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        422,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1, 
         94,    -1,    60,    61,    62,    63,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,   123, 
        124,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,   422,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,   413,   414,   415,    -1,   413, 
        414,   415,    -1,    -1,    94,    60,    61,    62,    63,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,   422,   124,    -1,    -1,    -1,    -1,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44, 
         41,    -1,    -1,    44,    41,    -1,    -1,    44,   312,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    -1,    58,    59,   124, 
         -1,    58,    59,    -1,    -1,    -1,    -1,    -1,   332,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    93,    -1, 
         -1,    -1,    93,    -1,    -1,    -1,    93,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    -1,    42,    43,    -1,    45,    46,    47,    -1, 
        125,    -1,    -1,    -1,   125,    -1,    -1,    -1,   125,    -1, 
         -1,    60,    61,    62,    63,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,   410,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,   422,    -1, 
         -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,   312,    45,    46,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    37,    -1,    -1,    -1,    -1,    42,    43, 
         -1,    45,    46,    47,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    -1,    62,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    59,    60,    61,    62,    63,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,   422,    -1,    -1,    -1,   331,    -1,    -1,    94, 
        331,    -1,    -1,    -1,   331,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   422,    -1,   124, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    46,    47, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    59,    60,    61,    62,    63,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    46,    47,   413,   414, 
        415,    -1,   413,   414,   415,    -1,   413,   414,   415,    -1, 
         60,    61,    62,    63,    37,    38,    94,    -1,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    94,    -1,   124,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,    94,   411,   412,   124,   414,   415,   416,   417,   418, 
        419,   420,   421,   422,    37,    38,    -1,    -1,    41,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,   312,    -1, 
         41,   124,    -1,    44,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    -1,    45,    46,    47,    -1,   312,    -1,    -1, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    93,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   124,   414,   415,   416,   417,   418,   419,   420,   421, 
        422,    -1,    94,    -1,   125,    -1,   400,   401,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    37,    38,   411,   412,    41, 
         42,    43,    -1,    45,    46,    47,    -1,    -1,   422,    -1, 
         -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   312,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,   422,    37,    38, 
         -1,    -1,    94,    42,    43,    -1,    45,    46,    47,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   124,   414,   415,   416,   417, 
        418,   419,   420,   421,   422,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   312, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,   422,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
        331,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    -1,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
        312,    94,   413,   414,   415,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,   124,   414,   415,   416,   417,   418,   419,   420,   421, 
        422,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    94,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
        422,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         46,    47,    -1,    -1,    -1,    -1,    -1,    -1,   124,    -1, 
         -1,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,   422,    37,    38,    -1,    -1,    94,    42, 
         43,    -1,    45,    46,    47,    -1,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    60,    -1,    62, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,   124,    -1, 
         -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    94,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         93,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,   124,    41,    42,    43,    44,    45,    46,    47,    93, 
         94,    -1,   125,    91,    92,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    46,    47,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    93,    94,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   312,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,   422, 
         -1,    93,    94,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    43, 
         44,    45,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    38,    -1,    -1,    41,    -1,    43,    44,    45, 
         46,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    93, 
         94,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,    -1,   415, 
        416,   417,   418,   419,   420,   421,   422,    93,    94,    -1, 
        124,   125,   260,   261,   262,   263,   264,   265,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,   300,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,    -1,    -1, 
        416,   417,   418,   419,   420,   421,   422,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   333,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,   400,   401,   402, 
        403,    -1,    -1,    -1,    38,    -1,    -1,    41,   411,   412, 
         44,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,   422, 
        413,   414,   415,    -1,    58,    59,    60,    61,    62,    63, 
         93,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,   331, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    41,    93, 
         94,    44,   125,    -1,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    -1, 
         -1,   400,   401,    58,    59,   404,   405,   406,   407,   408, 
        124,   125,   411,   412,   413,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,    -1,    -1,    -1,   331,   400,   401, 
         93,    -1,   404,   405,   406,   407,   408,    -1,    93,   411, 
        412,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,   125,    38,    -1,    -1,    41,    -1,    -1,    44, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    93,    94, 
         -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    38,    63, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    38,    63,    -1,    41,    -1,    -1,    44,    93, 
         94,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    38,    63,    -1,    41, 
         -1,    -1,    44,    93,    94,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    -1,    -1,   331,    -1, 
        413,   414,   415,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    93,    94,    -1,    -1,    -1,   400,   401,   124,   125, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    -1,    38,    -1,    -1, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    38,    63,    -1,    41,    -1,    -1,    44,    -1,    -1, 
        413,   414,   415,    -1,    -1,    -1,   331,    -1,   413,   414, 
        415,    58,    59,    -1,    61,    41,    63,    -1,    44,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    41,    -1, 
         -1,    44,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,   331,   124,   125, 
         93,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44, 
         -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44, 
         -1,   331,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,   125,    58,    59,    -1,    -1,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    93,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    93,   331, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,    -1,   124, 
        125,    93,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
        125,   411,   412,   413,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,   125,    -1,   411,   412,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    41,    -1,    -1, 
         44,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
        331,    -1,    -1,    -1,    58,    59,    -1,    61,    41,    63, 
         -1,    44,    41,    -1,    -1,    44,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,   331,    58,    59,    -1,    -1,    58, 
         59,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1,    93, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1, 
         93,   125,    -1,   404,   405,   406,   407,   408,   331,    -1, 
         -1,    -1,   413,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,   125,    -1,    -1,    -1,   125,   404,   405,   406, 
        407,   408,   125,    -1,    -1,    -1,   413,   414,   415,   416, 
        417,   418,   419,   420,   421,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,    -1,    -1,   413,   414,   415, 
        416,   417,   418,   419,   420,   421,   331,    -1,    -1,    -1, 
         -1,    33,    -1,    -1,    -1,    -1,   331,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
        413,   414,   415,    -1,    -1,    -1,    -1,    59,    -1,   331, 
         -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91, 
         92,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,    -1,    -1,   413,   414, 
        415,   416,   417,   418,   419,   420,   421,    -1,   413,   414, 
        415,   123,    -1,   125,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,   413,   414,   415,   416,   417,   418,   419,   420,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,   331,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,   331,    -1, 
         -1,    59,    -1,    -1,    -1,    -1,    64,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    91,    92,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,    -1,    -1,   413, 
        414,   415,   416,   417,   418,   419,   420,   421,   260,   261, 
        262,   263,   264,   265,    -1,   123,    -1,   125,   126,    -1, 
        413,   414,   415,    -1,   413,   414,   415,    -1,    -1,    -1, 
        413,   414,   415,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         33,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    59,    -1,    -1,    -1, 
         -1,    64,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   333,   334,    -1,    -1,    -1,    -1,    -1,   340,   341, 
        342,   343,    -1,    -1,   346,    -1,    -1,    -1,    91,    92, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   360,   361, 
        362,   363,    -1,   365,   366,   367,    -1,    -1,   370,   371, 
        372,   373,   374,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        123,    -1,    -1,   126,    33,    -1,    -1,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
        402,   403,   260,   261,   262,   263,   264,   265,    -1,    58, 
         -1,    -1,    -1,    33,    -1,    64,    -1,    -1,    -1,    -1, 
         40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33, 
         -1,    61,    91,    92,    64,    -1,    40,    -1,    -1,    43, 
         -1,    45,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    -1,    -1, 
         64,    91,    92,    -1,    -1,   333,   334,   126,    -1,    -1, 
         -1,    -1,   340,   341,   342,   343,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    92,    -1, 
         -1,    -1,   360,   361,   362,   363,   126,   365,   366,   367, 
         -1,    -1,   370,    -1,   372,   373,   374,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        333,   334,    -1,    -1,    -1,    -1,    -1,   340,   341,   342, 
        343,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,   360,   361,   362, 
        363,    -1,   365,   366,   367,    -1,    -1,   370,    -1,   372, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,    -1, 
         -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    40,   402, 
        403,    43,    -1,    45,   313,    33,   260,   261,   262,   263, 
        264,   265,    40,    -1,    -1,    43,    33,    45,    -1,    61, 
         -1,    -1,    64,    40,   333,   334,    43,    -1,    45,    -1, 
         -1,   340,    -1,   313,    -1,    -1,    64,   346,    -1,    -1, 
         -1,    -1,    -1,    -1,    61,    -1,    -1,    64,    -1,    91, 
         92,    -1,    -1,   333,   334,    -1,    -1,    -1,   367,   313, 
        340,    -1,    -1,    91,    92,    -1,   346,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    91,    92,    -1,    -1,    -1,   333, 
        334,    -1,    -1,    -1,   126,    -1,   340,   367,    -1,    -1, 
         -1,    -1,   346,   402,   403,    -1,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,   126, 
         -1,    40,    -1,   367,    43,    -1,    45,    -1,    -1,    -1, 
         -1,    -1,   402,   403,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    64,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402,   403, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    91,    92,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         -1,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,   333,   334,    -1,    -1,    -1,   313,    -1,   340,    -1, 
         -1,    -1,    -1,    -1,   346,   333,   334,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,   333,   334,   346,    -1, 
         -1,    -1,    -1,   340,    -1,   367,    -1,    -1,    -1,   346, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,   367, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        402,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   333,   334,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", "'\\\\'", "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_EXTENDS', 'T_IMPLEMENTS', 'T_INSTANCEOF', 
      'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 'T_NAMESPACE', 'T_USE', NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_AS', 'T_OBJECT_OPERATOR', 
      'T_ARRAY', 'T_FUNCTION', 'T_CONST', NULL, NULL, NULL, NULL, 'T_VARIABLE', 
      'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', NULL, 'T_NEW', NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_FOR', 'T_WHILE', 
      'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 'T_CONTINUE', 'T_YIELD', NULL, NULL, 
      'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 
      'T_ADD_EQUAL', 'T_SUB_EQUAL', 'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', 
      NULL, 'T_DOUBLE_COLON', 'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 
      'T_BOOLEAN_OR', 'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 
      'T_AND_EQUAL', 'T_XOR_EQUAL', 'T_SHR', 'T_SHL', 'T_EXP', 'T_ELLIPSIS', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 186 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= (array)$yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
      foreach (get_loaded_extensions() as $ext) {
        $yyVal->imports[]= new NativeImportNode(array('name' => $ext.'.*'));
      }
    } break;

    case 3:  #line 201 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 201 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 212 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 213 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 217 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-1+$yyTop]))); 
    } break;

    case 11:  #line 224 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 13:  #line 229 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 14:  #line 235 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 15:  #line 235 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 16:  #line 244 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 17:  #line 244 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->body= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 18:  #line 255 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 19:  #line 256 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 20:  #line 260 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 21:  #line 261 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 22:  #line 265 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 23:  #line 266 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 24:  #line 270 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge((array)$yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 25:  #line 271 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 26:  #line 275 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 27:  #line 276 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 277 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 29:  #line 281 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 30:  #line 282 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 31:  #line 286 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 32:  #line 287 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 33:  #line 293 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-2+$yyTop][0];
      $yyVal->annotations= $yyVals[-2+$yyTop][1];
      $yyVal->type= new TypeName('var');
      $yyVal->name= $yyVals[-1+$yyTop];
      $yyVal->initialization= $yyVals[0+$yyTop];
    } break;

    case 34:  #line 303 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-2+$yyTop], TypeName::$VAR, $yyVals[0+$yyTop]));
    } break;

    case 35:  #line 309 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 36:  #line 310 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 316 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create('__construct' == $yyVals[-1+$yyTop] ? new ConstructorNode() :  new MethodNode(), TRUE); } break;

    case 38:  #line 316 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= NULL;
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= NULL;
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 39:  #line 330 "src/main/jay/grammars/php.jay"
    { $yyVal= TypeName::$VAR; } break;

    case 40:  #line 331 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 336 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 42:  #line 337 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 43:  #line 341 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 44:  #line 342 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 45:  #line 346 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 46:  #line 350 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVals[-1+$yyTop] && $yyVal->parameters= array('default' => $yyVals[-1+$yyTop]);
    } break;

    case 47:  #line 355 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[-3+$yyTop]; 
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 48:  #line 363 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 49:  #line 364 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 50:  #line 368 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 51:  #line 369 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 53:  #line 374 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 54:  #line 380 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 55:  #line 383 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 56:  #line 386 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ClassNameAccessNode(new TypeName($yyVals[-2+$yyTop])));
    } break;

    case 57:  #line 393 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 394 "src/main/jay/grammars/php.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 59:  #line 398 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 60:  #line 399 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 61:  #line 403 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 62:  #line 404 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 63:  #line 408 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-2+$yyTop], 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 64:  #line 409 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => $yyVals[-3+$yyTop], 'vararg' => TRUE, 'check' => TRUE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 65:  #line 410 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 66:  #line 411 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => new TypeName('var'), 'vararg' => TRUE, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 67:  #line 419 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 69:  #line 424 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 70:  #line 425 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 71:  #line 429 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 72:  #line 429 "src/main/jay/grammars/php.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 73:  #line 432 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 74:  #line 432 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 75:  #line 437 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 76:  #line 437 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 77:  #line 447 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 78:  #line 447 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 79:  #line 452 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 80:  #line 452 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 81:  #line 456 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 82:  #line 456 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 83:  #line 460 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 84:  #line 460 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 85:  #line 464 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 86:  #line 464 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 87:  #line 469 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 89:  #line 470 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 91:  #line 471 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 92:  #line 471 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 94:  #line 475 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new NoopNode()); } break;

    case 95:  #line 479 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => NULL, 'value' => $yyVals[0+$yyTop]); } break;

    case 96:  #line 480 "src/main/jay/grammars/php.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 97:  #line 484 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 99:  #line 489 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 100:  #line 490 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 101:  #line 494 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 102:  #line 494 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 103:  #line 498 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 104:  #line 498 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 105:  #line 504 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 106:  #line 505 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 107:  #line 509 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 108:  #line 510 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 109:  #line 510 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 111:  #line 519 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 520 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-1+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 113:  #line 524 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CatchNode()); } break;

    case 114:  #line 524 "src/main/jay/grammars/php.jay"
    {
    $yyVals[-8+$yyTop]->type= $yyVals[-5+$yyTop];
    $yyVals[-8+$yyTop]->variable= $yyVals[-4+$yyTop];
    $yyVals[-8+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 115:  #line 533 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 116:  #line 534 "src/main/jay/grammars/php.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 117:  #line 535 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge([$yyVals[-2+$yyTop]], $yyVals[0+$yyTop]) : [$yyVals[-2+$yyTop]]; } break;

    case 118:  #line 539 "src/main/jay/grammars/php.jay"
    { $yyVal= new UnpackNode($yyVals[0+$yyTop]); } break;

    case 119:  #line 540 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 120:  #line 545 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 122:  #line 550 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 123:  #line 551 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 124:  #line 555 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 126:  #line 560 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 565 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new DynamicInstanceCreationNode();
      $yyVal->variable= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
    } break;

    case 128:  #line 573 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 129:  #line 576 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 130:  #line 579 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 131:  #line 582 "src/main/jay/grammars/php.jay"
    {
      $yyVal= new ClassNameAccessNode(NULL);
    } break;

    case 132:  #line 588 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 133:  #line 594 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 134:  #line 594 "src/main/jay/grammars/php.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 135:  #line 600 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 136:  #line 600 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[0+$yyTop]->position= $p;
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 137:  #line 604 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 138:  #line 604 "src/main/jay/grammars/php.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 139:  #line 614 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 140:  #line 614 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 141:  #line 623 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop])); break;
    } break;

    case 142:  #line 626 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 143:  #line 629 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 144:  #line 632 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 145:  #line 635 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 146:  #line 638 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 147:  #line 641 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 148:  #line 644 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 149:  #line 647 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 150:  #line 651 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 151:  #line 657 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 152:  #line 663 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 153:  #line 669 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 154:  #line 674 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicInstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->variable= $yyVals[0+$yyTop]; 
    } break;

    case 155:  #line 679 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 156:  #line 682 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new CastNode(array('type' => new TypeName('var[]'), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 157:  #line 685 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new SilenceOperatorNode($yyVals[0+$yyTop]));
    } break;

    case 158:  #line 688 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode((array)$yyVals[-5+$yyTop], (array)$yyVals[-1+$yyTop], $yyVals[-3+$yyTop]));
    } break;

    case 159:  #line 691 "src/main/jay/grammars/php.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 160:  #line 702 "src/main/jay/grammars/php.jay"
    { $yyVal= array(); } break;

    case 161:  #line 703 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 162:  #line 707 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 163:  #line 708 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 164:  #line 712 "src/main/jay/grammars/php.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 166:  #line 717 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 167:  #line 717 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 168:  #line 718 "src/main/jay/grammars/php.jay"
    { $p= $yyLex->position; } break;

    case 169:  #line 718 "src/main/jay/grammars/php.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 170:  #line 722 "src/main/jay/grammars/php.jay"
    { switch (strtolower($yyVals[0+$yyTop])) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 171:  #line 728 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 172:  #line 729 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 173:  #line 730 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 174:  #line 731 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 175:  #line 732 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 176:  #line 736 "src/main/jay/grammars/php.jay"
    { 
      $yyVal= $yyLex->create(new ArrayNode(array('values' => NULL)));
    } break;

    case 177:  #line 739 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => NULL)));
    } break;

    case 178:  #line 742 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => $yyVals[0+$yyTop])));
    } break;

    case 179:  #line 745 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => $yyVals[0+$yyTop])));
    } break;

    case 180:  #line 751 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 181:  #line 752 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 182:  #line 756 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 184:  #line 761 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 185:  #line 765 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 186:  #line 766 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 187:  #line 767 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 188:  #line 768 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 189:  #line 769 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 190:  #line 770 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 191:  #line 771 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => '~='); } break;

    case 192:  #line 772 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 193:  #line 773 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 194:  #line 774 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 195:  #line 775 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 196:  #line 776 "src/main/jay/grammars/php.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 197:  #line 780 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 198:  #line 781 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 199:  #line 782 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 200:  #line 783 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 201:  #line 784 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 202:  #line 785 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 203:  #line 786 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 204:  #line 787 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 205:  #line 791 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 206:  #line 792 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 207:  #line 793 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 208:  #line 794 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 209:  #line 795 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 210:  #line 796 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 211:  #line 797 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 212:  #line 798 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 213:  #line 799 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 214:  #line 800 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 215:  #line 801 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 216:  #line 802 "src/main/jay/grammars/php.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 217:  #line 806 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 218:  #line 807 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => '~'); } break;

    case 219:  #line 808 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 220:  #line 809 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 221:  #line 810 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 222:  #line 811 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 223:  #line 815 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 224:  #line 816 "src/main/jay/grammars/php.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 225:  #line 821 "src/main/jay/grammars/php.jay"
    { $yyVal= NULL; } break;

    case 227:  #line 826 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 228:  #line 827 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 229:  #line 831 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 230:  #line 831 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 231:  #line 834 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode()); } break;

    case 232:  #line 834 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 233:  #line 837 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop])); 
    } break;

    case 234:  #line 840 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, new VariableNode($yyVals[0+$yyTop]))); 
    } break;

    case 235:  #line 843 "src/main/jay/grammars/php.jay"
    {
      $yyVal= $yyLex->create(new DynamicVariableReferenceNode(NULL, $yyVals[-1+$yyTop])); 
    } break;

    case 236:  #line 846 "src/main/jay/grammars/php.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop])); } break;

    case 237:  #line 846 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 238:  #line 849 "src/main/jay/grammars/php.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 239:  #line 849 "src/main/jay/grammars/php.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 242:  #line 862 "src/main/jay/grammars/php.jay"
    { $yyVal= 'callable' === $yyVals[0+$yyTop] ? new TypeName('->var', null) : new TypeName($yyVals[0+$yyTop]); } break;

    case 243:  #line 866 "src/main/jay/grammars/php.jay"
    { $yyVal= new TypeName('var[]'); } break;

    case 244:  #line 870 "src/main/jay/grammars/php.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 245:  #line 871 "src/main/jay/grammars/php.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 246:  #line 877 "src/main/jay/grammars/php.jay"
    { $yyVal= 0; } break;

    case 247:  #line 878 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 248:  #line 882 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 249:  #line 883 "src/main/jay/grammars/php.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 250:  #line 887 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 251:  #line 888 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 252:  #line 889 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 253:  #line 890 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 254:  #line 891 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 255:  #line 892 "src/main/jay/grammars/php.jay"
    { $yyVal= MODIFIER_FINAL; } break;
#line 2543 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
