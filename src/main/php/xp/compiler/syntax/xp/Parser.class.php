<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\YieldNode;
use xp\compiler\ast\YieldFromNode;
#line 77 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_YIELD= 367;
    const T_YIELD_FROM= 368;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_DOTS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    66,    59, 
         68,    59,    69,    59,    70,    59,    72,    59,    73,    59, 
         74,    59,    75,    59,    59,    59,    59,    77,    77,    79, 
         79,    78,    78,    80,    67,    67,    71,    71,    81,    81, 
         83,    82,    84,    82,    63,    63,    64,    85,    64,    76, 
         76,    86,    86,    90,    89,    91,    91,    87,    87,    92, 
         88,    55,    55,    93,    93,    60,    60,    94,    94,    94, 
         98,    98,    98,    98,   100,    31,   102,    31,    31,    31, 
         31,   104,    31,   105,    31,   106,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,    31,    31,    31,    31, 
         31,    31,   112,    31,    99,    99,   103,   103,   113,   113, 
        114,   114,    36,   116,    36,    36,    36,    36,    36,    36, 
        115,   115,    97,    97,   117,   117,   119,   119,   118,   118, 
        107,   107,   107,   107,   107,   107,   107,   107,   107,   107, 
        107,   107,   108,   108,   108,   108,   108,   108,   108,   108, 
        109,   109,   109,   109,   109,   109,   109,   109,   109,   109, 
        109,   109,   110,   110,   110,   110,   110,   110,   111,   111, 
        101,   101,   120,   120,   122,   121,   121,   124,   121,   125, 
        121,   123,   123,    10,    10,    10,    32,    32,    32,    32, 
         12,    12,    95,    96,   127,   127,   128,   128,   129,   129, 
        129,   129,   126,   126,    21,    21,    49,    49,   130,   130, 
        131,   131,   131,   131,   131,   131,   131,   131, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     1,     3,     0,     1,     5,     4,     4, 
          1,     4,     1,     1,     0,     3,     0,     3,     4,     4, 
          2,     0,     4,     0,     5,     0,     6,     2,     1,     2, 
          4,     2,     3,     1,     1,     1,     1,     1,     5,     3, 
          3,     3,     0,     7,     2,     4,     0,     1,     1,     3, 
          1,     3,     1,     0,     4,     1,     1,     1,     1,     1, 
          1,     1,     1,     1,     1,     3,     0,     1,     3,     3, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     3, 
          4,     4,     3,     3,     3,     3,     3,     3,     4,     4, 
          3,     3,     3,     3,     3,     3,     3,     3,     3,     4, 
          4,     3,     2,     2,     2,     2,     2,     2,     2,     2, 
          0,     1,     1,     2,     0,     4,     2,     0,     6,     0, 
          4,     1,     1,     1,     1,     1,     1,     1,     1,     1, 
          1,     4,     3,     4,     1,     3,     1,     3,     2,     1, 
          3,     5,     5,     5,     1,     3,     0,     1,     1,     2, 
          1,     1,     1,     1,     1,     1,     1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   294,     0,     0,   296,   295,     0,    15,     0,   321, 
        323,   322,   325,   327,   326,   328,   324,     1,     0,    68, 
          0,   319,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   320,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   224,     0,     0,   230,   226,   229,   227,   228, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,     0,   297,     0,   298,   299,   300,     0,   305, 
         27,     0,     0,     0,    31,    35,     0,     0,     0,   233, 
          0,     0,     0,     0,     0,     0,   192,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   231,     0,   232,   204, 
        205,   206,   207,   208,     0,     0,   235,     0,     0,    79, 
         80,    83,    84,     0,    78,     0,     0,     0,     0,     0, 
          0,     0,     0,   302,    29,    35,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   198, 
          0,   196,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   219,     0,   194,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   279,   280,     0,   285, 
        293,   292,   290,   191,   282,     0,     0,     0,   225,     0, 
          0,   308,     0,     0,   309,     0,     0,     0,   303,   306, 
          0,   316,     0,     0,    25,     0,    34,    36,    37,     0, 
          0,     0,    42,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   186,   188,     0,   100,     0,     0,     0, 
        221,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   212,     0, 
        203,     0,     0,   284,     0,   175,     0,     0,   238,   236, 
         82,   304,     0,   311,     0,     0,    21,     0,     0,     0, 
          0,     0,     0,     0,    23,     0,    35,     0,     0,   193, 
          0,     0,     0,     0,     0,   189,     0,   222,   190,   220, 
          0,     0,   184,   181,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   288,   313,     0,   314,   113,     0, 
        131,   117,   121,   123,   119,   127,   129,   115,   125,     0, 
          0,     0,     0,   111,     0,    63,     0,     0,     0,     0, 
          0,     0,    35,    45,     0,    43,     0,     0,     0,     0, 
          0,     0,     0,   213,     0,   195,     0,   286,   291,     0, 
        312,     0,   133,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    38,   137,   112,     0,     0,    61, 
         59,   103,   104,   105,   106,   107,   108,     0,     0,     0, 
          0,     0,     0,     0,   179,   180,   197,   216,     0,     0, 
          0,     0,     0,     0,     0,   138,     0,     0,     0,     0, 
        155,     0,     0,   128,   130,     0,     0,     0,     0,   142, 
        223,     0,     0,    93,     0,     0,     0,     0,     0,    65, 
          0,    48,     0,     0,    53,    33,     0,   178,   214,   182, 
        289,   114,     0,     0,     0,     0,   132,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    50,     0, 
         98,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
         52,    55,     0,    49,    54,    47,     0,     0,   139,     0, 
          0,     0,   156,     0,     0,     0,     0,     0,     0,   143, 
          0,     0,     0,     0,    94,    96,    95,     0,     0,     0, 
          0,     0,   164,   170,   134,     0,   161,   162,     0,     0, 
        122,     0,   146,     0,     0,     0,     0,    97,   102,     0, 
         85,     0,    64,     0,     0,     0,    56,     0,     0,   160, 
        169,   163,   135,     0,     0,     0,   158,   116,   151,   153, 
          0,     0,   149,   136,     0,     0,    62,    60,     0,     0, 
          0,     0,   124,   120,     0,     0,     0,   126,   150,    87, 
         86,    66,   166,     0,     0,     0,   159,     0,     0,     0, 
          0,   171,   118,     0,   154,   167,     0,   152,     0,     0, 
        165, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   144,     4,     7,     8,    17,    53,    18, 
        266,   114,    61,    99,   123,   178,    63,   271,    62,   101, 
        125,   414,   267,   268,   269,   401,   272,   273,   353,   354, 
        402,   200,   368,   412,   504,   146,   494,   505,   537,   499, 
        564,   593,   498,   495,   449,   458,   540,    41,    30,    42, 
         58,    94,    95,    96,   147,   496,   497,   403,   404,   307, 
        432,   442,   482,   608,   436,   439,   523,   437,   438,   443, 
        611,   440,   441,   435,   473,   575,   475,   489,   476,   490, 
        612,   613,   626,   627,   625,   576,   600,   577,   578,   598, 
        634,   599,   148,   277,   116,   117,   149,   375,   284,   194, 
        244,   195,   202,   189,   293,   281,   150,   151,   152,   153, 
        154,   469,   203,   204,   155,   103,   156,   157,   340,   245, 
        246,   332,   247,   430,   333,   118,   119,   120,   171,    31, 
         32, 
    );
    protected static $yySindex = array(         -275,
          0,     0,  -214,   120,   385,   593,  -214,     0,    89,   160, 
        187,     0,  -237,  -237,     0,     0,   220,     0,    87,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   288,     0, 
        635,     0,     0,   120,   120,     0,   -31,   227,   -30,  -147, 
         -7,     0,     0,     0,     0,     0,     0,     0,   -30,   -30, 
        -30,     0,   218,     0,   -11,   110,     0,   249,    87,   635, 
        120,   120,   120,   270,     0,   283,   328,     0,   120,   120, 
        331,     0,     0,   311,   121,   159,   121,     0,     0,     0, 
          0,     0,     0,   120,   346,     0,     0,     0,     0,     0, 
        336,   106,     0,   438,   164,     0,   109,   120,   215,   120, 
        405,   215,  5278,   491,   628,   628,  -184,     0,  -157,     0, 
        236,   506,    58,     0,   477,     0,     0,     0,    82,     0, 
          0,   120,   448,   531,     0,     0,   449,  5688,  5688,     0, 
       5688,  5688,  5688,  5688,  5688,  5688,     0,  5688,   456,   519, 
          0,  5423,   455,   172,  3671,   -36,     0,   543,     0,     0, 
          0,     0,     0,     0,   505,   555,     0,  5688,    89,     0, 
          0,     0,     0,   540,     0,   120,   297,   345,   383,   477, 
        358,   525,   109,     0,     0,     0,   120,   877,   375,   464, 
       2780,  3671,   -43,   -43,   -78,   -43,   -43,   -43,   297,     0, 
       5688,     0,  5688,   381,   -36,   506,     0,   -49,  2931,   310, 
        300,   600,   598,     0,   -62,     0,  5688,  5688,  5688,  5688, 
       5688,  5688,  5688,  5688,  5688,  5688,  5688,  5688,  5688,  5688, 
       5688,  5688,  5322,  5432,  5038,  5688,  5248,  5688,  5688,  5688, 
       5688,  5688,  5688,  5688,   120,  5688,     0,     0,   297,     0, 
          0,     0,     0,     0,     0,   -36,  -237,  5688,     0,  -114, 
        603,     0,   414,   297,     0,    43,   602,   297,     0,     0, 
       1300,     0,   533,   402,     0,   105,     0,     0,     0,     0, 
        538,   360,     0,  5688,   625,   477,   -36,   547,   549,  3671, 
       5688,  3671,  5532,     0,     0,   -36,     0,   605,   381,   -62, 
          0,   381,  -208,  3879,  3916,  3916,  3916,  3916,  3916,  3916, 
       3916,  3916,  3916,  3916,  3916,  3671,   616,  4056,  1229,    27, 
       5688,   137,  5688,   137,  5688,  5688,    69,    69,  5688,  5688, 
         69,    69,    31,    31,   -51,   -51,   -51,   -78,     0,   -43, 
          0,  5688,  5688,     0,   636,     0,   617,   519,     0,     0, 
          0,     0,    29,     0,   297,   242,     0,   663,   428,   479, 
        431,   -72,   569,   653,     0,   375,     0,   439,  5688,     0, 
       5688,   -17,   654,   663,  3671,     0,  5688,     0,     0,     0, 
        572,   659,     0,     0,   -36,  5688,  3916,  3916,    69,    69, 
         69,    69,   601,   660,     0,     0,    92,     0,     0,   -26, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   662, 
        575,  3009,   663,     0,   644,     0,   667,   672,   710,   622, 
        605,   591,     0,     0,  5688,     0,  1505,   675,   597,   609, 
        -36,   623,  3671,     0,  5688,     0,   439,     0,     0,  5688, 
          0,  5688,     0,   410,  5688,   716,   722,   541,   723,   706, 
        707,   728,   729,   432,     0,     0,     0,   475,   149,     0, 
          0,     0,     0,     0,     0,     0,     0,   731,   149,   714, 
        515,  1481,  3052,   569,     0,     0,     0,     0,   -36,   741, 
        746,   734,   663,   733,   309,     0,  3165,  5688,  5688,   663, 
          0,   435,   457,     0,     0,  5688,  5688,   739,   399,     0, 
          0,   751,   451,     0,   774,   773,   -55,   -73,   -73,     0, 
        730,     0,   -32,  -100,     0,     0,   569,     0,     0,     0, 
          0,     0,   697,  5688,   410,   701,     0,   766,  3192,   705, 
        786,   787,   468,  3232,  3438,  5688,   432,   712,     0,   577, 
          0,   517,   149,   509,   605,   149,   804,   773,   805,   149, 
          0,     0,   663,     0,     0,     0,   190,  3671,     0,   663, 
       5688,   541,     0,  5688,   512,  5688,   541,   732,  3671,     0, 
        663,   605,   120,   -15,     0,     0,     0,   773,   517,   517, 
        815,   736,     0,     0,     0,   190,     0,     0,   737,   798, 
          0,  3465,     0,  3493,   487,    37,   740,     0,     0,  5688, 
          0,   663,     0,   -15,   -15,   517,     0,   819,   743,     0, 
          0,     0,     0,  5688,   808,   541,     0,     0,     0,     0, 
        744,    37,     0,     0,  3617,   745,     0,     0,   -15,   120, 
        663,   823,     0,     0,   541,  5688,   813,     0,     0,     0, 
          0,     0,     0,  -103,   747,   541,     0,  3644,   663,   120, 
        844,     0,     0,   663,     0,     0,   763,     0,   663,   769, 
          0, 
    );
    protected static $yyRindex= array(         1547,
          0,     0,   323,     0,     0,   312,  1704,     0,   892,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        896,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -33,    55,     0,     0,   158,     0,   982, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   919,   -91,   776,   -91,     0,     0,     0, 
          0,     0,     0,     0,   -34,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   782,     0, 
          0,   782,   817,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   145,     0,     0,     0,     0,     0, 
          0,     0,     0,    99,     0,     0,     0,  2368,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,  2032,  1920, 
        683,   856,     0,     0,   486,  1620,     0,   526,     0,     0, 
          0,     0,     0,     0,     0,   101,     0,   857,   -35,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   655, 
          0,     0,     0,     0,     0,     0,     0,    86,   796,  1016, 
        111,   674,  2059,  2101,  2616,  2129,  2331,  2514,     0,     0, 
          0,     0,     0,     0,  1620,  5624,  1647,   -12,     0,  1495, 
          0,     0,   -19,     0,   684,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   884,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  1799,     0,  1219,     0,   146, 
          0,     0,     0,     0,     0,   901,     0,     0,     0,     0, 
         86,     0,  1713,     0,     0,     0,     0,     0,     0,    41, 
          0,   821,     0,     0,   867,     0,  1620,   874,   878,   339, 
        857,   392,     0,     0,     0,  1620,     0,   -24,     0,     0, 
          0,     0,     0,    66,    78,   296,   429,   770,   775,  1085, 
       1133,  1345,  1409,  2271,  2438,  1176,     0,  5003,  4982,  4768, 
          0,  4813,     0,  4837,     0,     0,  4302,  4318,     0,     0, 
       4345,  4560,  1877,  4136,  4082,  4110,  4178,  2753,     0,  2542, 
          0,   854,   857,     0,  1316,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   845,     0,    85, 
          0,     0,   -10,     0,     0,     0,     0,  4861,   857,     0, 
        848,     0,     0,   845,   754,     0,     0,     0,     0,     0, 
          0,  1468,     0,     0,  1620,     0,  2445,  2571,  4576,  4603, 
       4728,  4744,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  -109,     0,     0,     0,     0,   825,     0,     0, 
        916,     0,     0,     0,     0,     0,   122,     0,     0,     0, 
       1620,     0,    12,     0,   857,     0,  5028,     0,     0,   857, 
          0,   920,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   943,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    86,     0,  1075,     0,     0,     0,     0,  1620,     0, 
          0,     0,   845,   421,     0,     0,     0,   929,     0,   845, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   243,     0,     0,   948,     0,   949,   949,     0, 
          0,     0,     0,     0,     0,     0,   -10,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   627,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   133,     0,     0,   243,     0,     0,   951,     0,   943, 
          0,     0,   845,     0,     0,     0,     0,   434,     0,   845, 
        929,     0,     0,     0,     0,     0,     0,     0,   480,     0, 
        845,   243,     0,     0,     0,     0,     0,   952,   133,   133, 
          0,     0,     0,     0,     0,   287,     0,     0,     0,     0, 
          0,     0,     0,     0,   418,   869,     0,     0,     0,     0, 
          0,   845,     0,     0,     0,   133,     0,     0,     0,     0, 
          0,     0,     0,   857,     0,     0,     0,     0,     0,     0, 
          0,   871,     0,     0,     0,     0,     0,     0,     0,     0, 
        845,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   -92,     0, 
          0,     0,     0,   -92,     0,     0,     0,     0,   845,     0, 
          0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,   990,   528,   571,    91, 
        992,   -60,     0,   922,   898,  -130,     0,     0,     0,     0, 
       -117,  -419,     0,     0,     0,  2227,     0,   645,     0,     0, 
         83,  2951,  -283,     0,     0,   -63,  -355,   503,   521,     0, 
       -113,  -128,     0,   482,     0,     0,     0,     0,   974,   977, 
          0,   450,     0,   899,  -104,  -150,   221,     0,   415,  -209, 
          0,     0,  -475,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   522,   511, 
          0,   427,     0,     0,     0,     0,     0,   465,   470,     0, 
          0,     0,     0,     0,   858,   859,   687,     0,   231,     0, 
        -28,     0,   847,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   760,     0,     0,     0,   806,     0,   809, 
          0,     0,     0,     0,     0,     0,     0,   889,   895,     0, 
       1036, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   243,   175,   223,   223,    93,   223,   242, 
         97,    52,    16,   434,    50,   110,    57,   112,   172,    57, 
        640,   218,    12,   104,   544,    13,   542,     1,   112,    47, 
         48,    26,   109,    32,    34,    57,    59,   121,   336,   124, 
        130,    93,    93,   591,   508,   261,    69,   236,    32,   113, 
        301,   372,    58,   251,   240,    58,    74,    74,    74,   262, 
        113,   124,    15,   233,    81,    82,    92,   233,   231,   229, 
         58,   230,   231,   232,   236,   162,   581,   232,   301,    74, 
         46,   585,   236,   344,    44,    60,   225,   546,   227,     5, 
        543,   373,    74,    74,    17,    74,   433,   169,    17,    44, 
         92,    92,   164,   501,    58,   233,   210,   592,    74,   210, 
        231,   229,    55,   230,    32,   232,   124,    74,   211,   172, 
        168,   211,   383,   210,   210,   173,    16,   460,   275,    54, 
        624,   374,   431,   172,    34,   211,   211,   198,    10,    65, 
         54,    54,    91,   174,    17,   337,   338,    17,   112,   637, 
         40,   200,   236,   386,   200,   163,   236,   315,   210,   503, 
        643,   252,    74,    44,    74,    44,   285,    70,    74,   200, 
        211,   111,    74,   233,   329,    17,   363,   565,   231,   229, 
        113,   230,   172,   232,    74,   145,     9,   408,   307,   237, 
        210,   101,    56,   234,   236,   112,   225,     9,   227,   112, 
         74,    71,   211,   200,   110,    35,   307,   109,   317,   531, 
        181,   182,    10,   183,   184,   185,   186,   187,   188,    26, 
        190,   315,   472,    10,   199,   234,   417,   113,   384,    12, 
         74,   113,    57,   235,    74,   200,   641,   218,   237,   112, 
        145,   590,   337,   338,   317,    36,    39,   409,   360,    74, 
         71,   567,   239,    74,   418,   101,   419,   366,   536,   410, 
        235,    74,   236,   110,   110,    39,   493,   411,    58,    15, 
        237,   113,    51,   280,   534,   282,    68,   291,   588,   239, 
        109,   109,   462,    57,   535,    74,    57,   239,    71,   294, 
        295,   296,   297,   298,   299,   300,   301,   302,   303,   304, 
        305,   306,   308,   309,   310,   312,   314,   317,   318,   321, 
        322,   323,   324,   325,   326,   327,   328,     9,   330,   168, 
        470,   168,   210,   237,   238,   471,   168,   301,    78,   168, 
        306,   168,   172,    16,   211,    57,   241,   335,   235,   241, 
         74,    79,   235,    10,    17,   317,   426,   538,   538,   516, 
        237,   238,   515,   241,   241,   315,   358,   239,   237,   238, 
        206,   239,   201,   145,   350,   365,   388,   200,     9,   234, 
         97,   317,   287,   518,    17,    17,    16,   168,    49,     9, 
        235,   317,   239,   241,   492,   568,    80,   112,   241,   101, 
         10,    34,   467,   377,    10,   378,   106,   379,   380,   239, 
        172,   381,   382,   356,    17,    10,   105,   317,     9,   609, 
        610,   168,   168,     5,   306,   145,    17,   317,   357,   113, 
        241,    83,   169,   255,    17,   201,   228,   226,   237,   238, 
         98,   239,   237,   238,    10,   240,   351,   223,   224,   528, 
        509,   145,   527,   145,    74,   589,   580,   234,   235,   423, 
        157,   234,   157,   317,    74,   594,   595,   157,   427,   331, 
        157,   140,   157,   239,   140,   617,   618,   239,   100,   242, 
        237,   238,   242,   112,   141,   233,   222,   141,   108,   210, 
        231,   229,   619,   230,   240,   232,   242,   242,   493,   234, 
        632,   211,   211,    74,    74,   192,   530,   463,   225,   622, 
        227,    34,   124,   192,   172,   113,   342,   145,   157,    34, 
        201,   367,   145,   191,   306,   107,   240,   477,   406,   369, 
        144,   242,   371,   144,    34,   122,   174,   126,    74,   174, 
        158,    74,   221,   573,   574,    74,   228,   226,   237,   238, 
         37,    38,   157,   157,   174,   166,   168,   168,   168,   168, 
        168,   168,   241,   242,   160,   161,     9,   234,    74,   633, 
        145,   519,   220,   167,   236,    83,   173,   172,   524,   525, 
        176,   179,   168,   133,   177,   143,   193,   205,   174,   646, 
        142,   206,    10,   131,   173,   132,   248,    43,    44,    45, 
         85,    86,    87,    88,    89,    90,   548,   249,   250,   168, 
        105,   254,     5,     5,     5,     5,     5,     5,   559,     5, 
        174,   317,   317,   317,   258,    74,    10,   259,   173,    64, 
         66,    67,     5,     5,     5,     5,   168,   168,   168,   168, 
         91,    83,   168,   145,   270,    74,   582,   283,   584,   288, 
        289,   290,     9,   341,    12,   345,   168,   168,   168,   168, 
        173,   168,   168,   168,   168,   348,   168,   168,   168,   168, 
        168,   349,   355,   480,   359,   367,   134,    13,    10,   361, 
         14,   362,   615,   376,   191,   385,    84,   157,   157,   157, 
        157,   157,   157,    19,    15,   242,   145,   405,   168,   168, 
        407,   413,   415,   428,   421,   133,   424,   143,   425,   445, 
        429,   444,   142,   157,   448,   131,   450,   132,   638,   241, 
        241,   451,   459,   461,   202,   464,   168,   202,    83,   187, 
        187,   465,   187,   187,   187,   187,   187,   187,   187,   187, 
        157,   202,   202,   466,   491,    86,    87,    88,    89,    90, 
        187,   187,   187,   187,   187,   187,   456,   468,    16,   474, 
        235,   454,   452,    83,   453,   478,   455,   157,   157,   157, 
        157,   479,   483,   157,   484,   485,   202,   486,   487,   239, 
        500,   488,   502,   187,   503,   187,   187,   157,   157,   157, 
        157,   510,   157,   157,   157,   157,   511,   157,   134,   157, 
        157,   157,   512,   514,   215,   521,   522,   215,   202,   526, 
        180,    86,    87,    88,    89,    90,   187,   187,   187,   529, 
        243,   215,   215,   243,   532,   244,   533,   447,   244,   157, 
        157,   547,   541,   550,   551,   554,    10,   243,   243,   553, 
        555,   556,   244,   244,   561,   457,   562,   563,   228,   226, 
        237,   238,   242,   242,   569,   570,   215,   157,   566,   223, 
        224,   583,   481,   138,   586,   596,   604,   607,   620,   234, 
        597,   603,   243,   636,   614,   621,   623,   244,   628,   631, 
        639,   642,    20,    21,    22,    23,    24,    25,   215,    26, 
        141,   389,   390,   391,   647,   649,   137,   159,    86,    87, 
         88,    89,    90,   651,   243,    27,   217,   172,    30,   244, 
        392,   393,   394,   395,    28,   396,   397,   128,   129,   172, 
        398,   310,   399,    10,    20,    21,    22,    23,    24,    25, 
         41,    26,   180,    86,    87,    88,    89,    90,    17,    17, 
        202,    17,    17,    17,    17,    17,    17,    27,    17,   185, 
        217,   176,   135,   136,   310,    40,   176,    51,    10,    17, 
         17,    17,    17,    17,    17,   301,   301,   297,   301,   301, 
        301,   301,   301,   301,   298,   301,   481,    19,   299,   109, 
        400,   481,   172,    84,    57,   138,   301,   301,   176,   301, 
        301,   301,    17,    91,    17,    17,   318,   172,    92,    88, 
        145,    90,    89,   147,   187,   148,    33,    29,   102,   127, 
        416,   265,   141,   389,   390,   391,   545,   165,   137,   301, 
        215,   301,   301,   187,    17,    17,    17,    17,   318,   539, 
        481,   571,   392,   393,   394,   395,   243,   396,   397,   128, 
        129,   244,   398,    73,   399,    72,   549,   560,   629,   481, 
        601,   301,   301,   301,   301,   602,   278,   279,   420,   370, 
        481,   292,   223,   223,   334,   339,   223,   223,   223,   223, 
        223,   260,   223,   257,   135,   136,    46,     0,     0,     0, 
          0,     0,   317,   223,   223,    17,   223,   223,    17,     0, 
          0,     0,   187,   187,   187,   187,   187,   187,   187,   187, 
        187,     0,   400,   187,   187,     0,   187,   187,   187,   187, 
        187,   187,   187,   187,   317,     0,    17,     0,   223,   223, 
          0,    32,    32,     0,    32,    32,    32,    32,    32,    32, 
         32,    32,     0,     0,     0,   245,     0,     0,   245,     0, 
          0,     0,    32,    32,    32,    32,    32,    32,     0,   223, 
        223,   223,   245,   245,     0,     0,     0,     0,    17,     0, 
          0,    17,     0,     0,     0,   318,    20,    21,    22,   263, 
         24,    25,     0,    26,     0,    32,     0,    32,    32,     0, 
          0,     0,     0,   247,     0,   301,   247,   245,   301,    27, 
          0,   318,     0,   243,   243,     0,     0,     0,   244,   244, 
        247,   247,     0,     0,     0,   318,   318,   318,    32,    32, 
         32,    17,    17,    17,     0,     0,     0,     0,     0,   245, 
        264,    17,     0,     0,     0,     0,   177,     0,     0,   177, 
          0,    17,    17,    17,     0,   247,     0,   318,   301,   301, 
        301,    17,     0,   177,   177,     0,     0,     0,   301,     0, 
          0,   317,     0,     0,     0,     0,     0,     0,   301,   301, 
        301,     0,     0,     0,     0,     0,     0,   247,   301,   176, 
          0,     0,   176,     0,     0,   233,   222,   317,   177,     0, 
        231,   229,   223,   230,     0,   232,     0,   176,     0,     0, 
          0,   317,   317,   317,     0,     0,     0,     0,   225,     0, 
        227,    17,    17,    17,    17,    17,    17,    17,    17,    17, 
        177,    17,    17,    17,     0,    17,    17,    17,    17,    17, 
         17,   176,    17,   317,     0,     0,     0,     0,   301,   301, 
        301,   301,   301,   301,   301,   301,   301,   223,     0,   301, 
        301,    32,   301,   301,   301,   301,   301,   301,     0,   301, 
          0,   245,     0,   176,     0,     0,   223,     0,     0,     0, 
          0,     0,   287,   287,   236,    17,   287,   287,   287,   287, 
        287,   287,   287,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   287,   287,   287,   287,   287,   287,     0, 
          0,     0,     0,     0,     0,   246,    32,     0,   246,   247, 
         19,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   246,   246,     0,    32,   287,     0,   287,   287, 
          0,     0,     0,     0,     0,   223,   223,   223,   223,   223, 
        223,   223,   223,   223,   347,    17,   223,   223,     0,   223, 
        223,   223,   223,   223,   223,   223,   223,   246,     0,   287, 
        287,   287,     0,     0,     0,     0,     0,     0,     0,   248, 
          0,     0,   248,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   248,   248,     0,   246, 
          0,     0,     0,     0,    32,    32,    32,    32,    32,    32, 
         32,    32,    32,     0,     0,    32,    32,     0,    32,    32, 
         32,    32,    32,    32,    32,    32,     0,     0,   245,   245, 
          0,   248,     0,     0,   183,   183,     0,     0,   183,   183, 
        183,   183,   183,   183,   183,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   183,   183,   183,   183,   183, 
        183,    99,    99,   248,     0,    99,    99,    99,    99,    99, 
        235,    99,     0,     0,     0,     0,   247,   247,     0,     0, 
          0,     0,    99,    99,    99,    99,    99,     0,   183,   239, 
        183,   183,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    19,   287,     0,     0,     0,     0,     0,     0,    20, 
         21,    22,   263,    24,    25,     0,    26,    99,    99,     0, 
          0,   183,   183,   183,     0,    19,     0,     0,     0,     0, 
          0,   246,    27,     0,     0,   506,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    99,    99, 
         99,     0,     0,     0,     0,     0,     0,   287,   228,   226, 
        237,   238,     0,   264,     0,     0,     0,     2,     0,   223, 
        224,     0,     0,     0,     0,     0,   287,     0,     0,   234, 
          0,     0,     0,     0,     0,     0,   281,   281,     0,     0, 
        281,   281,   281,   281,   281,   248,   281,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   281,   281,   281, 
        281,   281,   281,   187,   187,     0,   187,   187,   187,   187, 
        221,   187,   187,   187,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   187,   187,   187,   187, 
          0,     0,   281,   281,     0,   287,   287,   287,   287,   287, 
        287,   287,   287,   287,   183,     0,   287,   287,     0,   287, 
        287,   287,   287,   287,   287,   287,   287,   187,     0,     0, 
        187,     0,     0,   281,   281,   281,     0,     0,     0,     0, 
          0,    99,     0,     0,     0,     0,     0,     0,   246,   246, 
         20,    21,    22,   263,    24,    25,     0,    26,     0,     0, 
        187,     0,   187,     0,     0,     0,     0,     0,     0,   183, 
          0,     0,     0,    27,    20,    21,    22,   263,    24,    25, 
          0,    26,     0,     0,     6,     0,     0,     0,   183,     0, 
          0,     0,     0,   325,     0,     0,    99,    27,     0,     0, 
          0,     0,     0,     0,   264,     0,     0,     0,     0,     0, 
          0,     0,   248,   248,    99,    99,     2,     2,     2,     2, 
          2,     2,     0,     2,    99,   283,   283,     0,   264,   283, 
        283,   283,   283,   283,     0,   283,     2,     2,     2,     0, 
          2,     0,     0,     0,     0,     0,   283,   283,   283,   283, 
        283,   283,     0,     0,     0,     0,     0,   183,   183,   183, 
        183,   183,   183,   183,   183,   183,   281,     0,   183,   183, 
          0,   183,   183,   183,   183,   183,   183,   183,   183,     0, 
          0,   283,   283,     0,    99,    99,    99,    99,    99,    99, 
         99,    99,    99,   185,     0,    99,    99,     0,    99,    99, 
         99,    99,    99,    99,   261,    99,     0,   261,     0,   261, 
        261,   261,   283,   283,   283,     0,     0,     0,     0,     0, 
          0,   281,     0,     0,   261,   261,   261,   261,   261,   261, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        281,     0,     0,     0,     0,     0,   230,   230,   187,   230, 
          0,   230,   230,   230,   230,   230,   230,     0,     0,   261, 
        261,     0,   325,     0,     0,     0,     0,   187,     0,   230, 
        230,   230,   230,     6,     6,     6,     6,     6,     6,     0, 
          6,     0,   325,   325,   325,   325,   325,   325,   325,   325, 
        261,   261,     0,     6,     6,     6,     6,     0,     0,     0, 
        230,     0,   230,   230,     0,   325,     0,     0,     0,   281, 
        281,   281,   281,   281,   281,   281,   281,   281,     0,     0, 
        281,   281,     0,   281,   281,   281,   281,   281,   281,     0, 
        281,     0,     0,   230,   325,   230,   187,   187,   187,   187, 
        187,   187,   187,   187,   187,   283,     0,   187,   187,     0, 
        187,   187,   187,   187,   187,   187,   187,   187,   223,   223, 
          0,     0,     0,   223,   223,   223,   223,     0,   223,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   223,   223,   223,   223,   275,   275,     0,     0,   275, 
        275,   275,   275,   275,     0,   275,     0,     0,     0,     0, 
        283,     0,     0,     0,     0,     0,   275,   275,   275,   275, 
        275,   275,   223,     0,   223,   223,     0,     0,     0,   283, 
          0,     0,     0,   261,     0,     0,     0,   276,   276,     0, 
          0,   276,   276,   276,   276,   276,     0,   276,     0,     0, 
          0,   275,   275,     0,     0,   223,     0,   223,   276,   276, 
        276,   276,   276,   276,     0,   274,   274,     0,     0,   274, 
        274,   274,   274,   274,     0,   274,     0,     0,     0,     0, 
          0,     0,   275,   275,     0,     0,   274,   274,   274,   274, 
        274,   274,     0,   276,   276,     0,     0,     0,   283,   283, 
        283,   283,   283,   283,   283,   283,   283,     0,     0,   283, 
        283,     0,   283,   283,   283,   283,   283,   283,     0,   283, 
          0,   274,   274,     0,   276,   276,     0,     0,     0,     0, 
          0,   230,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        230,     0,   274,   274,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   261,   261,     0,     0, 
        261,   261,   261,   261,   261,     0,     0,   261,   261,     0, 
        261,   261,   261,   261,   261,   261,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   249,     0,     0,   249,   275,     0,     0,     0,   230, 
        230,   230,   230,   230,   230,   230,   230,   230,   249,   249, 
        230,   230,     0,   230,   230,   230,   230,   230,   230,   230, 
        230,     0,     0,   223,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   276,     0,     0, 
          0,     0,   223,   249,     0,     0,     0,   277,   277,     0, 
        275,   277,   277,   277,   277,   277,     0,   277,     0,     0, 
          0,     0,     0,     0,     0,   274,     0,     0,   277,   277, 
        277,   277,   277,   277,     0,   249,     0,     0,     0,     0, 
          0,     0,     0,     0,   199,   199,     0,     0,   199,   199, 
          0,   199,   276,     0,   199,     0,     0,     0,     0,     0, 
          0,     0,     0,   277,   277,   199,   199,   199,   199,   199, 
        199,   223,   223,   223,   223,   223,   223,   223,   223,   223, 
        274,    17,   223,   223,     0,   223,   223,   223,   223,   223, 
        223,   223,   223,     0,   277,   277,     0,     0,   275,   275, 
        199,   199,   275,   275,   275,   275,   275,     0,     0,   275, 
        275,     0,   275,   275,   275,   275,   275,   275,   250,   275, 
          0,   250,     0,     0,     0,   259,     0,     0,   259,     0, 
          0,   199,   199,     0,     0,   250,   250,     0,     0,     0, 
        276,   276,   259,   259,   276,   276,   276,   276,   276,     0, 
          0,   276,   276,     0,   276,   276,   276,   276,   276,   276, 
          0,   276,     0,     0,     0,     0,     0,   249,   274,   274, 
        250,     0,   274,   274,   274,   274,   274,   259,     0,   274, 
        274,     0,   274,   274,   274,   274,   274,   274,     0,   274, 
        278,   278,     0,     0,   278,   278,   278,   278,   278,     0, 
        278,     0,   250,     0,     0,     0,     0,     0,     0,   259, 
          0,   278,   278,   278,   278,   278,   278,     0,   266,   266, 
          0,     0,   266,   266,   266,   266,   266,   277,   266,     0, 
        422,     0,     0,     0,     0,     0,     0,     0,     0,   266, 
        266,   266,   266,   266,   266,     0,   278,   278,     0,     0, 
          0,   260,     0,     0,   260,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   199,     0,     0,     0,   260,   260, 
          0,     0,     0,     0,   266,   266,     0,   278,   278,     0, 
          0,     0,   277,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   273,   273,     0,     0,   273,   273,   273,   273, 
        273,     0,   273,   260,     0,   266,   266,     0,     0,     0, 
          0,     0,     0,   273,   273,   273,   273,   273,   273,   199, 
          0,     0,     0,     0,   249,   249,     0,     0,     0,     0, 
          0,     0,     0,     0,   250,   260,     0,     0,   199,   513, 
          0,   259,     0,     0,     0,     0,   520,     0,   273,   273, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        277,   277,     0,     0,   277,   277,   277,   277,   277,   273, 
        273,   277,   277,     0,   277,   277,   277,   277,   277,   277, 
          0,   277,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   199,   199,   572, 
        278,   199,   199,   199,   199,   199,   579,     0,   199,   199, 
          0,   199,   199,   199,   199,   199,   199,   587,   199,   272, 
        272,     0,     0,   272,   272,   272,   272,   272,   266,   272, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        272,   272,   272,   272,   272,   272,   233,   222,   616,     0, 
          0,   231,   229,     0,   230,   278,   232,   260,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   274,     0,   225, 
        209,   227,   219,     0,     0,   272,   272,   635,     0,     0, 
          0,   250,   250,   266,     0,     0,     0,     0,   259,   259, 
          0,     0,     0,     0,     0,   645,     0,     0,     0,     0, 
        648,     0,   273,   221,     0,   650,   272,   272,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   220,     0,   236,     0,     0,     0,     0, 
          0,     0,     0,   278,   278,     0,     0,   278,   278,   278, 
        278,   278,     0,     0,   278,   278,     0,   278,   278,   278, 
        278,   278,   278,     0,   278,     0,     0,     0,     0,     0, 
          0,   266,   266,     0,     0,   266,   266,   266,   266,   266, 
          0,     0,   266,   266,     0,   266,   266,   266,   266,   266, 
        266,     0,   266,     0,     0,     0,     0,   233,   222,     0, 
          0,   286,   231,   229,     0,   230,     0,   232,     0,     0, 
          0,     0,     0,     0,   260,   260,     0,     0,     0,     0, 
        225,   209,   227,   219,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   272, 
          0,     0,     0,     0,     0,   273,   273,     0,     0,   273, 
        273,   273,   273,   273,   221,     0,   273,   273,     0,   273, 
        273,   273,   273,   273,   273,     0,   273,     0,     0,     0, 
          0,     0,     0,     0,     0,   233,   222,   115,     0,     0, 
        231,   229,     0,   230,   220,   232,   236,     0,     0,     0, 
          0,     0,     0,   170,     0,     0,     0,   446,   225,   209, 
        227,   219,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   233,   222, 
          0,   235,   507,   231,   229,     0,   230,     0,   232,     0, 
          0,     0,   221,     0,     0,     0,     0,     0,     0,     0, 
        239,   225,   209,   227,   219,     0,     0,   253,     0,   256, 
          0,     0,     0,   115,     0,     0,     0,     0,     0,     0, 
          0,     0,   220,     0,   236,     0,     0,     0,     0,   276, 
          0,     0,     0,     0,     0,   221,     0,     0,     0,     0, 
          0,     0,   272,   272,     0,     0,   272,   272,   272,   272, 
        272,     0,     0,   272,   272,     0,   272,   272,   272,   272, 
        272,   272,     0,   272,     0,   220,     0,   236,     0,   228, 
        226,   237,   238,   210,   211,   212,   213,   215,     0,     0, 
        223,   224,     0,   207,   208,   214,   217,   216,   218,     0, 
        234,   233,   222,     0,   343,     0,   231,   229,   346,   230, 
          0,   232,     0,     0,     0,     0,   352,     0,     0,     0, 
          0,     0,     0,   517,   225,   209,   227,   219,   233,   222, 
          0,     0,   552,   231,   229,     0,   230,     0,   232,     0, 
          0,     0,   235,     0,     0,     0,     0,     0,     0,     0, 
          0,   225,   209,   227,   219,     0,     0,     0,   221,     0, 
          0,   239,     0,     0,     0,     0,     0,     0,   233,   222, 
          0,     0,   557,   231,   229,     0,   230,     0,   232,     0, 
          0,     0,     0,     0,     0,   221,     0,     0,   220,     0, 
        236,   225,   209,   227,   219,   387,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   220,     0,   236,     0,     0, 
        235,     0,     0,     0,     0,   221,     0,     0,     0,     0, 
        228,   226,   237,   238,   210,   211,   212,   213,   215,   239, 
          0,   223,   224,     0,   207,   208,   214,   217,   216,   218, 
          0,   234,     0,     0,     0,   220,     0,   236,     0,     0, 
          0,     0,     0,   235,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   239,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   228,   226, 
        237,   238,   210,   211,   212,   213,   215,     0,     0,   223, 
        224,     0,   207,   208,   214,   217,   216,   218,     0,   234, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   228,   226,   237,   238,   210,   211,   212,   213,   215, 
          0,     0,   223,   224,     0,   207,   208,   214,   217,   216, 
        218,     0,   234,     0,   233,   222,   235,     0,   558,   231, 
        229,     0,   230,     0,   232,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   239,     0,   225,   209,   227, 
        219,   233,   222,   235,     0,   605,   231,   229,     0,   230, 
          0,   232,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   239,     0,   225,   209,   227,   219,     0,   233, 
        222,   221,     0,   606,   231,   229,     0,   230,     0,   232, 
          0,     0,     0,   235,     0,     0,     0,     0,     0,     0, 
          0,     0,   225,   209,   227,   219,     0,     0,   221,     0, 
          0,   220,   239,   236,   228,   226,   237,   238,   210,   211, 
        212,   213,   215,     0,     0,   223,   224,     0,   207,   208, 
        214,   217,   216,   218,     0,   234,   221,     0,   220,     0, 
        236,   228,   226,   237,   238,   210,   211,   212,   213,   215, 
          0,     0,   223,   224,     0,   207,   208,   214,   217,   216, 
        218,     0,   234,     0,     0,     0,   220,     0,   236,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   228,   226,   237,   238,   210,   211,   212,   213,   215, 
          0,     0,   223,   224,     0,   207,   208,   214,   217,   216, 
        218,     0,   234,   233,   222,     0,     0,     0,   231,   229, 
          0,   230,     0,   232,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   630,   225,   209,   227,   219, 
        233,   222,     0,     0,     0,   231,   229,     0,   230,     0, 
        232,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   644,     0,   225,   209,   227,   219,   233,   222,     0, 
        221,     0,   231,   229,     0,   230,     0,   232,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        225,   209,   227,   219,     0,     0,     0,   221,     0,     0, 
        220,     0,   236,     0,     0,     0,     0,     0,     0,   235, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   221,     0,     0,   220,   239,   236, 
          0,     0,     0,     0,     0,     0,   235,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   220,   239,   236,     0,     0,     0, 
          0,     0,     0,     0,   235,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   239,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   228,   226,   237, 
        238,   210,   211,   212,   213,   215,     0,     0,   223,   224, 
          0,   207,   208,   214,   217,   216,   218,     0,   234,     0, 
          0,     0,     0,     0,   228,   226,   237,   238,   210,   211, 
        212,   213,   215,     0,     0,   223,   224,     0,   207,   208, 
        214,   217,   216,   218,     0,   234,     0,     0,     0,     0, 
          0,     0,   228,   226,   237,   238,   210,   211,   212,   213, 
        215,     0,     0,   223,   224,     0,   207,   208,   214,   217, 
        216,   218,     0,   234,     0,   233,   222,     0,     0,     0, 
        231,   229,     0,   230,     0,   232,     0,     0,   235,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   225,   209, 
        227,   219,     0,     0,     0,     0,     0,   239,     0,     0, 
          0,     0,   233,   222,     0,   235,     0,   231,   229,     0, 
        230,     0,   232,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   221,     0,   239,   225,   209,   227,   219,     0, 
          0,     0,   235,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   239,   220,     0,   236,     0,     0,     0,     0,   221, 
          0,     0,     0,     0,     0,     0,   228,   226,   237,   238, 
        210,   211,   212,   213,   215,     0,     0,   223,   224,     0, 
        207,   208,   214,   217,   216,   218,     0,   234,     0,   220, 
          0,   236,     0,   228,   226,   237,   238,   210,   211,   212, 
        213,   215,     0,     0,   223,   224,     0,   207,   208,   214, 
        217,   216,   218,     0,   234,     0,     0,     0,     0,     0, 
        228,   226,   237,   238,   210,   211,   212,   213,   215,     0, 
          0,   223,   224,     0,   207,   208,   214,   217,   216,   218, 
          0,   234,   233,   222,     0,     0,     0,   231,   229,     0, 
        230,     0,   232,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   225,     0,   227,   263,   263, 
          0,     0,   263,   263,   263,   263,   263,     0,   263,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   263, 
        263,   263,   263,   263,   263,     0,   264,   264,     0,   221, 
        264,   264,   264,   264,   264,     0,   264,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   264,   264,   264, 
        264,   264,   264,   262,   263,   263,   262,     0,   262,   262, 
        262,   236,     0,     0,     0,     0,     0,     0,     0,     0, 
        235,     0,     0,   262,   262,   262,   262,   262,   262,     0, 
          0,     0,   264,   264,     0,   263,   263,     0,     0,   239, 
          0,     0,     0,     0,   265,   265,     0,     0,   265,   265, 
        265,   265,   265,     0,   265,     0,     0,   235,   262,   262, 
          0,     0,     0,   264,   264,   265,   265,   265,   265,   265, 
        265,     0,     0,     0,     0,     0,   239,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   262, 
        262,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        265,   265,     0,     0,     0,     0,     0,     0,   228,   226, 
        237,   238,   210,   211,   212,   213,   215,     0,     0,   223, 
        224,     0,     0,   208,   214,   217,   216,   218,     0,   234, 
          0,   265,   265,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   228,   226,   237,   238,   210, 
        211,   212,   213,   215,     0,     0,   223,   224,     0,     0, 
          0,   214,   217,   216,   218,     0,   234,     0,   263,   253, 
          0,     0,   253,     0,     0,   253,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   255,     0,     0,   255,   253, 
        253,   255,   253,     0,   253,     0,   264,   235,     0,     0, 
          0,     0,     0,     0,     0,   255,   255,     0,   255,     0, 
        255,     0,   254,     0,     0,   254,   239,     0,   254,     0, 
          0,     0,   262,     0,   253,   253,     0,     0,     0,     0, 
          0,     0,   254,   254,     0,   254,     0,   254,     0,     0, 
        255,   255,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   253,   253,     0,     0,     0, 
          0,     0,     0,     0,   265,     0,     0,   254,   254,     0, 
          0,   255,   255,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   228,   226,   237,   238,     0, 
          0,     0,     0,     0,     0,     0,   223,   224,   254,   254, 
          0,     0,     0,     0,     0,     0,   234,     0,     0,     0, 
          0,   263,   263,     0,     0,   263,   263,   263,   263,   263, 
          0,     0,   263,   263,     0,   263,   263,   263,   263,   263, 
        263,     0,     0,     0,     0,     0,     0,     0,     0,   264, 
        264,     0,     0,   264,   264,   264,   264,   264,     0,     0, 
        264,   264,     0,   264,   264,   264,   264,   264,   264,     0, 
          0,     0,     0,     0,     0,   262,   262,     0,     0,   262, 
        262,   262,   262,   262,     0,     0,   262,   262,     0,   262, 
        262,   262,   262,   262,   262,     0,     0,     0,   253,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   255,     0,     0,   265,   265,     0, 
          0,   265,   265,   265,   265,   265,     0,     0,   265,   265, 
          0,   265,   265,   265,   265,   265,   265,   256,     0,     0, 
        256,   254,     0,   256,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   271,     0,     0,   271,   256,   256,   271, 
        256,     0,   256,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   271,   271,     0,   271,     0,   271,     0, 
        252,     0,     0,   252,     0,     0,   252,     0,     0,     0, 
          0,     0,   256,   256,     0,     0,     0,     0,     0,     0, 
        252,   252,     0,   252,     0,   252,     0,     0,   271,   271, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   256,   256,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   252,   252,     0,     0,   271, 
        271,     0,     0,     0,     0,   253,   253,   253,   253,   253, 
          0,     0,   253,   253,     0,   253,   253,   253,   253,   253, 
        253,   255,   255,   255,   255,   255,   252,   252,   255,   255, 
          0,   255,   255,   255,   255,   255,   255,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   254,   254, 
        254,   254,   254,     0,     0,   254,   254,     0,   254,   254, 
        254,   254,   254,   254,     0,   270,     0,     0,   270,     0, 
          0,   270,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   251,     0,     0,   251,   270,   270,   251,   270,     0, 
        270,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   251,   251,     0,   251,   268,   251,     0,   268,     0, 
          0,   268,     0,     0,     0,     0,   256,     0,     0,     0, 
        270,   270,     0,     0,     0,   268,   268,     0,   268,     0, 
        268,     0,   271,     0,     0,     0,   251,   251,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        257,   270,   270,   257,     0,     0,   257,     0,     0,   252, 
        268,   268,     0,     0,     0,     0,     0,   251,   251,     0, 
        257,   257,     0,   257,   258,   257,     0,   258,     0,     0, 
        258,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   268,   268,     0,   258,   258,     0,   258,     0,   258, 
          0,   201,     0,     0,   201,   257,   257,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   201,   201, 
          0,   201,     0,   201,     0,     0,     0,     0,     0,   258, 
        258,     0,     0,     0,     0,     0,   257,   257,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   201,     0,     0,     0,     0,     0,     0, 
        258,   258,     0,   256,   256,   256,   256,   256,     0,     0, 
        256,   256,     0,   256,   256,   256,   256,   256,   256,   271, 
        271,   271,   271,   271,   270,   201,   271,   271,     0,   271, 
        271,   271,   271,   271,   271,     0,     0,     0,     0,     0, 
        251,     0,     0,     0,     0,     0,   252,   252,   252,   252, 
        252,     0,     0,   252,   252,     0,   252,   252,   252,   252, 
        252,   252,   269,     0,   268,   269,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   269, 
        269,     0,   269,   267,   269,     0,   267,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        267,   267,     0,   267,     0,   267,     0,     0,   209,   257, 
        133,   209,   143,     0,   269,   269,     0,   142,     0,     0, 
        131,     0,   132,     0,     0,   209,   209,     0,   209,     0, 
        209,     0,     0,   258,     0,   267,     0,   315,     0,     0, 
          0,     0,     0,     0,     0,   269,   269,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   201,     0,     0, 
        209,     0,     0,     0,     0,     0,   267,   267,    83,     0, 
          0,   270,   270,   270,   270,   270,     0,     0,   270,   270, 
          0,   270,   270,   270,   270,   270,   270,   251,   251,   251, 
        251,   251,   209,     0,   251,   251,     0,   251,   251,   251, 
        251,   251,   251,   134,     0,     0,     0,     0,     0,     0, 
          0,   268,   268,   268,   268,   268,     0,     0,     0,     0, 
          0,   268,   268,   268,   268,   268,   268,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   257,   257,   257,   257, 
        257,     0,     0,     0,     0,     0,   257,   257,   257,   257, 
        257,   257,     0,     0,     0,     0,     0,     0,   269,     0, 
        258,   258,   258,   258,   258,     0,     0,     0,     0,     0, 
        258,   258,   258,   258,   258,   258,     0,     0,     0,   267, 
          0,     0,     0,     0,   201,   201,   201,   201,   201,     0, 
          0,     0,     0,     0,   201,   201,   201,   201,   201,   201, 
        133,     0,   143,     0,   209,     0,     0,   142,     0,     0, 
        131,     0,   132,     0,     0,     0,     0,   180,    86,    87, 
         88,    89,    90,     0,     0,     0,     0,     0,     0,   319, 
        133,     0,   143,     0,     0,     0,     0,   142,     0,     0, 
        131,     0,   132,    10,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   130,     0,     0,    83,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        138,     0,     0,     0,   133,     0,   143,     0,     0,     0, 
          0,   142,     0,     0,   131,     0,   132,     0,    83,     0, 
          0,     0,     0,   134,     0,     0,     0,   141,     0,     0, 
          0,     0,   311,   137,     0,   269,   269,   269,   269,   269, 
          0,     0,     0,     0,     0,   269,   269,   269,   269,   269, 
        269,     0,     0,   134,   128,   129,   267,   267,   267,   267, 
        267,     0,    83,     0,     0,     0,   267,   267,   267,   267, 
        267,   267,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   209,   209,   209,   209,   209,     0,     0,   316,   135, 
        136,   209,   209,   209,   209,   209,   209,   134,     0,     0, 
          0,     0,     0,     0,     0,   133,     0,   143,     0,     0, 
          0,     0,   142,     0,   133,   131,   143,   132,     0,     0, 
          0,   142,     0,     0,   131,     0,   132,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   313,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   180,    86,    87, 
         88,    89,    90,   196,     0,     0,     0,     0,     0,     0, 
          0,     0,    83,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,    10,     0,     0,     0,   139,   140,    87, 
         88,    89,    90,     0,     0,   113,     0,     0,   134,     0, 
          0,     0,     0,     0,     0,     0,     0,   134,     0,     0, 
        138,     0,     0,    10,   133,     0,   143,     0,     0,     0, 
          0,   142,     0,     0,   131,     0,   132,     0,     0,     0, 
          0,   180,    86,    87,    88,    89,    90,   141,     0,     0, 
        138,     0,     0,   137,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    10,     0,     0, 
          0,     0,     0,     0,   128,   129,     0,   141,     0,     0, 
          0,     0,    83,   137,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   138,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   128,   129,     0,   320,     0,   135, 
        136,     0,     0,     0,   364,     0,   224,   134,   224,     0, 
          0,   141,     0,   224,     0,     0,   224,   137,   224,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   135, 
        136,     0,   180,    86,    87,    88,    89,    90,   128,   129, 
          0,   180,    86,    87,    88,    89,    90,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    10,     0, 
          0,     0,     0,     0,   224,     0,   224,    10,     0,     0, 
        133,     0,   143,   135,   136,     0,     0,   142,     0,     0, 
        131,     0,   132,     0,     0,   138,     0,     0,     0,     0, 
          0,     0,     0,     0,   138,     0,     0,     0,     0,   224, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   197,     0,     0,     0,     0,     0,   137,     0, 
          0,   141,     0,     0,     0,     0,     0,   137,    83,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   128, 
        129,   180,    86,    87,    88,    89,    90,     0,   128,   129, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   134,     0,     0,     0,    10,     0,     0, 
          0,     0,     0,     0,   135,   136,     0,     0,     0,     0, 
          0,     0,     0,   135,   136,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   138,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   141,     0,     0,     0,     0,     0,   137,     0,     0, 
          0,     0,     0,   224,   224,   224,   224,   224,   224,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   128,   129, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   224, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   135,   136,     0,   224,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   180,    86,    87, 
         88,    89,    90,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   224,     0,     0,     0,     0,     0,   224, 
          0,     0,     0,    10,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        224,   224,     0,     0,     0,     0,     0,     0,     0,     0, 
        138,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   224,   224,   141,     0,     0, 
          0,     0,     0,   137,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   128,   129,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   135, 
        136, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,    40,   122,    41,    41,    71,    44,    46, 
         60,    42,    46,    40,    46,   125,    41,    91,    91,    44, 
        124,    41,   260,    84,   125,    59,    59,   303,    91,    34, 
         35,   123,   125,    44,    46,    40,    44,    98,   248,   100, 
         58,   105,   106,    59,   464,   176,    58,   126,    59,   123, 
         63,   260,    41,   158,    91,    44,    61,    62,    63,   177, 
        123,   122,   300,    37,    69,    70,    71,    37,    42,    43, 
         59,    45,    42,    47,   126,   260,   552,    47,    91,    84, 
         40,   557,   126,    41,    44,    93,    60,   507,    62,   304, 
        123,   300,    97,    98,    40,   100,   123,    40,    44,    59, 
        105,   106,   260,   459,    93,    37,    41,   123,   113,    44, 
         42,    43,   260,    45,   125,    47,   177,   122,    41,    91, 
         63,    44,   332,    58,    59,    44,   364,   411,   189,    39, 
        606,   340,    41,    91,    46,    58,    59,   142,   286,    49, 
         50,    51,   300,    62,    60,   260,   261,    93,    91,   625, 
         64,    41,   126,   125,    44,   340,   126,    59,    93,   260, 
        636,   166,   167,   123,   169,   125,   195,    58,   173,    59, 
         93,    63,   177,    37,   235,    91,   281,   533,    42,    43, 
        123,    45,    91,    47,   189,   103,   260,   260,    44,    44, 
        125,    59,   340,    93,   126,    91,    60,   260,    62,    91, 
        205,    44,   125,    93,    41,    46,    62,    44,   123,   493, 
        128,   129,   286,   131,   132,   133,   134,   135,   136,   311, 
        138,   123,   432,   286,   142,   125,   357,   123,   333,   260, 
        235,   123,   257,   312,   239,   125,   340,   257,    93,    91, 
        158,   257,   260,   261,   123,    59,   125,   320,   277,   254, 
         93,   535,   331,   258,   359,   123,   361,   286,   332,   332, 
        312,   266,   126,   373,   374,    46,   340,   340,   257,   300, 
        125,   123,    46,   191,   330,   193,    59,   340,   562,   331, 
        373,   374,   413,    41,   340,   290,    44,   331,    40,   207, 
        208,   209,   210,   211,   212,   213,   214,   215,   216,   217, 
        218,   219,   220,   221,   222,   223,   224,   225,   226,   227, 
        228,   229,   230,   231,   232,   233,   234,   260,   236,    33, 
        425,    35,   257,   402,   403,   430,    40,   340,    59,    43, 
        248,    45,    91,   364,   257,    93,    41,   247,   312,    44, 
        345,    59,   312,   286,   260,   260,   375,   498,   499,    41, 
        402,   403,    44,    58,    59,   257,   274,   331,   402,   403, 
        410,   331,   142,   281,   260,   283,   125,   257,   260,   421, 
         60,   286,    63,   478,   410,   410,   410,    91,   410,   260, 
        312,   260,    44,   420,   448,   536,    59,    91,    93,   257, 
        286,    46,   421,   311,   286,   313,    61,   315,   316,   331, 
         91,   319,   320,    44,   320,   286,    61,   286,   260,   373, 
        374,   125,   126,    91,   332,   333,   332,   332,    59,   123, 
        125,    91,    40,    41,   340,   205,   400,   401,   402,   403, 
        310,    93,   402,   403,   286,    44,   332,   411,   412,    41, 
        469,   359,    44,   361,   449,   563,   551,   421,   312,   367, 
         33,   421,    35,   332,   459,   569,   570,    40,   376,   239, 
         43,    41,    45,   125,    44,   594,   595,   331,   310,    41, 
        402,   403,    44,    91,    41,    37,    38,    44,    41,   414, 
         42,    43,   596,    45,    93,    47,    58,    59,   340,   421, 
        619,   414,   415,   498,   499,    40,    46,   415,    60,   604, 
         62,    46,   563,    40,    91,   123,    93,   425,    91,    46, 
        290,    61,   430,    58,   432,   410,   125,   435,    40,   289, 
         41,    93,   292,    44,    46,   311,    41,   123,   533,    44, 
         40,   536,    94,   344,   345,   540,   400,   401,   402,   403, 
         13,    14,   125,   126,    59,   310,   260,   261,   262,   263, 
        264,   265,   257,   125,   105,   106,   260,   421,   563,   620, 
        478,   479,   124,    58,   126,    91,    41,    91,   486,   487, 
        123,   123,   286,    33,    44,    35,    58,   123,    93,   640, 
         40,   410,   286,    43,    59,    45,    44,   300,   301,   302, 
        260,   261,   262,   263,   264,   265,   514,    93,    44,   313, 
         61,   257,   280,   281,   282,   283,   284,   285,   526,   287, 
        125,   300,   301,   302,   257,   620,   286,    93,    93,    49, 
         50,    51,   300,   301,   302,   303,   340,   341,   342,   343, 
        300,    91,   346,   551,   260,   640,   554,   257,   556,   340, 
         41,    44,   260,    41,   260,    44,   360,   361,   362,   363, 
        125,   365,   366,   367,   368,   123,   370,   371,   372,   373, 
        374,   260,   125,   123,    40,    61,   126,   283,   286,   123, 
        286,   123,   590,    58,    58,    40,   346,   260,   261,   262, 
        263,   264,   265,    91,   300,   257,   604,   260,   402,   403, 
        260,   123,    40,    93,    41,    33,   125,    35,    40,   125, 
         41,    40,    40,   286,    61,    43,    40,    45,   626,   414, 
        415,    40,    91,   123,    41,    41,   430,    44,    91,    37, 
         38,   125,    40,    41,    42,    43,    44,    45,    46,    47, 
        313,    58,    59,   125,   260,   261,   262,   263,   264,   265, 
         58,    59,    60,    61,    62,    63,    37,   125,   364,   340, 
        312,    42,    43,    91,    45,    40,    47,   340,   341,   342, 
        343,    40,    40,   346,    59,    59,    93,    40,    40,   331, 
         40,   340,    59,    91,   260,    93,    94,   360,   361,   362, 
        363,    41,   365,   366,   367,   368,    41,   370,   126,   372, 
        373,   374,    59,    61,    41,   361,   340,    44,   125,    61, 
        260,   261,   262,   263,   264,   265,   124,   125,   126,    59, 
         41,    58,    59,    44,    41,    41,    44,   403,    44,   402, 
        403,   125,    93,   123,    59,    40,   286,    58,    59,   125, 
         44,   364,    58,    59,   123,   126,   260,   321,   400,   401, 
        402,   403,   414,   415,    41,    41,    93,   430,   340,   411, 
        412,   340,   438,   313,   123,    41,    59,   371,    40,   421, 
        125,   125,    93,    41,   125,   123,    59,    93,   125,   125, 
         58,   125,   280,   281,   282,   283,   284,   285,   125,   287, 
        340,   341,   342,   343,    41,   123,   346,   260,   261,   262, 
        263,   264,   265,   125,   125,   303,    41,    41,   123,   125, 
        360,   361,   362,   363,   123,   365,   366,   367,   368,    93, 
        370,   257,   372,   286,   280,   281,   282,   283,   284,   285, 
        125,   287,   260,   261,   262,   263,   264,   265,    37,    38, 
        257,    40,    41,    42,    43,    44,    45,   303,    47,   257, 
        257,    58,   402,   403,    44,   125,    93,   123,   286,    58, 
         59,    60,    61,    62,    63,    37,    38,    91,    40,    41, 
         42,    43,    44,    45,    91,    47,   552,    91,    91,   125, 
        430,   557,   125,   346,    59,   313,    58,    59,    59,    61, 
         62,    63,    91,    41,    93,    94,    91,    59,    41,    41, 
        364,    41,    41,   125,   312,   125,     7,     6,    77,   102, 
        356,   125,   340,   341,   342,   343,   504,   109,   346,    91, 
        257,    93,    94,   331,   123,   124,   125,   126,   123,   499, 
        606,   540,   360,   361,   362,   363,   257,   365,   366,   367, 
        368,   257,   370,    60,   372,    59,   515,   527,   612,   625, 
        576,   123,   124,   125,   126,   576,   189,   189,   362,   290, 
        636,   205,    37,    38,   246,   250,    41,    42,    43,    44, 
         45,   173,    47,   169,   402,   403,    31,    -1,    -1,    -1, 
         -1,    -1,    91,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,   430,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   420,   421,   123,    -1,    91,    -1,    93,    94, 
         -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,   124, 
        125,   126,    58,    59,    -1,    -1,    -1,    -1,   257,    -1, 
         -1,   260,    -1,    -1,    -1,   260,   280,   281,   282,   283, 
        284,   285,    -1,   287,    -1,    91,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    41,    -1,   257,    44,    93,   260,   303, 
         -1,   286,    -1,   414,   415,    -1,    -1,    -1,   414,   415, 
         58,    59,    -1,    -1,    -1,   300,   301,   302,   124,   125, 
        126,   310,   311,   312,    -1,    -1,    -1,    -1,    -1,   125, 
        334,   320,    -1,    -1,    -1,    -1,    41,    -1,    -1,    44, 
         -1,   330,   331,   332,    -1,    93,    -1,   332,   310,   311, 
        312,   340,    -1,    58,    59,    -1,    -1,    -1,   320,    -1, 
         -1,   260,    -1,    -1,    -1,    -1,    -1,    -1,   330,   331, 
        332,    -1,    -1,    -1,    -1,    -1,    -1,   125,   340,    41, 
         -1,    -1,    44,    -1,    -1,    37,    38,   286,    93,    -1, 
         42,    43,   257,    45,    -1,    47,    -1,    59,    -1,    -1, 
         -1,   300,   301,   302,    -1,    -1,    -1,    -1,    60,    -1, 
         62,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        125,   410,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    93,   421,   332,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,   312,    -1,   411, 
        412,   257,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,   257,    -1,   125,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    37,    38,   126,   340,    41,    42,    43,    44, 
         45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    41,   312,    -1,    44,   257, 
         91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,   331,    91,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   125,   410,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    93,    -1,   124, 
        125,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41, 
         -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,   125, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    -1,    -1,   414,   415, 
         -1,    93,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    37,    38,   125,    -1,    41,    42,    43,    44,    45, 
        312,    47,    -1,    -1,    -1,    -1,   414,   415,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    -1,    91,   331, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    91,   257,    -1,    -1,    -1,    -1,    -1,    -1,   280, 
        281,   282,   283,   284,   285,    -1,   287,    93,    94,    -1, 
         -1,   124,   125,   126,    -1,    91,    -1,    -1,    -1,    -1, 
         -1,   257,   303,    -1,    -1,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,   312,   400,   401, 
        402,   403,    -1,   334,    -1,    -1,    -1,    91,    -1,   411, 
        412,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,   257,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    37,    38,    -1,    40,    41,    42,    43, 
         44,    45,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         -1,    -1,    93,    94,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,   257,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,    91,    -1,    -1, 
         94,    -1,    -1,   124,   125,   126,    -1,    -1,    -1,    -1, 
         -1,   257,    -1,    -1,    -1,    -1,    -1,    -1,   414,   415, 
        280,   281,   282,   283,   284,   285,    -1,   287,    -1,    -1, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,   303,   280,   281,   282,   283,   284,   285, 
         -1,   287,    -1,    -1,    91,    -1,    -1,    -1,   331,    -1, 
         -1,    -1,    -1,    91,    -1,    -1,   312,   303,    -1,    -1, 
         -1,    -1,    -1,    -1,   334,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   414,   415,   330,   331,   280,   281,   282,   283, 
        284,   285,    -1,   287,   340,    37,    38,    -1,   334,    41, 
         42,    43,    44,    45,    -1,    47,   300,   301,   302,    -1, 
        304,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   257,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   420,   421,    -1, 
         -1,    93,    94,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,   257,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    38,   421,    -1,    41,    -1,    43, 
         44,    45,   124,   125,   126,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    37,    38,   312,    40, 
         -1,    42,    43,    44,    45,    46,    47,    -1,    -1,    93, 
         94,    -1,   260,    -1,    -1,    -1,    -1,   331,    -1,    60, 
         61,    62,    63,   280,   281,   282,   283,   284,   285,    -1, 
        287,    -1,   280,   281,   282,   283,   284,   285,   286,   287, 
        124,   125,    -1,   300,   301,   302,   303,    -1,    -1,    -1, 
         91,    -1,    93,    94,    -1,   303,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    -1,    -1,   124,   332,   126,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,   257,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   420,   421,    37,    38, 
         -1,    -1,    -1,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    91,    -1,    93,    94,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    -1,    47,    -1,    -1, 
         -1,    93,    94,    -1,    -1,   124,    -1,   126,    58,    59, 
         60,    61,    62,    63,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    58,    59,    60,    61, 
         62,    63,    -1,    93,    94,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    93,    94,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    41,    -1,    -1,    44,   257,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    58,    59, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         -1,    -1,   331,    93,    -1,    -1,    -1,    37,    38,    -1, 
        312,    41,    42,    43,    44,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         -1,    44,   312,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    58,    59,    60,    61,    62, 
         63,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
        312,   410,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   420,   421,    -1,   124,   125,    -1,    -1,   400,   401, 
         93,    94,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    41,   421, 
         -1,    44,    -1,    -1,    -1,    41,    -1,    -1,    44,    -1, 
         -1,   124,   125,    -1,    -1,    58,    59,    -1,    -1,    -1, 
        400,   401,    58,    59,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,    -1,    -1,   257,   400,   401, 
         93,    -1,   404,   405,   406,   407,   408,    93,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,   125,    -1,    -1,    -1,    -1,    -1,    -1,   125, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,   257,    47,    -1, 
        364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    93,    94,    -1,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,    -1,    58,    59, 
         -1,    -1,    -1,    -1,    93,    94,    -1,   124,   125,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    -1,    47,    93,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    60,    61,    62,    63,   312, 
         -1,    -1,    -1,    -1,   414,   415,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,   125,    -1,    -1,   331,   473, 
         -1,   257,    -1,    -1,    -1,    -1,   480,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,   124, 
        125,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   543, 
        257,   404,   405,   406,   407,   408,   550,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   561,   421,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,   257,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    37,    38,   592,    -1, 
         -1,    42,    43,    -1,    45,   312,    47,   257,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    60, 
         61,    62,    63,    -1,    -1,    93,    94,   621,    -1,    -1, 
         -1,   414,   415,   312,    -1,    -1,    -1,    -1,   414,   415, 
         -1,    -1,    -1,    -1,    -1,   639,    -1,    -1,    -1,    -1, 
        644,    -1,   257,    94,    -1,   649,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,   414,   415,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    94,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    97,    -1,    -1, 
         42,    43,    -1,    45,   124,    47,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,   113,    -1,    -1,    -1,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,   312,    41,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    60,    61,    62,    63,    -1,    -1,   167,    -1,   169, 
         -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1,   189, 
         -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,   124,    -1,   126,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
        421,    37,    38,    -1,   254,    -1,    42,    43,   258,    45, 
         -1,    47,    -1,    -1,    -1,    -1,   266,    -1,    -1,    -1, 
         -1,    -1,    -1,    59,    60,    61,    62,    63,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    60,    61,    62,    63,    -1,    -1,    -1,    94,    -1, 
         -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38, 
         -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,   124,    -1, 
        126,    60,    61,    62,    63,   345,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,   331, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    37,    38,   312,    -1,    41,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    60,    61,    62, 
         63,    37,    38,   312,    -1,    41,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   331,    -1,    60,    61,    62,    63,    -1,    37, 
         38,    94,    -1,    41,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    60,    61,    62,    63,    -1,    -1,    94,    -1, 
         -1,   124,   331,   126,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    94,    -1,   124,    -1, 
        126,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    -1,    -1,    -1,   124,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   400,   401,   402,   403,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,   421,    37,    38,    -1,    -1,    -1,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    59,    60,    61,    62,    63, 
         37,    38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    -1,    60,    61,    62,    63,    37,    38,    -1, 
         94,    -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,    94,    -1,    -1, 
        124,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    -1,    -1,   124,   331,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   331,   126,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1, 
         -1,    -1,    37,    38,    -1,   312,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    94,    -1,   331,    60,    61,    62,    63,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,   124,    -1,   126,    -1,    -1,    -1,    -1,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,   124, 
         -1,   126,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         -1,   421,    37,    38,    -1,    -1,    -1,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    -1,    62,    37,    38, 
         -1,    -1,    41,    42,    43,    44,    45,    -1,    47,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    60,    61,    62,    63,    -1,    37,    38,    -1,    94, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    38,    93,    94,    41,    -1,    43,    44, 
         45,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,    -1,    93,    94,    -1,   124,   125,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,   312,    93,    94, 
         -1,    -1,    -1,   124,   125,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,    -1,   415,   416,   417,   418,   419,    -1,   421, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,    -1, 
         -1,   416,   417,   418,   419,    -1,   421,    -1,   257,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    58, 
         59,    44,    61,    -1,    63,    -1,   257,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    38,    -1,    -1,    41,   331,    -1,    44,    -1, 
         -1,    -1,   257,    -1,    93,    94,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,    93,    94,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   411,   412,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,   421,    -1,    -1,    -1, 
         -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,    -1,    -1,   257,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   257,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    38,    -1,    -1, 
         41,   257,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    38,    -1,    -1,    41,    58,    59,    44, 
         61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,   404,   405,   406,   407,   408,   124,   125,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    38,    -1,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    38,    -1,    -1,    41,    58,    59,    44,    61,    -1, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    -1,    61,    38,    63,    -1,    41,    -1, 
         -1,    44,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,   257,    -1,    -1,    -1,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         38,   124,   125,    41,    -1,    -1,    44,    -1,    -1,   257, 
         93,    94,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1, 
         58,    59,    -1,    61,    38,    63,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    41,    -1,    -1,    44,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    93, 
         94,    -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   404, 
        405,   406,   407,   408,   257,   125,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1, 
        257,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    41,    -1,   257,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58, 
         59,    -1,    61,    41,    63,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    41,   257, 
         33,    44,    35,    -1,    93,    94,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,    58,    59,    -1,    61,    -1, 
         63,    -1,    -1,   257,    -1,    93,    -1,    60,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         93,    -1,    -1,    -1,    -1,    -1,   124,   125,    91,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,   404,   405,   406, 
        407,   408,   125,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,    -1,    -1, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,    -1,    -1,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,   257, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,    -1,   414,   415,   416,   417,   418,   419, 
         33,    -1,    35,    -1,   257,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    62, 
         33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,   286,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,    91,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,    -1,    -1,    33,    -1,    35,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    91,    -1, 
         -1,    -1,    -1,   126,    -1,    -1,    -1,   340,    -1,    -1, 
         -1,    -1,    61,   346,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,    -1,    -1,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,   126,   367,   368,   404,   405,   406,   407, 
        408,    -1,    91,    -1,    -1,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   401,   402, 
        403,   414,   415,   416,   417,   418,   419,   126,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    33,    -1,    35,    -1,    -1, 
         -1,    -1,    40,    -1,    33,    43,    35,    45,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    91,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   286,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,   123,    -1,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1, 
        313,    -1,    -1,   286,    33,    -1,    35,    -1,    -1,    -1, 
         -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1,    -1, 
         -1,   260,   261,   262,   263,   264,   265,   340,    -1,    -1, 
        313,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,   368,    -1,   340,    -1,    -1, 
         -1,    -1,    91,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,   368,    -1,   400,    -1,   402, 
        403,    -1,    -1,    -1,   123,    -1,    33,   126,    35,    -1, 
         -1,   340,    -1,    40,    -1,    -1,    43,   346,    45,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402, 
        403,    -1,   260,   261,   262,   263,   264,   265,   367,   368, 
         -1,   260,   261,   262,   263,   264,   265,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1, 
         -1,    -1,    -1,    -1,    91,    -1,    93,   286,    -1,    -1, 
         33,    -1,    35,   402,   403,    -1,    -1,    40,    -1,    -1, 
         43,    -1,    45,    -1,    -1,   313,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    91,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367, 
        368,   260,   261,   262,   263,   264,   265,    -1,   367,   368, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   126,    -1,    -1,    -1,   286,    -1,    -1, 
         -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1,    -1, 
         -1,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   367,   368, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   402,   403,    -1,   313,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        367,   368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403,   340,    -1,    -1, 
         -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   367,   368,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   402, 
        403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_DOTS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', 'T_YIELD', 'T_YIELD_FROM', NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 
      'T_CASE', 'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, 'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 190 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 202 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 202 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 213 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 214 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 218 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 221 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 224 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 227 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 240 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 245 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 246 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 252 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 252 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 261 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 261 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 270 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 270 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 281 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 282 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 286 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 287 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 291 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 292 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 296 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 297 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 301 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 302 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 307 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 308 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 313 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 314 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 318 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 319 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 323 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 323 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 326 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 326 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 336 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 343 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 350 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 356 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 357 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 361 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 362 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 366 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 367 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 371 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 372 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 378 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 378 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 389 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 389 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 400 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 400 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 425 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 425 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 438 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 439 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 443 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 444 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 448 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 451 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 455 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 462 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 467 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 472 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 479 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 480 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 484 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 485 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 490 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 496 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 499 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 506 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 507 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 512 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 513 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 517 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 518 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 522 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 523 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 529 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 530 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 534 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 100:  #line 535 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 101:  #line 539 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 540 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 559 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 564 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 565 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 113:  #line 569 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 569 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 572 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 572 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 577 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 577 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 587 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 587 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 592 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 592 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 596 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 596 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 600 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 600 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 604 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 605 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 606 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 606 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 609 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 609 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 614 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 136:  #line 617 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 138:  #line 624 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 625 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 629 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 141:  #line 632 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 142:  #line 639 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 143:  #line 640 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 144:  #line 644 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 650 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 651 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 147:  #line 655 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 660 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 150:  #line 661 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 151:  #line 665 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 665 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 669 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 669 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 675 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 676 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 680 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 681 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 681 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 686 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 161:  #line 687 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 162:  #line 691 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 692 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 696 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 696 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 710 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 711 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 168:  #line 715 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 720 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 720 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 728 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 174:  #line 733 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 175:  #line 734 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 176:  #line 738 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 178:  #line 743 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 179:  #line 749 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 180:  #line 754 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 181:  #line 762 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 182:  #line 765 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 183:  #line 768 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 184:  #line 771 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 185:  #line 777 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= array('name' => $yyVals[0+$yyTop]); } break;

    case 186:  #line 777 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 187:  #line 780 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 188:  #line 780 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 189:  #line 786 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 190:  #line 794 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 191:  #line 797 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 192:  #line 803 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 193:  #line 803 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 194:  #line 812 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 195:  #line 812 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 196:  #line 822 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 197:  #line 822 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 198:  #line 831 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop]));
    } break;

    case 199:  #line 834 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 200:  #line 837 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 201:  #line 840 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 202:  #line 843 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldFromNode($yyVals[0+$yyTop]));
    } break;

    case 203:  #line 846 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 204:  #line 849 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 205:  #line 852 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 206:  #line 855 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 207:  #line 858 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 208:  #line 861 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 209:  #line 865 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 210:  #line 871 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 211:  #line 877 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 212:  #line 883 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 213:  #line 888 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 214:  #line 888 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 215:  #line 898 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new ReturnNode($yyVals[0+$yyTop])); } break;

    case 216:  #line 899 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 217:  #line 903 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 219:  #line 908 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 220:  #line 909 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 221:  #line 913 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[0+$yyTop]); } break;

    case 222:  #line 914 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 223:  #line 918 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 224:  #line 924 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 225:  #line 924 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 226:  #line 925 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 227:  #line 926 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 228:  #line 927 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 229:  #line 928 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 230:  #line 929 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 231:  #line 933 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 232:  #line 936 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 233:  #line 942 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 235:  #line 947 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 236:  #line 948 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 237:  #line 952 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 239:  #line 957 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 240:  #line 958 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 241:  #line 962 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 242:  #line 963 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 243:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 244:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 245:  #line 966 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 967 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 968 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 248:  #line 969 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 249:  #line 970 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 971 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 251:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 252:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 253:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 256:  #line 980 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 257:  #line 981 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 982 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 259:  #line 983 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 260:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 261:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 264:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 265:  #line 992 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 993 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 267:  #line 994 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 268:  #line 995 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 996 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 270:  #line 997 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 271:  #line 998 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 272:  #line 999 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 1003 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 1004 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 275:  #line 1005 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 276:  #line 1006 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 277:  #line 1007 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 278:  #line 1008 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 279:  #line 1012 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 280:  #line 1013 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 281:  #line 1018 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 283:  #line 1023 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 284:  #line 1024 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 285:  #line 1028 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 286:  #line 1028 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 287:  #line 1031 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 288:  #line 1034 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 289:  #line 1034 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 290:  #line 1037 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 291:  #line 1037 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 292:  #line 1043 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 293:  #line 1044 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 301:  #line 1063 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 302:  #line 1064 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 303:  #line 1068 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 304:  #line 1072 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 305:  #line 1076 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 306:  #line 1077 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 308:  #line 1082 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 309:  #line 1086 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 310:  #line 1087 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 311:  #line 1088 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 312:  #line 1089 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-3+$yyTop], array($yyVals[-1+$yyTop])); } break;

    case 313:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), null); } break;

    case 314:  #line 1094 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), $yyVals[-3+$yyTop]); } break;

    case 315:  #line 1098 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 316:  #line 1099 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 317:  #line 1105 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 318:  #line 1106 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 319:  #line 1110 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 320:  #line 1111 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 321:  #line 1115 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 322:  #line 1116 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 323:  #line 1117 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 324:  #line 1118 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 325:  #line 1119 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 326:  #line 1120 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 327:  #line 1121 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 328:  #line 1122 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 3099 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
