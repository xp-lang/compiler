<?php
#line 2 "src/main/jay/grammars/xp.jay"
namespace xp\compiler\syntax\xp;

use xp\compiler\types\TypeName;
use xp\compiler\ast\ParseTree;
use xp\compiler\ast\PackageNode;
use xp\compiler\ast\ImportNode;
use xp\compiler\ast\StaticImportNode;
use xp\compiler\ast\NativeImportNode;
use xp\compiler\ast\AnnotationNode;
use xp\compiler\ast\ClassNode;
use xp\compiler\ast\EnumNode;
use xp\compiler\ast\EnumMemberNode;
use xp\compiler\ast\InterfaceNode;
use xp\compiler\ast\FieldNode;
use xp\compiler\ast\PropertyNode;
use xp\compiler\ast\IndexerNode;
use xp\compiler\ast\ConstructorNode;
use xp\compiler\ast\MethodNode;
use xp\compiler\ast\OperatorNode;
use xp\compiler\ast\ReturnNode;
use xp\compiler\ast\InstanceCreationNode;
use xp\compiler\ast\VariableNode;
use xp\compiler\ast\ArrayAccessNode;
use xp\compiler\ast\CastNode;
use xp\compiler\ast\TryNode;
use xp\compiler\ast\CatchNode;
use xp\compiler\ast\ThrowNode;
use xp\compiler\ast\FinallyNode;
use xp\compiler\ast\ForNode;
use xp\compiler\ast\ForeachNode;
use xp\compiler\ast\DoNode;
use xp\compiler\ast\WhileNode;
use xp\compiler\ast\AssignmentNode;
use xp\compiler\ast\InvocationNode;
use xp\compiler\ast\MethodCallNode;
use xp\compiler\ast\InstanceCallNode;
use xp\compiler\ast\StaticMethodCallNode;
use xp\compiler\ast\MemberAccessNode;
use xp\compiler\ast\StaticMemberAccessNode;
use xp\compiler\ast\ConstantNode;
use xp\compiler\ast\ConstantAccessNode;
use xp\compiler\ast\ClassAccessNode;
use xp\compiler\ast\IntegerNode;
use xp\compiler\ast\HexNode;
use xp\compiler\ast\OctalNode;
use xp\compiler\ast\DecimalNode;
use xp\compiler\ast\StringNode;
use xp\compiler\ast\BooleanNode;
use xp\compiler\ast\NullNode;
use xp\compiler\ast\ArrayNode;
use xp\compiler\ast\MapNode;
use xp\compiler\ast\ClassConstantNode;
use xp\compiler\ast\InstanceOfNode;
use xp\compiler\ast\ComparisonNode;
use xp\compiler\ast\BinaryOpNode;
use xp\compiler\ast\BooleanOpNode;
use xp\compiler\ast\UnaryOpNode;
use xp\compiler\ast\TernaryNode;
use xp\compiler\ast\SwitchNode;
use xp\compiler\ast\CaseNode;
use xp\compiler\ast\DefaultNode;
use xp\compiler\ast\BreakNode;
use xp\compiler\ast\ContinueNode;
use xp\compiler\ast\CloneNode;
use xp\compiler\ast\IfNode;
use xp\compiler\ast\ElseNode;
use xp\compiler\ast\StaticInitializerNode;
use xp\compiler\ast\LambdaNode;
use xp\compiler\ast\WithNode;
use xp\compiler\ast\ArmNode;
use xp\compiler\ast\BracedExpressionNode;
use xp\compiler\ast\YieldNode;
use xp\compiler\ast\UnpackNode;
#line 77 "-"

/**
 * Generated parser class
 */
class Parser extends \text\parser\generic\AbstractParser {
    const T_ARROW= 257;
    const T_YIELD= 367;
    const T_BOOLEAN_OR= 414;
    const T_BOOLEAN_AND= 415;
    const T_ADD_EQUAL= 404;
    const T_SUB_EQUAL= 405;
    const T_MUL_EQUAL= 406;
    const T_DIV_EQUAL= 407;
    const T_CONCAT_EQUAL= 416;
    const T_MOD_EQUAL= 408;
    const T_AND_EQUAL= 418;
    const T_OR_EQUAL= 417;
    const T_XOR_EQUAL= 419;
    const T_EQUALS= 411;
    const T_NOT_EQUALS= 412;
    const T_SE= 401;
    const T_GE= 400;
    const T_EXP= 421;
    const T_INSTANCEOF= 312;
    const T_INC= 402;
    const T_DEC= 403;
    const T_AS= 331;
    const T_NEW= 346;
    const T_CLONE= 313;
    const T_WORD= 260;
    const T_STRING= 261;
    const T_NUMBER= 262;
    const T_DECIMAL= 263;
    const T_HEX= 264;
    const T_OCTAL= 265;
    const T_PUBLIC= 280;
    const T_PRIVATE= 281;
    const T_PROTECTED= 282;
    const T_STATIC= 283;
    const T_FINAL= 284;
    const T_ABSTRACT= 285;
    const T_NATIVE= 286;
    const T_INLINE= 287;
    const T_CLASS= 300;
    const T_INTERFACE= 301;
    const T_ENUM= 302;
    const T_PACKAGE= 303;
    const T_IMPORT= 304;
    const T_EXTENDS= 310;
    const T_IMPLEMENTS= 311;
    const T_OPERATOR= 320;
    const T_THROWS= 321;
    const T_ELLIPSIS= 330;
    const T_THIS= 332;
    const T_CONST= 334;
    const T_VARIABLE= 340;
    const T_RETURN= 341;
    const T_TRY= 342;
    const T_THROW= 343;
    const T_CATCH= 344;
    const T_FINALLY= 345;
    const T_FOR= 360;
    const T_WHILE= 361;
    const T_DO= 362;
    const T_FOREACH= 363;
    const T_IN= 364;
    const T_BREAK= 365;
    const T_CONTINUE= 366;
    const T_IF= 370;
    const T_ELSE= 371;
    const T_SWITCH= 372;
    const T_CASE= 373;
    const T_DEFAULT= 374;
    const T_DOUBLE_COLON= 410;
    const T_DOUBLE_ARROW= 413;
    const T_NAV= 420;
    const T_WITH= 430;
    const YY_ERRORCODE= 256;

    protected static $yyLhs= array(-1,
          0,     1,     5,     1,     2,     2,     6,     6,     7,     7, 
          7,     7,     9,     9,     8,     8,     4,     4,     4,    13, 
          3,    17,     3,    19,     3,    14,    14,    15,    15,    20, 
         20,    22,    22,    16,    16,    23,    23,    23,    18,    18, 
         18,    27,    27,    29,    28,    30,    28,    24,    24,    24, 
         34,    34,    35,    35,    38,    38,    33,    33,    40,    25, 
         43,    25,    45,    25,    47,    25,    11,    11,    48,    48, 
         50,    50,    50,    51,    51,    51,    53,    53,    54,    54, 
         52,    52,    52,    52,    42,    42,    42,    39,    39,    39, 
         44,    44,    56,    56,    37,    37,    37,    37,    57,    57, 
         41,    41,    46,    46,    46,    46,    46,    46,    26,    26, 
         58,    58,    61,    59,    62,    59,    65,    59,    67,    59, 
         69,    59,    70,    59,    71,    59,    73,    59,    74,    59, 
         75,    59,    76,    59,    59,    59,    59,    78,    78,    80, 
         80,    79,    79,    81,    68,    68,    72,    72,    82,    82, 
         84,    83,    85,    83,    63,    63,    64,    86,    64,    77, 
         77,    87,    87,    91,    90,    92,    92,    88,    88,    93, 
         89,    55,    55,    55,    94,    94,    66,    66,    95,    95, 
         60,    60,    96,    96,    96,   100,   100,   100,   100,   102, 
         31,   104,    31,    31,    31,    31,   106,    31,   107,    31, 
        108,    31,    31,    31,    31,    31,    31,    31,    31,    31, 
         31,    31,    31,    31,    31,    31,   114,    31,   101,   101, 
        105,   105,   115,   115,   116,   116,    36,   118,    36,    36, 
         36,    36,    36,    36,   117,   117,    99,    99,   119,   119, 
        121,   121,   120,   120,   109,   109,   109,   109,   109,   109, 
        109,   109,   109,   109,   109,   109,   110,   110,   110,   110, 
        110,   110,   110,   110,   111,   111,   111,   111,   111,   111, 
        111,   111,   111,   111,   111,   111,   112,   112,   112,   112, 
        112,   112,   113,   113,   103,   103,   122,   122,   124,   123, 
        123,   126,   123,   127,   123,   125,   125,    10,    10,    10, 
         32,    32,    32,    32,    12,    12,    97,    98,   129,   129, 
        130,   130,   131,   131,   131,   131,   128,   128,    21,    21, 
         49,    49,   132,   132,   133,   133,   133,   133,   133,   133, 
        133,   133, 
    );
    protected static $yyLen= array(2,
          3,     0,     0,     4,     0,     1,     1,     2,     5,     6, 
          6,     6,     1,     1,     1,     3,     1,     3,     3,     0, 
          9,     0,     9,     0,     8,     0,     2,     0,     2,     0, 
          2,     0,     3,     2,     0,     1,     1,     4,     3,     1, 
          0,     1,     3,     0,     3,     0,     6,     5,     6,     6, 
          1,     4,     1,     2,     2,     4,     0,     2,     0,     9, 
          0,     9,     0,     8,     0,    10,     4,     1,     1,     3, 
          2,     5,     5,     3,     3,     1,     1,     3,     3,     3, 
          1,     5,     3,     3,     1,     3,     3,     0,     2,     1, 
          0,     1,     1,     3,     3,     3,     4,     2,     1,     2, 
          0,     2,     1,     1,     1,     1,     1,     1,     0,     1, 
          1,     2,     0,     4,     0,     7,     0,    10,     0,     8, 
          0,     6,     0,     8,     0,     8,     0,     3,     0,     3, 
          0,     4,     0,     6,     7,     7,     2,     1,     3,     1, 
          3,     1,     3,     3,     1,     3,     0,     1,     1,     2, 
          0,     5,     0,     4,     1,     3,     0,     0,     3,     2, 
          1,     1,     2,     0,     9,     1,     3,     0,     1,     0, 
          5,     0,     1,     3,     2,     1,     0,     1,     1,     3, 
          0,     1,     5,     4,     4,     1,     4,     1,     1,     0, 
          3,     0,     3,     4,     4,     2,     0,     4,     0,     5, 
          0,     6,     2,     1,     2,     4,     3,     1,     1,     1, 
          1,     1,     5,     3,     3,     3,     0,     7,     2,     4, 
          0,     1,     1,     3,     1,     3,     1,     0,     4,     1, 
          1,     1,     1,     1,     1,     1,     1,     1,     1,     3, 
          0,     1,     3,     3,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     3,     4,     4,     3,     3,     3,     3, 
          3,     3,     4,     4,     3,     3,     3,     3,     3,     3, 
          3,     3,     3,     4,     4,     3,     2,     2,     2,     2, 
          2,     2,     2,     2,     0,     1,     1,     2,     0,     4, 
          2,     0,     6,     0,     4,     1,     1,     1,     1,     1, 
          1,     1,     1,     1,     1,     4,     3,     4,     1,     3, 
          1,     3,     2,     1,     3,     5,     5,     5,     1,     3, 
          0,     1,     1,     2,     1,     1,     1,     1,     1,     1, 
          1,     1, 
    );
    protected static $yyDefRed= array(0,
          3,     0,     0,     0,     0,     0,     0,     7,     0,     0, 
          0,   298,     0,     0,   300,   299,     0,    15,     0,   325, 
        327,   326,   329,   331,   330,   332,   328,     1,     0,    68, 
          0,   323,     8,     0,     0,     4,     0,     0,     0,     0, 
          0,    69,    20,    24,    22,   324,    18,    19,     0,     0, 
          0,    14,     0,     0,     0,     0,    76,     0,     0,     0, 
          0,     0,     0,     0,    13,     0,     0,     9,     0,     0, 
          0,    70,    67,     0,     0,     0,     0,    11,    12,    10, 
         74,    75,   228,     0,     0,   234,   230,   233,   231,   232, 
          0,     0,    81,     0,     0,    77,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    72,     0,    73, 
          0,     0,     0,   301,     0,   302,   303,   304,     0,   309, 
         27,     0,     0,     0,    31,    35,     0,     0,   237,     0, 
          0,     0,     0,     0,     0,   197,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   235,     0,   236,   208,   209, 
        210,   211,   212,     0,     0,   239,     0,     0,    79,    80, 
         83,    84,     0,    78,     0,     0,     0,     0,     0,     0, 
          0,     0,   306,    29,    35,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   203,     0,   201, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   223,     0,   199,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   283,   284,     0,   289,   297,   296, 
        294,   196,   286,     0,     0,     0,   229,     0,     0,     0, 
          0,     0,   312,     0,     0,   313,     0,     0,     0,   307, 
        310,     0,   320,     0,     0,    25,     0,    34,    36,    37, 
          0,     0,     0,    42,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   191,   193,     0,   100,     0,     0, 
          0,   225,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   216, 
          0,   207,     0,     0,   288,     0,   180,     0,     0,   242, 
        240,     0,    82,     0,   308,     0,   315,     0,     0,    21, 
          0,     0,     0,     0,     0,     0,     0,    23,     0,    35, 
          0,     0,   198,     0,     0,     0,     0,     0,   194,     0, 
        226,   195,   224,     0,     0,   189,   186,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   292,   174,   317, 
          0,   318,   113,     0,   131,   117,   121,   123,   119,   127, 
        129,   115,   125,     0,     0,     0,     0,   111,     0,    63, 
          0,     0,     0,     0,     0,     0,    35,    45,     0,    43, 
          0,     0,     0,     0,     0,     0,     0,   217,     0,   200, 
          0,   290,   295,     0,   316,     0,   133,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    38,   137, 
        112,     0,     0,    61,    59,   103,   104,   105,   106,   107, 
        108,     0,     0,     0,     0,     0,     0,     0,   184,   185, 
        202,   220,     0,     0,     0,     0,     0,     0,     0,   138, 
          0,     0,     0,     0,   155,     0,     0,   128,   130,     0, 
          0,     0,     0,   142,   227,     0,     0,    93,     0,     0, 
          0,     0,     0,    65,     0,    48,     0,     0,    53,    33, 
          0,   183,   218,   187,   293,   114,     0,     0,     0,     0, 
        132,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,    50,     0,    98,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,    52,    55,     0,    49,    54,    47, 
          0,     0,   139,     0,     0,     0,   156,     0,     0,     0, 
          0,     0,     0,   143,     0,     0,     0,     0,    94,    96, 
         95,     0,     0,     0,     0,     0,   164,   170,   134,     0, 
        161,   162,     0,     0,   122,     0,   146,     0,     0,     0, 
          0,    97,   102,     0,    85,     0,    64,     0,     0,     0, 
         56,     0,     0,   160,   169,   163,   135,     0,     0,     0, 
        158,   116,   151,   153,     0,     0,   149,   136,     0,     0, 
         62,    60,     0,     0,     0,     0,   124,   120,     0,     0, 
          0,   126,   150,    87,    86,    66,   166,     0,     0,     0, 
        159,     0,     0,     0,     0,   171,   118,     0,   154,   167, 
          0,   152,     0,     0,   165, 
    );
    protected static $yyDgoto= array(2,
          3,     6,    28,   143,     4,     7,     8,    17,    53,    18, 
        267,   114,    61,    99,   123,   177,    63,   272,    62,   101, 
        125,   418,   268,   269,   270,   405,   273,   274,   356,   357, 
        406,   198,   371,   416,   508,   145,   498,   509,   541,   503, 
        568,   597,   502,   499,   453,   462,   544,    41,    30,    42, 
         58,    94,    95,    96,   251,   500,   501,   407,   408,   308, 
        436,   446,   486,   612,   440,   146,   443,   527,   441,   442, 
        447,   615,   444,   445,   439,   477,   579,   479,   493,   480, 
        494,   616,   617,   630,   631,   629,   580,   604,   581,   582, 
        602,   638,   603,   252,   147,   278,   116,   117,   148,   378, 
        285,   192,   242,   193,   200,   187,   294,   282,   149,   150, 
        151,   152,   153,   473,   201,   202,   154,   103,   155,   156, 
        341,   243,   244,   333,   245,   434,   334,   118,   119,   120, 
        170,    31,    32, 
    );
    protected static $yySindex = array(         -222,
          0,     0,  -217,    64,  -186,  1166,  -217,     0,   123,   154, 
        149,     0,  -247,  -247,     0,     0,   222,     0,   209,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   383,     0, 
        827,     0,     0,    64,    64,     0,   -37,   280,   -24,  -191, 
         39,     0,     0,     0,     0,     0,     0,     0,   -24,   -24, 
        -24,     0,   272,     0,   201,   308,     0,   353,   209,   827, 
         64,    64,    64,   365,     0,   371,   378,     0,    64,    64, 
        344,     0,     0,   394,    92,   163,    92,     0,     0,     0, 
          0,     0,     0,    64,   192,     0,     0,     0,     0,     0, 
        414,    75,     0,   477,   347,     0,   591,    64,   214,    64, 
        407,   214,  5108,   499,   -19,   -19,  -190,     0,  -108,     0, 
        224,   497,   134,     0,   479,     0,     0,     0,   101,     0, 
          0,    64,   454,   538,     0,     0,   471,  5524,     0,  5524, 
       5524,  5524,  5524,  5524,  5524,     0,  5524,   474,   552,     0, 
       5139,   473,   206,  3665,   -36,     0,   578,     0,     0,     0, 
          0,     0,     0,   531,   598,     0,  5233,   123,     0,     0, 
          0,     0,   609,     0,    64,   251,   416,   400,   479,   438, 
        542,   591,     0,     0,     0,    64,  1506,   439,    46,  2655, 
       -121,  -121,   -81,  -121,  -121,  -121,   251,     0,  5524,     0, 
       5524,   485,   -36,   497,     0,   -49,  2927,   193,   410,   706, 
        713,     0,    99,     0,  5524,  5524,  5524,  5524,  5524,  5524, 
       5524,  5524,  5524,  5524,  5524,  5524,  5524,  5524,  5524,  5524, 
       5345,  5379,  5071,  5524,  5080,  5524,  5524,  5524,  5524,  5524, 
       5524,  5524,    64,  5524,     0,     0,   251,     0,     0,     0, 
          0,     0,     0,   -36,  -247,  5524,     0,   342,  5524,  3665, 
        718,   716,     0,   161,   251,     0,    20,   717,   251,     0, 
          0,  1532,     0,   639,   507,     0,   337,     0,     0,     0, 
          0,   646,   456,     0,  5524,   738,   479,   -36,   656,   659, 
       3665,  5233,  3665,  5410,     0,     0,   -36,     0,   722,   485, 
         99,     0,   485,   115,  3783,  3819,  3819,  3819,  3819,  3819, 
       3819,  3819,  3819,  3819,  3819,  3819,  3665,   726,   441,  2365, 
       2804,  5524,   159,  5524,   159,  5524,  5524,     4,     4,  5524, 
       5524,     4,     4,    31,    31,   -51,   -51,   -51,   -81,     0, 
       -121,     0,  5524,  5233,     0,   752,     0,   737,   552,     0, 
          0,  3665,     0,  5233,     0,   254,     0,   251,   296,     0, 
        661,   563,   373,   564,   -62,   702,   762,     0,   439,     0, 
        427,  5233,     0,  5233,    93,   790,   661,  3665,     0,  5524, 
          0,     0,     0,   707,   795,     0,     0,   -36,  5524,  3819, 
       3819,     4,     4,     4,     4,   743,   796,     0,     0,     0, 
         47,     0,     0,    12,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   805,   729,  3040,   661,     0,   799,     0, 
        817,   823,   655,   783,   722,   760,     0,     0,  5524,     0, 
        755,   834,   753,   767,   -36,   768,  3665,     0,  5233,     0, 
        427,     0,     0,  5233,     0,  5524,     0,   565,  5524,   855, 
        864,   548,   866,   853,   857,   877,   887,   589,     0,     0, 
          0,   730,   245,     0,     0,     0,     0,     0,     0,     0, 
          0,   888,   245,   874,   680,  1802,  3067,   702,     0,     0, 
          0,     0,   -36,   903,   904,   890,   661,   885,   451,     0, 
       3094,  5524,  5524,   661,     0,   593,   620,     0,     0,  5524, 
       5524,   908,   472,     0,     0,   911,   495,     0,   930,   928, 
         56,    86,    86,     0,   880,     0,   -33,  -102,     0,     0, 
        702,     0,     0,     0,     0,     0,   850,  5524,   565,   854, 
          0,   917,  3191,   861,   949,   952,   633,  3227,  3339,  5524, 
        589,   875,     0,   739,     0,   684,   245,   660,   722,   245, 
        965,   928,   967,   245,     0,     0,   661,     0,     0,     0, 
        387,  3665,     0,   661,  5524,   548,     0,  5524,   669,  5524, 
        548,   902,  3665,     0,   661,   722,    64,   -34,     0,     0, 
          0,   928,   684,   684,   969,   886,     0,     0,     0,   387, 
          0,     0,   905,   970,     0,  3366,     0,  3487,   663,   367, 
        907,     0,     0,  5524,     0,   661,     0,   -34,   -34,   684, 
          0,  1001,   920,     0,     0,     0,     0,  5524,   985,   548, 
          0,     0,     0,     0,   923,   367,     0,     0,  3523,   926, 
          0,     0,   -34,    64,   661,  1011,     0,     0,   548,  5524, 
       1002,     0,     0,     0,     0,     0,     0,   -91,   936,   548, 
          0,  3638,   661,    64,  1021,     0,     0,   661,     0,     0, 
        942,     0,   661,   953,     0, 
    );
    protected static $yyRindex= array(          839,
          0,     0,   584,     0,     0,   408,   978,     0,   756,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        419,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   -39,   102,     0,     0,   186,     0,   488, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   894,   -84,   954,   -84,     0,     0,     0, 
          0,     0,     0,     0,   -27,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   956,     0, 
          0,   956,   987,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   103,     0,     0,     0,     0,     0, 
          0,     0,     0,   -25,     0,     0,     0,  2601,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,  2030,  1906,   921, 
       1040,     0,     0,   364,  1577,     0,    74,     0,     0,     0, 
          0,     0,     0,     0,   336,     0,  1041,   -29,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   826,     0, 
          0,     0,     0,     0,     0,     0,  -106,   959,  1149,   465, 
       1976,  2088,  1012,  2204,  2421,  2489,     0,     0,     0,     0, 
          0,     0,  1577,  5504,  1645,    -7,     0,  1480,     0,     0, 
          9,     0,   828,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  1032,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,  1785,     0,   763,     0,   464,     0,    35, 
          0,   -20,     0,     0,     0,     0,  1048,     0,     0,     0, 
          0,  -106,     0,   616,     0,     0,     0,     0,     0,     0, 
        555,     0,   968,     0,     0,  1003,     0,  1577,  1004,  1006, 
        556,  1041,   568,     0,     0,     0,  1577,     0,    -9,     0, 
          0,     0,     0,     0,  1158,    62,    66,    82,   112,   297, 
        528,  1057,  1059,  1088,  1090,  1179,   814,     0,  3749,  3596, 
       1877,     0,  3137,     0,  4911,     0,     0,  4361,  4377,     0, 
          0,  4403,  4431,  4307,  4335,  3923,  4208,  4250,  2628,     0, 
       2533,     0,  1009,  1041,     0,  1341,     0,     0,     0,     0, 
          0,    41,     0,   -13,     0,     0,     0,     0,     0,     0, 
        974,     0,    17,     0,     0,    60,     0,     0,     0,     0, 
        319,  1041,     0,   979,     0,     0,   974,   135,     0,     0, 
          0,     0,     0,     0,  1453,     0,     0,  1577,     0,  1195, 
       1541,  4472,  4513,  4637,  4895,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,  -109,     0,     0,     0, 
          0,   990,     0,     0,  1066,     0,     0,     0,     0,     0, 
        494,     0,     0,     0,  1577,     0,   -22,     0,  1041,     0, 
       4810,     0,     0,  1041,     0,  1068,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,  1087,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,  -106,     0,  1314,     0,     0, 
          0,     0,  1577,     0,     0,     0,   974,   534,     0,     0, 
          0,  1074,     0,   974,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   357,     0,     0,  1094, 
          0,  1097,  1097,     0,     0,     0,     0,     0,     0,     0, 
         60,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   778,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     5,     0,     0,   357,     0, 
          0,  1103,     0,  1087,     0,     0,   974,     0,     0,     0, 
          0,   574,     0,   974,  1074,     0,     0,     0,     0,     0, 
          0,     0,   588,     0,   974,   357,     0,     0,     0,     0, 
          0,  1104,     5,     5,     0,     0,     0,     0,     0,   285, 
          0,     0,     0,     0,     0,     0,     0,     0,   403,  1028, 
          0,     0,     0,     0,     0,   974,     0,     0,     0,     5, 
          0,     0,     0,     0,     0,     0,     0,  1114,     0,     0, 
          0,     0,     0,     0,     0,  1044,     0,     0,     0,     0, 
          0,     0,     0,     0,   974,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   -26,     0,     0,     0,     0,   -26,     0,     0, 
          0,     0,   974,     0,     0, 
    );
    protected static $yyGindex= array(0,
          0,     0,     0,    -4,     0,     0,  1169,   704,   679,   417, 
       1159,   -60,     0,  1102,  1078,  -148,     0,     0,     0,     0, 
       -116,  -377,     0,     0,     0,  2235,     0,   829,     0,     0, 
         83,    16,   137,     0,     0,   -63,  -415,   677,   686,     0, 
       -142,   -55,     0,   651,     0,     0,     0,     0,  1137,  1139, 
          0,   650,     0,  1091,  1334,  -359,   301,     0,   230,  -202, 
          0,     0,  -147,     0,     0,  -419,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   682, 
        672,     0,   602,     0,     0,     0,     0,     0,   641,   642, 
          0,     0,     0,     0,     0,     0,  1042,  1043,   862,     0, 
        343,     0,  -139,     0,  1016,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   937,     0,     0,     0,   983, 
          0,   988,     0,     0,     0,     0,     0,     0,     0,  1063, 
       1073,     0,  1213, 
    );
    protected static $yyTable = array(11,
         75,    76,    77,   241,   234,   174,    16,    93,    50,   240, 
         97,   227,    12,   227,   227,   110,   321,    52,    58,    13, 
        173,    58,   548,   104,   595,   546,   262,   172,   171,    47, 
         48,    57,   644,   319,    57,    57,    58,   121,    26,   124, 
        231,    93,    93,   337,   234,   229,   227,   505,   228,   222, 
        230,   438,    15,   286,   238,   305,    74,    74,    74,   263, 
        347,   124,   522,   101,    81,    82,    92,   231,    55,   161, 
         58,    83,   229,    12,   234,   176,    17,   230,   176,    74, 
          1,   175,    59,   305,   175,   190,     5,   435,   596,   547, 
        512,    34,    74,    74,    10,    74,    13,   319,   109,    14, 
         92,    92,   215,    32,   173,   215,   245,    17,    74,   245, 
        171,   172,   115,    15,   178,   124,    16,    74,    32,   215, 
        215,   569,   246,   245,   245,   246,   276,   101,   169,   234, 
        386,    60,   178,   550,   437,   584,   196,   171,   363,   246, 
        246,    17,   542,   542,   172,    17,   311,   369,    56,   162, 
        129,   163,   247,   321,   215,   247,   234,   507,   245,   176, 
        253,    74,   173,    74,   311,   175,   178,    74,    34,   247, 
        247,    74,   330,   168,   246,   219,   112,    16,   219,   321, 
        572,   254,    74,   257,    32,   144,   215,   115,   626,   112, 
        245,    91,   219,   219,    17,   231,   167,   412,    74,    35, 
        229,   227,   277,   228,   247,   230,   246,    36,   113,   237, 
        180,   421,   181,   182,   183,   184,   185,   186,   223,   188, 
        225,   113,   594,   197,   112,   321,    26,   219,    74,    71, 
        233,   319,    74,   476,    58,    12,   247,    34,   430,   250, 
        158,    86,    87,    88,    89,    90,    34,    57,   645,   237, 
         74,   171,   105,   345,    74,   288,   113,   413,    69,   219, 
        233,   101,    74,   110,   110,   222,    10,    39,   466,   414, 
        346,   281,    40,   283,   349,    15,    17,   415,    71,   237, 
        235,   236,   355,   171,   234,   471,    74,   295,   296,   297, 
        298,   299,   300,   301,   302,   303,   304,   305,   306,   307, 
        309,   310,   311,   313,   315,   318,   319,   322,   323,   324, 
        325,   326,   327,   328,   329,   233,   331,   168,   215,   168, 
        235,   236,   245,     9,   168,    51,    84,   168,   307,   168, 
         68,   342,   305,   513,   237,   112,    17,   248,   246,    16, 
        248,   112,   233,    74,   171,     9,   109,   109,    17,    10, 
        235,   236,   338,   339,   248,   248,    17,   361,     9,   206, 
        204,   237,   206,   391,   250,    70,   368,   113,   247,   232, 
         16,    10,    49,   113,   375,   168,   206,   206,   390,   206, 
         17,   206,    17,   239,    10,   538,   171,   110,   496,   248, 
        109,   219,    71,     9,   380,   539,   381,    57,   382,   383, 
         57,    98,   384,   385,   179,   235,   236,   179,   585,   168, 
        168,   206,   410,   589,   376,   307,   250,   540,    34,    10, 
        392,   248,   179,    78,   232,   497,   250,   112,   238,    79, 
        598,   599,   235,   236,    83,   157,    80,   157,   292,   168, 
        256,   199,   157,   206,   250,   157,   250,   157,    74,    57, 
        593,   232,   427,    97,   377,    54,   179,   623,    74,   113, 
        238,   431,   628,   231,   220,    65,    54,    54,   229,   227, 
        233,   228,   100,   230,   106,   215,   215,   231,   220,   245, 
        245,   641,   229,   227,   107,   228,   223,   230,   225,   237, 
        112,   520,   647,   157,   519,   246,   246,    74,    74,   359, 
        223,   467,   225,   199,     9,   205,   124,   241,   205,   322, 
          9,   250,   532,   190,   360,   531,   250,   108,   307,    34, 
        219,   481,   113,   205,   122,   247,   247,   157,   157,   126, 
         10,   189,    74,   165,   219,    74,    10,   332,   157,    74, 
        534,   322,   621,   622,   168,   168,   168,   168,   168,   168, 
        218,   464,   234,   248,   166,   370,   241,   205,   226,   224, 
        235,   236,    74,   637,   144,   523,   234,   636,   249,   171, 
        168,   249,   528,   529,   140,   206,   175,   140,   321,   232, 
        132,   176,   142,   650,   497,   249,   249,   141,   241,   205, 
        130,   199,   131,   178,    46,   203,   353,   168,    44,   243, 
        552,   338,   339,    85,    86,    87,    88,    89,    90,   191, 
        321,   244,   563,    44,   141,   204,   321,   141,    39,    74, 
        249,   246,    10,   247,   168,   168,   168,   168,   144,    10, 
        168,   144,   372,   535,   260,   374,   451,   144,    83,    74, 
        586,   248,   588,    91,   168,   168,   168,   168,   243,   168, 
        168,   168,   249,   111,   168,   168,   168,   168,   168,     9, 
        244,   336,   157,   157,   157,   157,   157,   157,   354,   105, 
        484,   485,   255,   133,     5,   571,   619,    44,   322,    44, 
        243,   112,    43,    44,    45,    10,   168,   168,   157,    84, 
        144,   460,   244,   132,   259,   142,   458,   456,   271,   457, 
        141,   459,   592,   130,   322,   131,   329,   321,   321,   321, 
        248,   248,   642,   113,   168,   157,    37,    38,   322,   322, 
        322,   205,   206,   206,   206,   206,   206,    64,    66,    67, 
        577,   578,   206,   206,   206,   206,   206,   206,   233,   613, 
        614,   284,   157,   157,   157,   157,   290,   321,   157,   289, 
        322,    83,   233,   321,   159,   160,   291,   237,   343,   344, 
        348,   351,   157,   157,   157,   157,   352,   157,   157,   157, 
        358,   237,   157,   321,   157,   157,   157,   362,   364,   321, 
        461,   365,   370,   379,   249,   485,   133,   321,   321,   321, 
        485,   388,    17,    17,   189,    17,    17,    17,    17,    17, 
         17,   419,    17,   181,   157,   157,   181,   179,    86,    87, 
         88,    89,    90,    17,    17,    17,    17,    17,    17,   321, 
         83,   181,   409,   411,   417,   321,   226,   224,   235,   236, 
        425,   428,   157,    10,   429,   432,   433,   221,   222,   485, 
        226,   224,   235,   236,   448,    19,    17,   232,    17,    17, 
          9,   221,   222,   449,   182,   181,   454,   182,   485,   452, 
        137,   232,   455,     5,     5,     5,     5,     5,     5,   485, 
          5,   182,   182,   463,   468,   329,    10,   469,    17,    17, 
         17,    17,   465,     5,     5,     5,     5,   140,   393,   394, 
        395,   470,   472,   136,   482,   329,   329,   329,   329,   329, 
        329,   329,   329,   483,   478,   487,   182,   396,   397,   398, 
        399,   488,   400,   401,   128,   489,   490,   402,   329,   403, 
        179,    86,    87,    88,    89,    90,   491,   504,   492,     2, 
        305,   305,   506,   305,   305,   305,   305,   305,   305,   507, 
        305,   249,   249,   514,   515,   518,    10,   329,   516,   134, 
        135,   305,   305,   525,   305,   305,   305,   192,   192,   526, 
        192,   192,   192,   192,   192,   192,   192,   192,   530,   533, 
        536,   537,   545,   137,   551,   555,   554,   404,   192,   192, 
        192,   192,   192,   192,   305,   557,   305,   305,   558,   495, 
         86,    87,    88,    89,    90,   559,   560,   565,   566,   570, 
        140,   393,   394,   395,   567,   573,   136,   574,   587,   600, 
        601,   192,    17,   192,   192,    17,   305,   305,   305,   305, 
        396,   397,   398,   399,   590,   400,   401,   128,   608,   607, 
        402,   618,   403,   611,    20,    21,    22,   264,    24,    25, 
        624,    26,   625,   627,   192,   192,   192,   632,   277,   277, 
        635,   640,   277,   277,   277,   277,   277,    27,   277,   643, 
        646,   651,   134,   135,   653,    17,    17,    17,     6,   277, 
        277,   277,   277,   277,   277,    17,    30,   655,    28,   177, 
        221,   172,   314,    41,   221,    17,    17,    17,   265,   181, 
        404,   314,    40,   301,   302,    17,   303,   251,   109,   250, 
        251,   181,   250,   172,   277,   277,    20,    21,    22,    23, 
         24,    25,    51,    26,   251,   251,   250,   250,     2,     2, 
          2,     2,     2,     2,    57,     2,   181,    91,   252,    27, 
        253,   252,   177,   253,    92,   277,   277,    88,     2,     2, 
          2,   145,     2,    90,    89,   252,   252,   253,   253,   251, 
        305,   250,   147,   305,   177,    17,    17,    17,    17,    17, 
         17,    17,    17,    17,    29,    17,    17,    17,   148,    17, 
         17,    17,    17,    17,    17,    33,    17,   190,   102,   127, 
        252,   251,   253,   250,   549,   227,   227,   420,   543,   227, 
        227,   227,   227,   227,   575,   227,    73,    72,   214,   164, 
        553,   214,   564,   305,   305,   305,   227,   227,    17,   227, 
        227,    17,   252,   305,   253,   214,   214,   633,   293,   254, 
        605,   606,   254,   305,   305,   305,   424,   373,   279,   280, 
        340,   335,   192,   305,   261,   263,   254,   254,   263,    17, 
        258,   227,   227,    46,     0,     0,     0,     0,     0,     0, 
        214,   192,   263,   263,     0,     0,    19,     6,     6,     6, 
          6,     6,     6,     0,     6,     0,     0,     0,   277,     0, 
          0,   254,   227,   227,   227,     0,     0,     6,     6,     6, 
          6,     0,   214,     0,     0,     0,     0,   263,     0,     0, 
          0,     0,     0,   305,   305,   305,   305,   305,   305,   305, 
        305,   305,     0,   254,   305,   305,     0,   305,   305,   305, 
        305,   305,   305,   251,   305,   250,     0,     0,     0,   263, 
        192,   192,   192,   192,   192,   192,   192,   192,   192,     0, 
          0,   192,   192,     0,   192,   192,   192,   192,   192,   192, 
        192,   192,     0,     0,   252,     0,   253,     0,     0,     0, 
         32,    32,     0,    32,    32,    32,    32,    32,    32,    32, 
         32,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,    32,    32,    32,    32,    32,    32,   291,   291,     0, 
          0,   291,   291,   291,   291,   291,   291,   291,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   291,   291, 
        291,   291,   291,   291,    32,   227,    32,    32,     0,     0, 
          0,   277,   277,     0,   214,   277,   277,   277,   277,   277, 
          0,     0,   277,   277,     0,   277,   277,   277,   277,   277, 
        277,   291,   277,   291,   291,   254,     0,    32,    32,    32, 
          0,     0,     0,     0,     0,    20,    21,    22,    23,    24, 
         25,   263,    26,     0,     0,     0,     0,     0,     0,     0, 
        227,     0,     0,     0,   291,   291,   291,     0,    27,     0, 
        251,   251,   250,   250,     0,     0,     0,     0,     0,   227, 
          0,     0,     0,     0,     0,     0,     0,     0,    17,   188, 
        188,     0,     0,   188,   188,   188,   188,   188,   188,   188, 
          0,   252,   252,   253,   253,     0,     0,     0,     0,     0, 
        188,   188,   188,   188,   188,   188,    99,    99,     0,     0, 
         99,    99,    99,    99,    99,     0,    99,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,    99,    99,    99, 
         99,    99,     0,   188,     0,   188,   188,     0,   227,   227, 
        227,   227,   227,   227,   227,   227,   227,     0,    17,   227, 
        227,     0,   227,   227,   227,   227,   227,   227,   227,   227, 
         32,   214,    99,    99,     0,     0,   188,   188,   188,     0, 
          0,   264,     0,     0,   264,     0,     0,     0,     0,     0, 
          0,     0,   254,   254,     0,     0,    19,   291,   264,   264, 
          0,     0,     0,    99,    99,    99,     0,     0,   263,   263, 
          0,     0,     0,   285,   285,   366,     0,   285,   285,   285, 
        285,   285,    19,   285,     0,    32,     0,     0,     0,     0, 
        266,     0,     0,   264,   285,   285,   285,   285,   285,   285, 
          0,     0,     0,     0,    32,     0,     0,     0,     0,     0, 
          0,     0,   291,     0,     0,     0,   350,     0,     0,     0, 
          0,     0,     0,     0,     0,   264,     0,   387,     0,   285, 
        285,   291,     0,     0,     0,     0,     0,   389,     0,     0, 
          0,   192,   192,     0,   192,   192,   192,   192,   225,   192, 
        192,   192,     0,     0,     0,   422,     0,   423,     0,     0, 
        285,   285,   285,     0,   192,   192,   192,   192,     0,   188, 
          0,     0,     0,    32,    32,    32,    32,    32,    32,    32, 
         32,    32,     0,     0,    32,    32,     0,    32,    32,    32, 
         32,    32,    32,    32,    32,   192,    99,     0,   192,     0, 
        291,   291,   291,   291,   291,   291,   291,   291,   291,     0, 
          0,   291,   291,     0,   291,   291,   291,   291,   291,   291, 
        291,   291,   474,     0,   188,     0,     0,   475,   192,     0, 
        192,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   188,     0,    20,    21,    22,   264,    24, 
         25,    99,    26,     0,     0,     0,     0,   264,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,    27,    99, 
         99,    20,    21,    22,   264,    24,    25,     0,    26,    99, 
          0,   287,   287,     0,     0,   287,   287,   287,   287,   287, 
          0,   287,     0,   285,    27,     0,     0,     0,     0,   265, 
          0,     0,   287,   287,   287,   287,   287,   287,     0,     0, 
          0,     0,   188,   188,   188,   188,   188,   188,   188,   188, 
        188,     0,     0,   188,   188,   265,   188,   188,   188,   188, 
        188,   188,   188,   188,     0,     0,     0,   287,   287,    99, 
         99,    99,    99,    99,    99,    99,    99,    99,   285,     0, 
         99,    99,    19,    99,    99,    99,    99,    99,    99,     0, 
         99,   190,     0,     0,     0,     0,     0,   285,   287,   287, 
        287,     0,     0,     0,   272,     0,     0,   272,     0,     0, 
        272,     0,     0,     0,     0,     0,   510,     0,     0,     0, 
          0,     0,     0,     0,   272,   272,     0,   272,     0,   272, 
          0,     0,   234,   234,     0,   234,     0,   234,   234,   234, 
        234,   234,   234,     0,   264,   264,   192,     0,     0,     0, 
          0,     0,     0,     0,     0,   234,   234,   234,   234,   272, 
        272,     0,     0,     0,     0,   192,   285,   285,   285,   285, 
        285,   285,   285,   285,   285,     0,     0,   285,   285,     0, 
        285,   285,   285,   285,   285,   285,   234,   285,   234,   234, 
        272,   272,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   279,   279,     0,     0,   279,   279,   279,   279, 
        279,     0,   279,     0,     0,     0,     0,     0,     0,   234, 
          0,   234,     0,   279,   279,   279,   279,   279,   279,     0, 
          0,   287,     0,     0,   192,   192,   192,   192,   192,   192, 
        192,   192,   192,     0,     0,   192,   192,     0,   192,   192, 
        192,   192,   192,   192,   192,   192,   227,   227,   279,   279, 
          0,   227,   227,   227,   227,     0,   227,     0,     0,     0, 
          0,    20,    21,    22,   264,    24,    25,     0,    26,   227, 
        227,   227,   227,     0,     0,     0,   287,     0,     0,   279, 
        279,     0,     0,     0,    27,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   287,     0,     0,     0,     0, 
        227,     0,   227,   227,   280,   280,     0,     0,   280,   280, 
        280,   280,   280,   272,   280,   265,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   280,   280,   280,   280,   280, 
        280,     0,     0,   227,     0,   227,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        280,   280,     0,     0,   287,   287,   287,   287,   287,   287, 
        287,   287,   287,     0,     0,   287,   287,     0,   287,   287, 
        287,   287,   287,   287,     0,   287,     0,     0,     0,     0, 
          0,   280,   280,     0,     0,     0,     0,   234,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   279,     0,     0,     0,   234,     0,     0,     0, 
        278,   278,     0,     0,   278,   278,   278,   278,   278,     0, 
        278,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   278,   278,   278,   278,   278,   278,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        272,   272,   272,   272,   272,     0,     0,   279,     0,     0, 
        272,   272,   272,   272,   272,   272,   278,   278,     0,     0, 
          0,     0,     0,     0,     0,   234,   234,   234,   234,   234, 
        234,   234,   234,   234,     0,     0,   234,   234,     0,   234, 
        234,   234,   234,   234,   234,   234,   234,   278,   278,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   227,     0,     0,   280,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        227,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   279,   279,     0,     0,   279, 
        279,   279,   279,   279,     0,     0,   279,   279,     0,   279, 
        279,   279,   279,   279,   279,     0,   279,     0,     0,   280, 
          0,   231,   220,     0,     0,     0,   229,   227,     0,   228, 
          0,   230,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   223,     0,   225,     0,     0,   227, 
        227,   227,   227,   227,   227,   227,   227,   227,     0,    17, 
        227,   227,     0,   227,   227,   227,   227,   227,   227,   227, 
        227,     0,     0,     0,     0,     0,     0,   281,   281,     0, 
        278,   281,   281,   281,   281,   281,     0,   281,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   281,   281, 
        281,   281,   281,   281,     0,     0,     0,   280,   280,     0, 
        234,   280,   280,   280,   280,   280,     0,     0,   280,   280, 
          0,   280,   280,   280,   280,   280,   280,     0,   280,     0, 
          0,     0,     0,   281,   281,   278,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   282,   282,     0,     0,   282, 
        282,   282,   282,   282,     0,   282,     0,     0,     0,     0, 
          0,     0,     0,     0,   281,   281,   282,   282,   282,   282, 
        282,   282,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   270, 
        270,     0,     0,   270,   270,   270,   270,   270,     0,   270, 
          0,   282,   282,     0,     0,     0,     0,     0,     0,     0, 
        270,   270,   270,   270,   270,   270,     0,     0,     0,     0, 
          0,   426,     0,   278,   278,     0,     0,   278,   278,   278, 
        278,   278,   282,   282,   278,   278,     0,   278,   278,   278, 
        278,   278,   278,     0,   278,   270,   270,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   204,   204,     0, 
          0,   204,   204,     0,   204,     0,     0,   204,     0,     0, 
          0,     0,     0,     0,     0,     0,   270,   270,   204,   204, 
        204,   204,   204,   204,   276,   276,     0,     0,   276,   276, 
        276,   276,   276,     0,   276,     0,   233,   281,     0,     0, 
          0,     0,     0,     0,     0,   276,   276,   276,   276,   276, 
        276,   231,   220,   204,   204,   237,   229,   227,     0,   228, 
          0,   230,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   517,   275,     0,   223,   207,   225,   217,   524,     0, 
        276,   276,     0,     0,   204,   204,     0,     0,     0,     0, 
          0,     0,   281,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   282,     0,     0,   219,     0, 
          0,   276,   276,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   226,   224,   235,   236,     0,     0, 
          0,     0,     0,     0,     0,   221,   222,     0,   218,     0, 
        234,   576,     0,     0,     0,   232,     0,     0,   583,   270, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   591, 
        282,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        281,   281,     0,     0,   281,   281,   281,   281,   281,     0, 
        620,   281,   281,     0,   281,   281,   281,   281,   281,   281, 
        231,   281,     0,     0,   270,   229,   227,     0,   228,     0, 
        230,     0,     0,     0,     0,     0,     0,   204,     0,   639, 
          0,     0,     0,   223,     0,   225,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   649,     0,     0, 
          0,     0,   652,     0,   276,     0,     0,   654,   282,   282, 
          0,     0,   282,   282,   282,   282,   282,     0,     0,   282, 
        282,     0,   282,   282,   282,   282,   282,   282,     0,   282, 
          0,     0,   204,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   234, 
          0,   204,   270,   270,     0,     0,   270,   270,   270,   270, 
        270,     0,     0,   270,   270,     0,   270,   270,   270,   270, 
        270,   270,     0,   270,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   231,   220,     0,   233,   287,   229,   227, 
          0,   228,     0,   230,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   237,   223,   207,   225,   217, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        204,   204,     0,     0,   204,   204,   204,   204,   204,     0, 
          0,   204,   204,     0,   204,   204,   204,   204,   204,   204, 
        219,   204,     0,     0,     0,     0,     0,   276,   276,     0, 
          0,   276,   276,   276,   276,   276,     0,     0,   276,   276, 
          0,   276,   276,   276,   276,   276,   276,     0,   276,     0, 
        218,     0,   234,     0,   226,   224,   235,   236,   208,   209, 
        210,   211,   213,     0,     0,   221,   222,     0,   205,   206, 
        212,   215,   214,   216,     0,   232,   231,   220,     0,     0, 
          0,   229,   227,     0,   228,     0,   230,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   450,   223, 
        207,   225,   217,   231,   220,     0,     0,   511,   229,   227, 
          0,   228,     0,   230,     0,   233,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   223,   207,   225,   217, 
        231,   220,     0,   219,   237,   229,   227,     0,   228,     0, 
        230,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   521,   223,   207,   225,   217,     0,     0,     0, 
        219,     0,     0,   218,     0,   234,     0,     0,     0,     0, 
          0,     0,     0,     0,   261,     0,     0,   261,     0,     0, 
        261,     0,     0,     0,     0,     0,     0,   219,     0,     0, 
        218,     0,   234,     0,   261,   261,     0,   261,     0,   261, 
          0,     0,     0,   226,   224,   235,   236,     0,     0,     0, 
          0,     0,     0,     0,   221,   222,     0,   218,     0,   234, 
          0,     0,     0,     0,   232,     0,     0,   231,   220,   261, 
        261,   556,   229,   227,     0,   228,     0,   230,   233,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        223,   207,   225,   217,     0,     0,     0,   237,     0,     0, 
        261,   261,     0,   231,   220,     0,     0,   561,   229,   227, 
          0,   228,     0,   230,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   219,     0,   223,   207,   225,   217, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   218,     0,   234,     0,     0,     0, 
        219,     0,     0,     0,     0,     0,   226,   224,   235,   236, 
        208,   209,   210,   211,   213,     0,     0,   221,   222,     0, 
        205,   206,   212,   215,   214,   216,     0,   232,     0,     0, 
        218,   233,   234,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        237,     0,     0,     0,     0,   231,   220,     0,   233,   562, 
        229,   227,     0,   228,     0,   230,     0,     0,     0,     0, 
          0,     0,     0,   261,     0,     0,     0,   237,   223,   207, 
        225,   217,   231,   220,     0,   233,   609,   229,   227,     0, 
        228,     0,   230,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   237,   223,   207,   225,   217,     0, 
          0,     0,   219,     0,     0,     0,     0,     0,     0,   226, 
        224,   235,   236,   208,   209,   210,   211,   213,     0,     0, 
        221,   222,     0,   205,   206,   212,   215,   214,   216,   219, 
        232,     0,   218,     0,   234,     0,   226,   224,   235,   236, 
        208,   209,   210,   211,   213,     0,     0,   221,   222,     0, 
        205,   206,   212,   215,   214,   216,     0,   232,     0,   218, 
          0,   234,     0,   226,   224,   235,   236,   208,   209,   210, 
        211,   213,   233,     0,   221,   222,     0,   205,   206,   212, 
        215,   214,   216,     0,   232,     0,     0,     0,     0,     0, 
          0,   237,     0,   231,   220,     0,     0,   610,   229,   227, 
          0,   228,     0,   230,     0,     0,     0,     0,   233,     0, 
        261,   261,   261,   261,   261,     0,   223,   207,   225,   217, 
        261,   261,   261,   261,   261,   261,     0,   237,     0,   231, 
        220,     0,     0,     0,   229,   227,     0,   228,     0,   230, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        219,   634,   223,   207,   225,   217,     0,     0,     0,     0, 
        226,   224,   235,   236,   208,   209,   210,   211,   213,     0, 
          0,   221,   222,     0,   205,   206,   212,   215,   214,   216, 
        218,   232,   234,     0,     0,     0,   219,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   226,   224,   235,   236, 
        208,   209,   210,   211,   213,     0,   273,   221,   222,   273, 
        205,   206,   212,   215,   214,   216,   218,   232,   234,     0, 
        233,     0,     0,   273,   273,     0,   273,     0,   273,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   237, 
          0,     0,     0,     0,   231,   220,     0,   233,     0,   229, 
        227,     0,   228,     0,   230,     0,     0,     0,   273,   273, 
          0,     0,     0,     0,     0,   648,   237,   223,   207,   225, 
        217,   231,   220,     0,     0,     0,   229,   227,     0,   228, 
          0,   230,     0,     0,     0,     0,     0,     0,     0,   273, 
        273,     0,     0,     0,   223,   207,   225,   217,     0,     0, 
          0,   219,     0,     0,     0,     0,     0,     0,   226,   224, 
        235,   236,   208,   209,   210,   211,   213,     0,     0,   221, 
        222,     0,   205,   206,   212,   215,   214,   216,   219,   232, 
          0,   218,     0,   234,     0,   226,   224,   235,   236,   208, 
        209,   210,   211,   213,     0,     0,   221,   222,     0,   205, 
        206,   212,   215,   214,   216,     0,   232,     0,   218,   271, 
        234,     0,   271,     0,     0,     0,     0,     0,   233,     0, 
          0,     0,     0,     0,     0,     0,   271,   271,     0,   271, 
          0,   271,     0,     0,     0,     0,     0,   237,     0,   231, 
        220,     0,     0,     0,   229,   227,     0,   228,     0,   230, 
          0,     0,     0,     0,   233,     0,     0,     0,     0,     0, 
          0,   271,   223,   207,   225,   217,     0,     0,     0,     0, 
          0,     0,   273,   237,     0,   231,   220,     0,     0,     0, 
        229,   227,     0,   228,     0,   230,     0,     0,     0,     0, 
          0,     0,   271,   271,     0,     0,   219,     0,   223,   207, 
        225,   217,     0,     0,     0,     0,   226,   224,   235,   236, 
        208,   209,   210,   211,   213,     0,     0,   221,   222,     0, 
        205,   206,   212,   215,   214,   216,   218,   232,   234,     0, 
          0,     0,   219,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   226,   224,   235,   236,   208,   209,   210,   211, 
        213,     0,     0,   221,   222,     0,   205,   206,   212,   215, 
        214,   216,   218,   232,   234,     0,     0,     0,     0,   233, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   267, 
        267,     0,     0,   267,   267,   267,   267,   267,   237,   267, 
          0,     0,     0,     0,     0,     0,   233,     0,     0,     0, 
        267,   267,   267,   267,   267,   267,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   237,     0,     0,     0,   273, 
        273,   273,   273,   273,     0,   271,     0,     0,     0,   273, 
        273,   273,   273,   273,   273,   267,   267,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   226,   224,   235, 
        236,   208,   209,   210,   211,   213,   267,   267,   221,   222, 
          0,   205,   206,   212,   215,   214,   216,     0,   232,     0, 
          0,     0,     0,     0,   226,   224,   235,   236,   208,   209, 
        210,   211,   213,     0,     0,   221,   222,     0,   205,   206, 
        212,   215,   214,   216,     0,   232,     0,     0,     0,     0, 
          0,     0,     0,     0,   233,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   237,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        233,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   237, 
          0,     0,   271,   271,   271,   271,   271,     0,     0,     0, 
          0,     0,   271,   271,   271,   271,   271,   271,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   267, 
          0,     0,   226,   224,   235,   236,   208,   209,   210,   211, 
        213,     0,     0,   221,   222,     0,     0,   206,   212,   215, 
        214,   216,     0,   232,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   226,   224, 
        235,   236,   208,   209,   210,   211,   213,     0,     0,   221, 
        222,     0,     0,     0,   212,   215,   214,   216,     0,   232, 
          0,     0,     0,     0,   268,   268,     0,     0,   268,   268, 
        268,   268,   268,     0,   268,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   268,   268,   268,   268,   268, 
        268,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   269,   269,     0,     0, 
        269,   269,   269,   269,   269,     0,   269,     0,     0,     0, 
        268,   268,     0,     0,     0,     0,     0,   269,   269,   269, 
        269,   269,   269,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   267,   267,     0,     0,   267,   267,   267,   267, 
        267,   268,   268,   267,   267,     0,   267,   267,   267,   267, 
        267,   267,   269,   269,   265,     0,     0,   265,     0,   265, 
        265,   265,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   265,   265,   265,   265,   265,   265, 
          0,     0,   266,   269,   269,   266,     0,   266,   266,   266, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   266,   266,   266,   266,   266,   266,   257,   265, 
        265,   257,     0,     0,   257,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   259,     0,     0,   259,   257,   257, 
        259,   257,     0,   257,     0,     0,     0,   266,   266,     0, 
        265,   265,     0,     0,   259,   259,     0,   259,     0,   259, 
        258,     0,     0,   258,     0,     0,   258,     0,     0,     0, 
          0,     0,     0,   257,   257,     0,     0,     0,   266,   266, 
        258,   258,     0,   258,   268,   258,     0,     0,   260,   259, 
        259,   260,     0,     0,   260,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   257,   257,     0,     0,   260,   260, 
          0,   260,     0,   260,     0,   258,   258,     0,     0,     0, 
        259,   259,     0,     0,     0,     0,   269,     0,     0,   275, 
          0,     0,   275,     0,     0,   275,     0,     0,     0,     0, 
          0,     0,     0,   260,   260,     0,   258,   258,     0,   275, 
        275,     0,   275,     0,   275,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        256,     0,     0,   256,   260,   260,   256,     0,     0,     0, 
          0,     0,     0,   265,   275,   275,     0,     0,     0,     0, 
        256,   256,     0,   256,     0,   256,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   266,     0,     0,     0,   275,   275,     0,     0,     0, 
          0,     0,     0,     0,     0,   256,   256,   268,   268,     0, 
          0,   268,   268,   268,   268,   268,     0,   257,   268,   268, 
          0,   268,   268,   268,   268,   268,   268,     0,     0,     0, 
          0,     0,     0,   259,     0,     0,   256,   256,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   269, 
        269,     0,     0,   269,   269,   269,   269,   269,     0,   258, 
        269,   269,     0,   269,   269,   269,   269,   269,   269,     0, 
          0,     0,     0,     0,   274,     0,     0,   274,     0,     0, 
        274,     0,     0,     0,     0,     0,     0,   260,     0,     0, 
          0,     0,     0,     0,   274,   274,     0,   274,     0,   274, 
          0,     0,     0,     0,     0,     0,   265,   265,     0,     0, 
        265,   265,   265,   265,   265,     0,     0,   265,   265,     0, 
        265,   265,   265,   265,   265,   265,     0,     0,   275,   274, 
        274,     0,     0,     0,   266,   266,     0,     0,   266,   266, 
        266,   266,   266,     0,     0,   266,   266,     0,   266,   266, 
        266,   266,   266,   266,     0,     0,     0,     0,     0,     0, 
        274,   274,     0,     0,   257,   257,   257,   257,   257,   256, 
          0,   257,   257,     0,   257,   257,   257,   257,   257,   257, 
        259,   259,   259,   259,   259,     0,     0,   259,   259,     0, 
        259,   259,   259,   259,   259,   259,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   258,   258,   258,   258, 
        258,     0,     0,   258,   258,     0,   258,   258,   258,   258, 
        258,   258,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   260,   260,   260,   260,   260,     0, 
          0,   260,   260,     0,   260,   260,   260,   260,   260,   260, 
        213,     0,     0,   213,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   213,   213,     0, 
        213,     0,   213,     0,     0,   275,   275,   275,   275,   275, 
          0,     0,   275,   275,     0,   275,   275,   275,   275,   275, 
        275,     0,     0,   274,     0,     0,     0,     0,     0,     0, 
          0,     0,   213,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   256,   256,   256,   256, 
        256,     0,     0,   256,   256,     0,   256,   256,   256,   256, 
        256,   256,   255,     0,   213,   255,     0,     0,   255,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   262,     0, 
          0,   262,   255,   255,   262,   255,     0,   255,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   262,   262, 
          0,   262,     0,   262,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,   255,   255,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   262,   262,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   255,   255, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   262,   262,     0,     0,     0,     0, 
        274,   274,   274,   274,   274,     0,     0,   274,   274,     0, 
        274,   274,   274,   274,   274,   274,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   213,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   132,     0,   142,     0,     0,     0,     0, 
        141,     0,   132,   130,   142,   131,     0,     0,     0,   141, 
          0,     0,   130,     0,   131,     0,     0,     0,     0,     0, 
        316,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        132,   320,   142,     0,     0,     0,     0,   141,     0,     0, 
        130,   255,   131,     0,     0,     0,     0,     0,     0,     0, 
          0,    83,     0,     0,     0,   129,     0,   262,     0,     0, 
         83,   132,     0,   142,     0,     0,     0,     0,   141,     0, 
          0,   130,     0,   131,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   133,     0,    83,     0, 
          0,     0,     0,     0,     0,   133,     0,     0,     0,     0, 
          0,     0,     0,   213,   213,   213,   213,   213,     0,     0, 
          0,     0,     0,   213,   213,   213,   213,   213,   213,   194, 
          0,     0,     0,   133,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   113,     0,     0,   133,   132,     0,   142,     0,     0, 
          0,     0,   141,     0,     0,   130,     0,   131,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,   255,   255, 
        255,   255,   255,     0,     0,   255,   255,     0,   255,   255, 
        255,   255,   255,   255,   262,   262,   262,   262,   262,     0, 
          0,     0,     0,    83,   262,   262,   262,   262,   262,   262, 
        179,    86,    87,    88,    89,    90,     0,     0,     0,   179, 
         86,    87,    88,    89,    90,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,    10,     0,   133,     0, 
          0,     0,     0,     0,     0,    10,     0,   138,   139,    87, 
         88,    89,    90,     0,     0,     0,     0,   132,     0,   142, 
          0,     0,     0,   137,   141,     0,     0,   130,     0,   131, 
          0,     0,   137,    10,     0,     0,     0,     0,   179,    86, 
         87,    88,    89,    90,     0,   312,     0,     0,     0,     0, 
        140,   132,     0,   142,     0,     0,   136,     0,   141,   140, 
        137,   130,     0,   131,    10,   136,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,    83,     0,   128,     0,   314, 
          0,     0,   132,     0,   142,     0,   128,   140,     0,   141, 
          0,   137,   130,   136,   131,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    83, 
        133,   317,   134,   135,   128,     0,     0,     0,   195,   321, 
          0,   134,   135,     0,   136,     0,     0,     0,     0,     0, 
          0,     0,   179,    86,    87,    88,    89,    90,     0,     0, 
         83,     0,     0,     0,   133,   128,     0,     0,     0,   134, 
        135,     0,     0,     0,     0,     0,     0,     0,    10,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,   367,     0,     0,   133,   228,     0,   228,     0, 
        134,   135,     0,   228,     0,   137,   228,     0,   228,     0, 
          0,     0,     0,     0,     0,     0,   132,     0,   142,     0, 
          0,     0,   249,   141,     0,     0,   130,     0,   131,     0, 
          0,     0,   140,     0,     0,     0,     0,     0,   136,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   228,     0,   228,     0,     0,   128, 
          0,     0,     0,     0,   179,    86,    87,    88,    89,    90, 
          0,     0,     0,     0,    83,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,   228, 
         10,     0,     0,     0,   134,   135,     0,     0,   179,    86, 
         87,    88,    89,    90,     0,     0,     0,     0,     0,   133, 
          0,     0,     0,     0,     0,     0,     0,   137,     0,     0, 
          0,     0,     0,     0,    10,     0,     0,     0,     0,   179, 
         86,    87,    88,    89,    90,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,   140,     0,     0,     0,     0,     0, 
        136,   137,     0,     0,     0,    10,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,   128,     0,     0,     0,     0,     0,     0,   140,     0, 
          0,     0,   137,     0,   136,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   128,   134,   135,     0,   140, 
          0,     0,     0,     0,     0,   136,     0,     0,     0,     0, 
          0,     0,     0,   228,   228,   228,   228,   228,   228,     0, 
          0,     0,     0,     0,     0,     0,   128,     0,     0,     0, 
        134,   135,     0,   179,    86,    87,    88,    89,    90,   228, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,    10, 
          0,   134,   135,     0,     0,     0,   228,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,   137,     0,     0,     0, 
          0,     0,     0,   228,     0,     0,     0,     0,     0,   228, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,   140,     0,     0,     0,     0,     0,   136, 
        228,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
        128,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   228,   228,     0,     0,     0, 
          0,     0,     0,     0,     0,     0,     0,     0,     0,     0, 
          0,     0,     0,     0,     0,   134,   135, 
    );
    protected static $yyCheck = array(4,
         61,    62,    63,    40,   126,   122,    46,    71,    46,    46, 
         60,    41,   260,    41,    44,   125,   123,    42,    41,    59, 
         41,    44,   125,    84,    59,    59,   175,    41,    91,    34, 
         35,    41,   124,    59,    44,    40,    59,    98,   123,   100, 
         37,   105,   106,   246,   126,    42,    43,   463,    45,    41, 
         47,    40,   300,   193,    91,    63,    61,    62,    63,   176, 
         41,   122,   482,    59,    69,    70,    71,    37,   260,   260, 
         93,    91,    42,   260,   126,    41,    60,    47,    44,    84, 
        303,    41,    44,    91,    44,    40,   304,    41,   123,   123, 
        468,    46,    97,    98,   286,   100,   283,   123,   125,   286, 
        105,   106,    41,    44,   125,    44,    41,    91,   113,    44, 
         91,   125,    97,   300,    41,   176,   364,   122,    59,    58, 
         59,   537,    41,    58,    59,    44,   187,   123,   113,   126, 
        333,    93,    59,   511,   123,   555,   141,    91,   278,    58, 
         59,    40,   502,   503,    44,    44,    44,   287,   340,   340, 
         58,   260,    41,   260,    93,    44,   126,   260,    93,   125, 
        165,   166,    62,   168,    62,   125,    93,   172,    46,    58, 
         59,   176,   233,    40,    93,    41,    91,   364,    44,   286, 
        540,   166,   187,   168,   125,   103,   125,   172,   608,    91, 
        125,   300,    58,    59,    93,    37,    63,   260,   203,    46, 
         42,    43,   187,    45,    93,    47,   125,    59,   123,   331, 
        128,   360,   130,   131,   132,   133,   134,   135,    60,   137, 
         62,   123,   257,   141,    91,   332,   311,    93,   233,    44, 
        312,   257,   237,   436,   257,   260,   125,    46,   378,   157, 
        260,   261,   262,   263,   264,   265,    46,   257,   340,   331, 
        255,    91,    61,    93,   259,    63,   123,   320,    58,   125, 
        312,   257,   267,   373,   374,   257,   286,    46,   417,   332, 
        255,   189,    64,   191,   259,   300,   260,   340,    93,   331, 
        402,   403,   267,    91,   126,   425,   291,   205,   206,   207, 
        208,   209,   210,   211,   212,   213,   214,   215,   216,   217, 
        218,   219,   220,   221,   222,   223,   224,   225,   226,   227, 
        228,   229,   230,   231,   232,   312,   234,    33,   257,    35, 
        402,   403,   257,   260,    40,    46,   346,    43,   246,    45, 
         59,   249,   340,   473,   331,    91,   320,    41,   257,   364, 
         44,    91,   312,   348,    91,   260,   373,   374,   332,   286, 
        402,   403,   260,   261,    58,    59,   340,   275,   260,    41, 
        410,   331,    44,   348,   282,    58,   284,   123,   257,   421, 
        410,   286,   410,   123,   260,    91,    58,    59,   125,    61, 
        410,    63,   410,   420,   286,   330,    91,    41,   452,    93, 
         44,   257,    40,   260,   312,   340,   314,    41,   316,   317, 
         44,   310,   320,   321,    41,   402,   403,    44,   556,   125, 
        126,    93,    40,   561,   300,   333,   334,   332,    46,   286, 
        125,   125,    59,    59,   421,   340,   344,    91,    93,    59, 
        573,   574,   402,   403,    91,    33,    59,    35,   340,    40, 
         41,   141,    40,   125,   362,    43,   364,    45,   453,    93, 
        567,   421,   370,    60,   340,    39,    93,   600,   463,   123, 
        125,   379,   610,    37,    38,    49,    50,    51,    42,    43, 
        312,    45,   310,    47,    61,   414,   415,    37,    38,   414, 
        415,   629,    42,    43,   410,    45,    60,    47,    62,   331, 
         91,    41,   640,    91,    44,   414,   415,   502,   503,    44, 
         60,   419,    62,   203,   260,    41,   567,    44,    44,    91, 
        260,   429,    41,    40,    59,    44,   434,    41,   436,    46, 
         94,   439,   123,    59,   311,   414,   415,   125,   126,   123, 
        286,    58,   537,   310,    94,   540,   286,   237,    40,   544, 
         46,   123,   598,   599,   260,   261,   262,   263,   264,   265, 
        124,   415,   126,   257,    58,    61,    93,    93,   400,   401, 
        402,   403,   567,   624,   482,   483,   126,   623,    41,    91, 
        286,    44,   490,   491,    41,   257,   123,    44,    91,   421, 
         33,    44,    35,   644,   340,    58,    59,    40,   125,   125, 
         43,   291,    45,   123,    40,   123,   260,   313,    44,    44, 
        518,   260,   261,   260,   261,   262,   263,   264,   265,    58, 
        123,    44,   530,    59,    41,   410,   123,    44,   125,   624, 
         93,    44,   286,    93,   340,   341,   342,   343,    41,   286, 
        346,    44,   290,   497,    93,   293,   407,   555,    91,   644, 
        558,    44,   560,   300,   360,   361,   362,   363,    93,   365, 
        366,   367,   125,    63,   370,   371,   372,   373,   374,   260, 
         93,   245,   260,   261,   262,   263,   264,   265,   332,    61, 
        123,   442,   257,   126,    91,   539,   594,   123,   260,   125, 
        125,    91,   300,   301,   302,   286,   402,   403,   286,   346, 
        608,    37,   125,    33,   257,    35,    42,    43,   260,    45, 
         40,    47,   566,    43,   286,    45,    91,   300,   301,   302, 
        414,   415,   630,   123,   430,   313,    13,    14,   300,   301, 
        302,   257,   404,   405,   406,   407,   408,    49,    50,    51, 
        344,   345,   414,   415,   416,   417,   418,   419,   312,   373, 
        374,   257,   340,   341,   342,   343,    41,   260,   346,   340, 
        332,    91,   312,   260,   105,   106,    44,   331,    41,    44, 
         44,   123,   360,   361,   362,   363,   260,   365,   366,   367, 
        125,   331,   370,   286,   372,   373,   374,    40,   123,   286, 
        126,   123,    61,    58,   257,   556,   126,   300,   301,   302, 
        561,    40,    37,    38,    58,    40,    41,    42,    43,    44, 
         45,    40,    47,    41,   402,   403,    44,   260,   261,   262, 
        263,   264,   265,    58,    59,    60,    61,    62,    63,   332, 
         91,    59,   260,   260,   123,   332,   400,   401,   402,   403, 
         41,   125,   430,   286,    40,    93,    41,   411,   412,   610, 
        400,   401,   402,   403,    40,    91,    91,   421,    93,    94, 
        260,   411,   412,   125,    41,    93,    40,    44,   629,    61, 
        313,   421,    40,   280,   281,   282,   283,   284,   285,   640, 
        287,    58,    59,    91,    41,   260,   286,   125,   123,   124, 
        125,   126,   123,   300,   301,   302,   303,   340,   341,   342, 
        343,   125,   125,   346,    40,   280,   281,   282,   283,   284, 
        285,   286,   287,    40,   340,    40,    93,   360,   361,   362, 
        363,    59,   365,   366,   367,    59,    40,   370,   303,   372, 
        260,   261,   262,   263,   264,   265,    40,    40,   340,    91, 
         37,    38,    59,    40,    41,    42,    43,    44,    45,   260, 
         47,   414,   415,    41,    41,    61,   286,   332,    59,   402, 
        403,    58,    59,   361,    61,    62,    63,    37,    38,   340, 
         40,    41,    42,    43,    44,    45,    46,    47,    61,    59, 
         41,    44,    93,   313,   125,    59,   123,   430,    58,    59, 
         60,    61,    62,    63,    91,   125,    93,    94,    40,   260, 
        261,   262,   263,   264,   265,    44,   364,   123,   260,   340, 
        340,   341,   342,   343,   321,    41,   346,    41,   340,    41, 
        125,    91,   257,    93,    94,   260,   123,   124,   125,   126, 
        360,   361,   362,   363,   123,   365,   366,   367,    59,   125, 
        370,   125,   372,   371,   280,   281,   282,   283,   284,   285, 
         40,   287,   123,    59,   124,   125,   126,   125,    37,    38, 
        125,    41,    41,    42,    43,    44,    45,   303,    47,    58, 
        125,    41,   402,   403,   123,   310,   311,   312,    91,    58, 
         59,    60,    61,    62,    63,   320,   123,   125,   123,    93, 
         41,    41,   257,   125,   257,   330,   331,   332,   334,    58, 
        430,    44,   125,    91,    91,   340,    91,    41,   125,    41, 
         44,    93,    44,   125,    93,    94,   280,   281,   282,   283, 
        284,   285,   123,   287,    58,    59,    58,    59,   280,   281, 
        282,   283,   284,   285,    59,   287,    59,    41,    41,   303, 
         41,    44,    59,    44,    41,   124,   125,    41,   300,   301, 
        302,   364,   304,    41,    41,    58,    59,    58,    59,    93, 
        257,    93,   125,   260,    41,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,     6,   410,   411,   412,   125,   414, 
        415,   416,   417,   418,   419,     7,   421,   257,    77,   102, 
         93,   125,    93,   125,   508,    37,    38,   359,   503,    41, 
         42,    43,    44,    45,   544,    47,    60,    59,    41,   109, 
        519,    44,   531,   310,   311,   312,    58,    59,    60,    61, 
         62,    63,   125,   320,   125,    58,    59,   616,   203,    41, 
        580,   580,    44,   330,   331,   332,   365,   291,   187,   187, 
        248,   244,   312,   340,   172,    41,    58,    59,    44,    91, 
        168,    93,    94,    31,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,   331,    58,    59,    -1,    -1,    91,   280,   281,   282, 
        283,   284,   285,    -1,   287,    -1,    -1,    -1,   257,    -1, 
         -1,    93,   124,   125,   126,    -1,    -1,   300,   301,   302, 
        303,    -1,   125,    -1,    -1,    -1,    -1,    93,    -1,    -1, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,   125,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   257,   421,   257,    -1,    -1,    -1,   125, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,    -1,    -1,   257,    -1,   257,    -1,    -1,    -1, 
         37,    38,    -1,    40,    41,    42,    43,    44,    45,    46, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    37,    38,    -1, 
         -1,    41,    42,    43,    44,    45,    46,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    91,   257,    93,    94,    -1,    -1, 
         -1,   400,   401,    -1,   257,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    91,   421,    93,    94,   257,    -1,   124,   125,   126, 
         -1,    -1,    -1,    -1,    -1,   280,   281,   282,   283,   284, 
        285,   257,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,   124,   125,   126,    -1,   303,    -1, 
        414,   415,   414,   415,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    46,    47, 
         -1,   414,   415,   414,   415,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    -1,    91,    -1,    93,    94,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,   410,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,   420,   421, 
        257,   414,    93,    94,    -1,    -1,   124,   125,   126,    -1, 
         -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   414,   415,    -1,    -1,    91,   257,    58,    59, 
         -1,    -1,    -1,   124,   125,   126,    -1,    -1,   414,   415, 
         -1,    -1,    -1,    37,    38,   282,    -1,    41,    42,    43, 
         44,    45,    91,    47,    -1,   312,    -1,    -1,    -1,    -1, 
        125,    -1,    -1,    93,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   125,    -1,   334,    -1,    93, 
         94,   331,    -1,    -1,    -1,    -1,    -1,   344,    -1,    -1, 
         -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45, 
         46,    47,    -1,    -1,    -1,   362,    -1,   364,    -1,    -1, 
        124,   125,   126,    -1,    60,    61,    62,    63,    -1,   257, 
         -1,    -1,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,    -1,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,   420,   421,    91,   257,    -1,    94,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        420,   421,   429,    -1,   312,    -1,    -1,   434,   124,    -1, 
        126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,   280,   281,   282,   283,   284, 
        285,   312,   287,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   303,   330, 
        331,   280,   281,   282,   283,   284,   285,    -1,   287,   340, 
         -1,    37,    38,    -1,    -1,    41,    42,    43,    44,    45, 
         -1,    47,    -1,   257,   303,    -1,    -1,    -1,    -1,   334, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,   334,   414,   415,   416,   417, 
        418,   419,   420,   421,    -1,    -1,    -1,    93,    94,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,   312,    -1, 
        411,   412,    91,   414,   415,   416,   417,   418,   419,    -1, 
        421,   257,    -1,    -1,    -1,    -1,    -1,   331,   124,   125, 
        126,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    37,    38,    -1,    40,    -1,    42,    43,    44, 
         45,    46,    47,    -1,   414,   415,   312,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63,    93, 
         94,    -1,    -1,    -1,    -1,   331,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    91,   421,    93,    94, 
        124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    37,    38,    -1,    -1,    41,    42,    43,    44, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
         -1,   126,    -1,    58,    59,    60,    61,    62,    63,    -1, 
         -1,   257,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   420,   421,    37,    38,    93,    94, 
         -1,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         -1,   280,   281,   282,   283,   284,   285,    -1,   287,    60, 
         61,    62,    63,    -1,    -1,    -1,   312,    -1,    -1,   124, 
        125,    -1,    -1,    -1,   303,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,    -1, 
         91,    -1,    93,    94,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,   257,    47,   334,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         93,    94,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,   312,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   257,    -1,    -1,    -1,   331,    -1,    -1,    -1, 
         37,    38,    -1,    -1,    41,    42,    43,    44,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    58,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   312,    -1,    -1, 
        414,   415,   416,   417,   418,   419,    93,    94,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,   420,   421,   124,   125,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   312,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,    -1,   312, 
         -1,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    60,    -1,    62,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,   410, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,   420, 
        421,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
        257,    41,    42,    43,    44,    45,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         60,    61,    62,    63,    -1,    -1,    -1,   400,   401,    -1, 
        126,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,    -1,    -1,    93,    94,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41, 
         42,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    58,    59,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,    -1,    47, 
         -1,    93,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,   367,    -1,   400,   401,    -1,    -1,   404,   405,   406, 
        407,   408,   124,   125,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1, 
         -1,    41,    42,    -1,    44,    -1,    -1,    47,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   124,   125,    58,    59, 
         60,    61,    62,    63,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    -1,   312,   257,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    37,    38,    93,    94,   331,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   477,    58,    -1,    60,    61,    62,    63,   484,    -1, 
         93,    94,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    94,    -1, 
         -1,   124,   125,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   411,   412,    -1,   124,    -1, 
        126,   547,    -1,    -1,    -1,   421,    -1,    -1,   554,   257, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
        596,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         37,   421,    -1,    -1,   312,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,   625, 
         -1,    -1,    -1,    60,    -1,    62,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   643,    -1,    -1, 
         -1,    -1,   648,    -1,   257,    -1,    -1,   653,   400,   401, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126, 
         -1,   331,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    37,    38,    -1,   312,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         94,   421,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,    -1,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
        124,    -1,   126,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    37,    38,    -1,    -1, 
         -1,    42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    59,    60, 
         61,    62,    63,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,   312,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    60,    61,    62,    63, 
         37,    38,    -1,    94,   331,    42,    43,    -1,    45,    -1, 
         47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    59,    60,    61,    62,    63,    -1,    -1,    -1, 
         94,    -1,    -1,   124,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1, 
        124,    -1,   126,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,   400,   401,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   411,   412,    -1,   124,    -1,   126, 
         -1,    -1,    -1,    -1,   421,    -1,    -1,    37,    38,    93, 
         94,    41,    42,    43,    -1,    45,    -1,    47,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         60,    61,    62,    63,    -1,    -1,    -1,   331,    -1,    -1, 
        124,   125,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    94,    -1,    60,    61,    62,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,    -1,   126,    -1,    -1,    -1, 
         94,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,    -1, 
        124,   312,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        331,    -1,    -1,    -1,    -1,    37,    38,    -1,   312,    41, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,    -1,   331,    60,    61, 
         62,    63,    37,    38,    -1,   312,    41,    42,    43,    -1, 
         45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   331,    60,    61,    62,    63,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,   402,   403,   404,   405,   406,   407,   408,    -1,    -1, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    94, 
        421,    -1,   124,    -1,   126,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,   421,    -1,   124, 
         -1,   126,    -1,   400,   401,   402,   403,   404,   405,   406, 
        407,   408,   312,    -1,   411,   412,    -1,   414,   415,   416, 
        417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1, 
         -1,   331,    -1,    37,    38,    -1,    -1,    41,    42,    43, 
         -1,    45,    -1,    47,    -1,    -1,    -1,    -1,   312,    -1, 
        404,   405,   406,   407,   408,    -1,    60,    61,    62,    63, 
        414,   415,   416,   417,   418,   419,    -1,   331,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         94,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
        400,   401,   402,   403,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        124,   421,   126,    -1,    -1,    -1,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    41,   411,   412,    44, 
        414,   415,   416,   417,   418,   419,   124,   421,   126,    -1, 
        312,    -1,    -1,    58,    59,    -1,    61,    -1,    63,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,    -1,    -1,    37,    38,    -1,   312,    -1,    42, 
         43,    -1,    45,    -1,    47,    -1,    -1,    -1,    93,    94, 
         -1,    -1,    -1,    -1,    -1,    58,   331,    60,    61,    62, 
         63,    37,    38,    -1,    -1,    -1,    42,    43,    -1,    45, 
         -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124, 
        125,    -1,    -1,    -1,    60,    61,    62,    63,    -1,    -1, 
         -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,   414,   415,   416,   417,   418,   419,    94,   421, 
         -1,   124,    -1,   126,    -1,   400,   401,   402,   403,   404, 
        405,   406,   407,   408,    -1,    -1,   411,   412,    -1,   414, 
        415,   416,   417,   418,   419,    -1,   421,    -1,   124,    41, 
        126,    -1,    44,    -1,    -1,    -1,    -1,    -1,   312,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    61, 
         -1,    63,    -1,    -1,    -1,    -1,    -1,   331,    -1,    37, 
         38,    -1,    -1,    -1,    42,    43,    -1,    45,    -1,    47, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    93,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,   257,   331,    -1,    37,    38,    -1,    -1,    -1, 
         42,    43,    -1,    45,    -1,    47,    -1,    -1,    -1,    -1, 
         -1,    -1,   124,   125,    -1,    -1,    94,    -1,    60,    61, 
         62,    63,    -1,    -1,    -1,    -1,   400,   401,   402,   403, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,   124,   421,   126,    -1, 
         -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,   124,   421,   126,    -1,    -1,    -1,    -1,   312, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37, 
         38,    -1,    -1,    41,    42,    43,    44,    45,   331,    47, 
         -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1, 
         58,    59,    60,    61,    62,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   331,    -1,    -1,    -1,   404, 
        405,   406,   407,   408,    -1,   257,    -1,    -1,    -1,   414, 
        415,   416,   417,   418,   419,    93,    94,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401,   402, 
        403,   404,   405,   406,   407,   408,   124,   125,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,   421,    -1, 
         -1,    -1,    -1,    -1,   400,   401,   402,   403,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,   421,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   331,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   331, 
         -1,    -1,   404,   405,   406,   407,   408,    -1,    -1,    -1, 
         -1,    -1,   414,   415,   416,   417,   418,   419,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   257, 
         -1,    -1,   400,   401,   402,   403,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,    -1,   415,   416,   417, 
        418,   419,    -1,   421,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,   401, 
        402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411, 
        412,    -1,    -1,    -1,   416,   417,   418,   419,    -1,   421, 
         -1,    -1,    -1,    -1,    37,    38,    -1,    -1,    41,    42, 
         43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    58,    59,    60,    61,    62, 
         63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    -1, 
         41,    42,    43,    44,    45,    -1,    47,    -1,    -1,    -1, 
         93,    94,    -1,    -1,    -1,    -1,    -1,    58,    59,    60, 
         61,    62,    63,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407, 
        408,   124,   125,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    93,    94,    38,    -1,    -1,    41,    -1,    43, 
         44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    60,    61,    62,    63, 
         -1,    -1,    38,   124,   125,    41,    -1,    43,    44,    45, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    58,    59,    60,    61,    62,    63,    38,    93, 
         94,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    58,    59, 
         44,    61,    -1,    63,    -1,    -1,    -1,    93,    94,    -1, 
        124,   125,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         38,    -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    -1,   124,   125, 
         58,    59,    -1,    61,   257,    63,    -1,    -1,    38,    93, 
         94,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    93,    94,    -1,    -1,    -1, 
        124,   125,    -1,    -1,    -1,    -1,   257,    -1,    -1,    38, 
         -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    -1,   124,   125,    -1,    58, 
         59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         38,    -1,    -1,    41,   124,   125,    44,    -1,    -1,    -1, 
         -1,    -1,    -1,   257,    93,    94,    -1,    -1,    -1,    -1, 
         58,    59,    -1,    61,    -1,    63,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   257,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    93,    94,   400,   401,    -1, 
         -1,   404,   405,   406,   407,   408,    -1,   257,   411,   412, 
         -1,   414,   415,   416,   417,   418,   419,    -1,    -1,    -1, 
         -1,    -1,    -1,   257,    -1,    -1,   124,   125,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   400, 
        401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   257, 
        411,   412,    -1,   414,   415,   416,   417,   418,   419,    -1, 
         -1,    -1,    -1,    -1,    38,    -1,    -1,    41,    -1,    -1, 
         44,    -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1, 
         -1,    -1,    -1,    -1,    58,    59,    -1,    61,    -1,    63, 
         -1,    -1,    -1,    -1,    -1,    -1,   400,   401,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,   257,    93, 
         94,    -1,    -1,    -1,   400,   401,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,    -1,    -1,    -1,    -1,    -1,    -1, 
        124,   125,    -1,    -1,   404,   405,   406,   407,   408,   257, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   404,   405,   406,   407,   408,    -1, 
         -1,   411,   412,    -1,   414,   415,   416,   417,   418,   419, 
         41,    -1,    -1,    44,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1, 
         61,    -1,    63,    -1,    -1,   404,   405,   406,   407,   408, 
         -1,    -1,   411,   412,    -1,   414,   415,   416,   417,   418, 
        419,    -1,    -1,   257,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    93,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   404,   405,   406,   407, 
        408,    -1,    -1,   411,   412,    -1,   414,   415,   416,   417, 
        418,   419,    38,    -1,   125,    41,    -1,    -1,    44,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    -1, 
         -1,    41,    58,    59,    44,    61,    -1,    63,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59, 
         -1,    61,    -1,    63,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    93,    94,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    93,    94,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   124,   125, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   124,   125,    -1,    -1,    -1,    -1, 
        404,   405,   406,   407,   408,    -1,    -1,   411,   412,    -1, 
        414,   415,   416,   417,   418,   419,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   257,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    33,    -1,    35,    -1,    -1,    -1,    -1, 
         40,    -1,    33,    43,    35,    45,    -1,    -1,    -1,    40, 
         -1,    -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1, 
         60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         33,    62,    35,    -1,    -1,    -1,    -1,    40,    -1,    -1, 
         43,   257,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    91,    -1,    -1,    -1,    58,    -1,   257,    -1,    -1, 
         91,    33,    -1,    35,    -1,    -1,    -1,    -1,    40,    -1, 
         -1,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    91,    -1, 
         -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   404,   405,   406,   407,   408,    -1,    -1, 
         -1,    -1,    -1,   414,   415,   416,   417,   418,   419,    91, 
         -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   123,    -1,    -1,   126,    33,    -1,    35,    -1,    -1, 
         -1,    -1,    40,    -1,    -1,    43,    -1,    45,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,   405, 
        406,   407,   408,    -1,    -1,   411,   412,    -1,   414,   415, 
        416,   417,   418,   419,   404,   405,   406,   407,   408,    -1, 
         -1,    -1,    -1,    91,   414,   415,   416,   417,   418,   419, 
        260,   261,   262,   263,   264,   265,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   286,    -1,   126,    -1, 
         -1,    -1,    -1,    -1,    -1,   286,    -1,   260,   261,   262, 
        263,   264,   265,    -1,    -1,    -1,    -1,    33,    -1,    35, 
         -1,    -1,    -1,   313,    40,    -1,    -1,    43,    -1,    45, 
         -1,    -1,   313,   286,    -1,    -1,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    61,    -1,    -1,    -1,    -1, 
        340,    33,    -1,    35,    -1,    -1,   346,    -1,    40,   340, 
        313,    43,    -1,    45,   286,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    91,    -1,   367,    -1,    61, 
         -1,    -1,    33,    -1,    35,    -1,   367,   340,    -1,    40, 
         -1,   313,    43,   346,    45,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91, 
        126,   401,   402,   403,   367,    -1,    -1,    -1,   340,   400, 
         -1,   402,   403,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   260,   261,   262,   263,   264,   265,    -1,    -1, 
         91,    -1,    -1,    -1,   126,   367,    -1,    -1,    -1,   402, 
        403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,   123,    -1,    -1,   126,    33,    -1,    35,    -1, 
        402,   403,    -1,    40,    -1,   313,    43,    -1,    45,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    35,    -1, 
         -1,    -1,   330,    40,    -1,    -1,    43,    -1,    45,    -1, 
         -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    91,    -1,    93,    -1,    -1,   367, 
         -1,    -1,    -1,    -1,   260,   261,   262,   263,   264,   265, 
         -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   126, 
        286,    -1,    -1,    -1,   402,   403,    -1,    -1,   260,   261, 
        262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1,   126, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1, 
         -1,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1,   260, 
        261,   262,   263,   264,   265,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1, 
        346,   313,    -1,    -1,    -1,   286,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1, 
         -1,    -1,   313,    -1,   346,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   367,   402,   403,    -1,   340, 
         -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   260,   261,   262,   263,   264,   265,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   367,    -1,    -1,    -1, 
        402,   403,    -1,   260,   261,   262,   263,   264,   265,   286, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   286, 
         -1,   402,   403,    -1,    -1,    -1,   313,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,   340,    -1,    -1,    -1,    -1,    -1,   346, 
        367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
        367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1, 
         -1,    -1,    -1,    -1,    -1,   402,   403, 
    );
    protected static $yyFinal= 2;
    protected static $yyName= array(    
      'end-of-file', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "'!'", NULL, "'#'", NULL, "'%'", "'&'", 
      NULL, "'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, "':'", "';'", "'<'", "'='", "'>'", 
      "'?'", "'@'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, "'['", NULL, "']'", "'^'", NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, "'{'", "'|'", "'}'", "'~'", NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_ARROW', NULL, NULL, 'T_WORD', 'T_STRING', 'T_NUMBER', 'T_DECIMAL', 
      'T_HEX', 'T_OCTAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, 'T_PUBLIC', 'T_PRIVATE', 'T_PROTECTED', 'T_STATIC', 
      'T_FINAL', 'T_ABSTRACT', 'T_NATIVE', 'T_INLINE', NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'T_CLASS', 'T_INTERFACE', 'T_ENUM', 
      'T_PACKAGE', 'T_IMPORT', NULL, NULL, NULL, NULL, NULL, 'T_EXTENDS', 
      'T_IMPLEMENTS', 'T_INSTANCEOF', 'T_CLONE', NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_OPERATOR', 'T_THROWS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_ELLIPSIS', 'T_AS', 'T_THIS', NULL, 'T_CONST', NULL, NULL, NULL, NULL, NULL, 
      'T_VARIABLE', 'T_RETURN', 'T_TRY', 'T_THROW', 'T_CATCH', 'T_FINALLY', 
      'T_NEW', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, 'T_FOR', 'T_WHILE', 'T_DO', 'T_FOREACH', 'T_IN', 'T_BREAK', 
      'T_CONTINUE', 'T_YIELD', NULL, NULL, 'T_IF', 'T_ELSE', 'T_SWITCH', 'T_CASE', 
      'T_DEFAULT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_GE', 'T_SE', 'T_INC', 'T_DEC', 'T_ADD_EQUAL', 'T_SUB_EQUAL', 
      'T_MUL_EQUAL', 'T_DIV_EQUAL', 'T_MOD_EQUAL', NULL, 'T_DOUBLE_COLON', 
      'T_EQUALS', 'T_NOT_EQUALS', 'T_DOUBLE_ARROW', 'T_BOOLEAN_OR', 
      'T_BOOLEAN_AND', 'T_CONCAT_EQUAL', 'T_OR_EQUAL', 'T_AND_EQUAL', 
      'T_XOR_EQUAL', 'T_NAV', 'T_EXP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 
      'T_WITH', 
    );

  protected static $yyTableCount= 0, $yyNameCount= 0;

  static function __static() {
    self::$yyTableCount= sizeof(self::$yyTable);
    self::$yyNameCount= sizeof(self::$yyName);
  }

  /**
   * Retrieves name of a given token
   *
   * @param   int token
   * @return  string name
   */
  protected function yyname($token) {
    return isset(self::$yyName[$token]) ? self::$yyName[$token] : '<unknown>';
  }

  /**
   * Helper method for yyexpecting
   *
   * @param   int n
   * @return  string[] list of token names.
   */
  protected function yysearchtab($n) {
    if (0 == $n) return array();

    for (
      $result= array(), $token= $n < 0 ? -$n : 0; 
      $token < self::$yyNameCount && $n+ $token < self::$yyTableCount; 
      $token++
    ) {
      if (@self::$yyCheck[$n+ $token] == $token && !isset($result[$token])) {
        $result[$token]= self::$yyName[$token];
      }
    }
    return array_filter(array_values($result));
  }

  /**
   * Computes list of expected tokens on error by tracing the tables.
   *
   * @param   int state for which to compute the list.
   * @return  string[] list of token names.
   */
  protected function yyexpecting($state) {
    return array_merge($this->yysearchtab(self::$yySindex[$state], self::$yyRindex[$state]));
  }

  /**
   * Parser main method. Maintains a state and a value stack, 
   * currently with fixed maximum size.
   *
   * @param   text.parser.generic.AbstractLexer lexer
.  * @return  mixed result of the last reduction, if any.
   */
  public function yyparse($yyLex) {
    $yyVal= null;
    $yyStates= $yyVals= array();
    $yyToken= -1;
    $yyState= $yyErrorFlag= 0;

    while (1) {
      for ($yyTop= 0; ; $yyTop++) {
        $yyStates[$yyTop]= $yyState;
        $yyVals[$yyTop]= $yyVal;

        for (;;) {
          if (($yyN= self::$yyDefRed[$yyState]) == 0) {

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            if (
              ($yyN= self::$yySindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyState= self::$yyTable[$yyN];       // shift to yyN
              $yyVal= $yyLex->value;
              $yyToken= -1;
              $yyErrorFlag > 0 && $yyErrorFlag--;
              continue 2;
            }
      
            if (
              ($yyN= self::$yyRindex[$yyState]) != 0 && 
              ($yyN+= $yyToken) >= 0 && 
              $yyN < self::$yyTableCount && 
              self::$yyCheck[$yyN] == $yyToken
            ) {
              $yyN= self::$yyTable[$yyN];           // reduce (yyN)
            } else {
              switch ($yyErrorFlag) {
                case 0: return $this->error(
                  E_PARSE, 
                  sprintf(
                    'Syntax error at %s, line %d (offset %d): Unexpected %s',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1],
                    $this->yyName($yyToken)
                  ), 
                  $this->yyExpecting($yyState)
                );
                
                case 1: case 2: {
                  $yyErrorFlag= 3;
                  do { 
                    if (
                      ($yyN= @self::$yySindex[$yyStates[$yyTop]]) != 0 && 
                      ($yyN+= TOKEN_YY_ERRORCODE) >= 0 && 
                      $yyN < self::$yyTableCount && 
                      self::$yyCheck[$yyN] == TOKEN_YY_ERRORCODE
                    ) {
                      $yyState= self::$yyTable[$yyN];
                      $yyVal= $yyLex->value;
                      break 3;
                    }
                  } while ($yyTop-- >= 0);

                  throw new \text\parser\generic\ParseException(sprintf(
                    'Irrecoverable syntax error at %s, line %d (offset %d)',
                    $yyLex->fileName,
                    $yyLex->position[0],
                    $yyLex->position[1]
                  ));
                }

                case 3: {
                  if (0 == $yyToken) {
                    throw new \text\parser\generic\ParseException(sprintf(
                      'Irrecoverable syntax error at end-of-file at %s, line %d (offset %d)',
                      $yyLex->fileName,
                      $yyLex->position[0],
                      $yyLex->position[1]
                    ));
                  }

                  $yyToken = -1;
                  break 1;
                }
              }
            }
          }

          $yyV= $yyTop+ 1 - self::$yyLen[$yyN];
          $yyVal= $yyV > $yyTop ? null : $yyVals[$yyV];

          // Actions
          switch ($yyN) {

    case 1:  #line 189 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ParseTree();
      $yyVal->origin= $yyLex->fileName;
      $yyVal->package= $yyVals[-2+$yyTop];
      $yyVal->imports= $yyVals[-1+$yyTop];
      $yyVal->declaration= $yyVals[0+$yyTop];
    } break;

    case 3:  #line 201 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new PackageNode()); } break;

    case 4:  #line 201 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->name= $yyVals[-1+$yyTop];
    } break;

    case 7:  #line 212 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 8:  #line 213 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 9:  #line 217 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 10:  #line 220 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new NativeImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
    } break;

    case 11:  #line 223 "src/main/jay/grammars/xp.jay"
    {
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 12:  #line 226 "src/main/jay/grammars/xp.jay"
    {
    $this->error(E_WARNING, 'Deprecated static import form used', array($yyVals[-3+$yyTop].'::'.$yyVals[-1+$yyTop]));
    $yyVal= $yyLex->create(new StaticImportNode(array('name' => $yyVals[-3+$yyTop].'.'.$yyVals[-1+$yyTop])));
  } break;

    case 16:  #line 239 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 18:  #line 244 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 19:  #line 245 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-2+$yyTop].'.'.$yyVals[0+$yyTop]; } break;

    case 20:  #line 251 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ClassNode(), TRUE); } break;

    case 21:  #line 251 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 22:  #line 260 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumNode(), TRUE); } break;

    case 23:  #line 260 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-7+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-7+$yyTop]->name= $yyVals[-5+$yyTop];
      $yyVals[-7+$yyTop]->parent= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->implements= $yyVals[-3+$yyTop];
      $yyVals[-7+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-7+$yyTop];
    } break;

    case 24:  #line 269 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InterfaceNode(), TRUE); } break;

    case 25:  #line 269 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->modifiers= $yyVals[-7+$yyTop][0];
      $yyVals[-6+$yyTop]->annotations= $yyVals[-7+$yyTop][1];
      $yyVals[-6+$yyTop]->name= $yyVals[-4+$yyTop];
      $yyVals[-6+$yyTop]->parents= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->setBody($yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-6+$yyTop];
    } break;

    case 26:  #line 280 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 27:  #line 281 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 28:  #line 285 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 29:  #line 286 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 30:  #line 290 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 31:  #line 291 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 32:  #line 295 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 33:  #line 296 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 34:  #line 300 "src/main/jay/grammars/xp.jay"
    { $yyVal[]= $yyVals[0+$yyTop]; } break;

    case 35:  #line 301 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 36:  #line 305 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 37:  #line 306 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 38:  #line 307 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StaticInitializerNode($yyVals[-1+$yyTop])); } break;

    case 39:  #line 311 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 40:  #line 312 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 41:  #line 313 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 42:  #line 317 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 43:  #line 318 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 44:  #line 322 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 45:  #line 322 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-2+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 46:  #line 325 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new EnumMemberNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 47:  #line 325 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->value= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
    } break;

    case 48:  #line 335 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new FieldNode());
      $yyVal->modifiers= $yyVals[-4+$yyTop][0];
      $yyVal->annotations= $yyVals[-4+$yyTop][1];
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->name= $yyVals[-2+$yyTop];
      $yyVal->initialization= $yyVals[-1+$yyTop];
    } break;

    case 49:  #line 342 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->modifiers= $yyVals[-5+$yyTop][0];
      $yyVals[-3+$yyTop]->annotations= $yyVals[-5+$yyTop][1];
      $yyVals[-3+$yyTop]->type= $yyVals[-4+$yyTop];
      $yyVals[-3+$yyTop]->handlers= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 50:  #line 349 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ClassConstantNode($yyVals[-3+$yyTop], new TypeName($yyVals[-4+$yyTop]), $yyVals[-1+$yyTop]));
    } break;

    case 51:  #line 355 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new PropertyNode(array('name' => $yyVals[0+$yyTop]))); } break;

    case 52:  #line 356 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IndexerNode(array('parameter' => $yyVals[-1+$yyTop]))); } break;

    case 53:  #line 360 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 54:  #line 361 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 55:  #line 365 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]=> NULL); } break;

    case 56:  #line 366 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-3+$yyTop] => $yyVals[-1+$yyTop]); } break;

    case 57:  #line 370 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 58:  #line 371 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 59:  #line 377 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 60:  #line 377 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-7+$yyTop];
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 61:  #line 388 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new MethodNode(), TRUE); } break;

    case 62:  #line 388 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-8+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-8+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= new TypeName('self');
      $yyVals[-5+$yyTop]->name= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop][0];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= array_merge((array)$yyVals[0+$yyTop], array(new ReturnNode(new VariableNode($yyVals[-7+$yyTop]))));
      $yyVals[-5+$yyTop]->extension= $yyVals[-3+$yyTop][1];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 63:  #line 399 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 64:  #line 399 "src/main/jay/grammars/xp.jay"
    {
      /* Assert only certain methods are allowed here. This could be done by making*/
      /* __construct and friends keywords - or this way!*/
      switch ($yyVals[-6+$yyTop]) {
        case '__construct': $yyVal= $yyLex->create(new ConstructorNode(), TRUE); break;
        default: $this->error(
          E_ERROR, 
          sprintf(
            'Method "%s" requires a return type at %s, line %d (offset %d)',
            $yyVals[-6+$yyTop],
            $yyLex->fileName,
            $p[0],
            $p[1]
          ), 
          array('__construct')
        );
        $yyVal= $yyLex->create(new MethodNode(), TRUE);
      }
      $yyVal->position= $p;
      $yyVal->modifiers= $yyVals[-7+$yyTop][0];
      $yyVal->annotations= $yyVals[-7+$yyTop][1];
      $yyVal->parameters= $yyVals[-3+$yyTop];
      $yyVal->throws= $yyVals[-1+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 65:  #line 424 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new OperatorNode(), TRUE); } break;

    case 66:  #line 424 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->modifiers= $yyVals[-9+$yyTop][0];
      $yyVals[-5+$yyTop]->annotations= $yyVals[-9+$yyTop][1];
      $yyVals[-5+$yyTop]->returns= $yyVals[-8+$yyTop];
      $yyVals[-5+$yyTop]->symbol= $yyVals[-6+$yyTop];
      $yyVals[-5+$yyTop]->parameters= $yyVals[-3+$yyTop];
      $yyVals[-5+$yyTop]->throws= $yyVals[-1+$yyTop];
      $yyVals[-5+$yyTop]->body= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-5+$yyTop];
    } break;

    case 67:  #line 437 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[-2+$yyTop]); } break;

    case 68:  #line 438 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 69:  #line 442 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 70:  #line 443 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 71:  #line 447 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyVals[0+$yyTop];
    } break;

    case 72:  #line 450 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop] && $yyVals[-3+$yyTop]->parameters= array('default' => $yyVals[-1+$yyTop]);
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 73:  #line 454 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->parameters= $yyVals[-1+$yyTop];
      $yyVal= $yyVals[-3+$yyTop];
    } break;

    case 74:  #line 461 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 75:  #line 466 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->target= '$'.$yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 76:  #line 471 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AnnotationNode()); 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 77:  #line 478 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 78:  #line 479 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 79:  #line 483 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 80:  #line 484 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-2+$yyTop] => $yyVals[0+$yyTop]); } break;

    case 82:  #line 489 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceCreationNode());
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->parameters= $yyVals[-1+$yyTop];
      $yyVal->body= NULL;
    } break;

    case 83:  #line 495 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ConstantAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 84:  #line 498 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new StaticMemberAccessNode(new TypeName($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 85:  #line 504 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 86:  #line 505 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 87:  #line 506 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyLex->create(new ReturnNode($yyVals[-1+$yyTop]))); } break;

    case 88:  #line 510 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(NULL, NULL); } break;

    case 89:  #line 511 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop][0]['type']); } break;

    case 90:  #line 512 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], NULL); } break;

    case 91:  #line 516 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 92:  #line 517 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 93:  #line 521 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 94:  #line 522 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 95:  #line 526 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 96:  #line 527 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[0+$yyTop], 'vararg' => TRUE), $yyVals[-2+$yyTop]); } break;

    case 97:  #line 528 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('assign' => $yyVals[-1+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 98:  #line 529 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[-1+$yyTop], 'type' => TypeName::$VAR, 'check' => FALSE); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 99:  #line 533 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[0+$yyTop], 'check' => TRUE); } break;

    case 100:  #line 534 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('type' => $yyVals[-1+$yyTop], 'check' => FALSE); } break;

    case 101:  #line 538 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 102:  #line 539 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 109:  #line 558 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 111:  #line 563 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 112:  #line 564 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 113:  #line 568 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ReturnNode()); } break;

    case 114:  #line 568 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal->expression= $yyVals[-1+$yyTop];
    } break;

    case 115:  #line 571 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new IfNode()); } break;

    case 116:  #line 571 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-6+$yyTop]->condition= $yyVals[-3+$yyTop];
      $yyVals[-6+$yyTop]->statements= $yyVals[-1+$yyTop];
      $yyVals[-6+$yyTop]->otherwise= $yyVals[0+$yyTop];
    } break;

    case 117:  #line 576 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForNode()); } break;

    case 118:  #line 576 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[-6+$yyTop]) {
        $yyVals[-9+$yyTop]->initialization= $yyVals[-6+$yyTop];
      }
      if ($yyVals[-2+$yyTop]) {
        $yyVals[-9+$yyTop]->loop= $yyVals[-2+$yyTop];
      }
      $yyVals[-9+$yyTop]->condition= $yyVals[-4+$yyTop];
      $yyVals[-9+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 119:  #line 586 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ForeachNode()); } break;

    case 120:  #line 586 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->assignment= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 121:  #line 591 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new WhileNode()); } break;

    case 122:  #line 591 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-5+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-5+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 123:  #line 595 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DoNode()); } break;

    case 124:  #line 595 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-7+$yyTop]->statements= $yyVals[-5+$yyTop];
    } break;

    case 125:  #line 599 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new SwitchNode()); } break;

    case 126:  #line 599 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-7+$yyTop]->expression= $yyVals[-4+$yyTop];
      $yyVals[-7+$yyTop]->cases= $yyVals[-1+$yyTop];
    } break;

    case 127:  #line 603 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new BreakNode()); } break;

    case 129:  #line 604 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ContinueNode()); } break;

    case 131:  #line 605 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ThrowNode()); } break;

    case 132:  #line 605 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-3+$yyTop]->expression= $yyVals[-1+$yyTop];
    } break;

    case 133:  #line 608 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new TryNode()); } break;

    case 134:  #line 608 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->statements= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->handling= $yyVals[0+$yyTop];
      $yyVal= $yyVals[-4+$yyTop]; 
    } break;

    case 135:  #line 613 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArmNode($yyVals[-4+$yyTop]['i'], $yyVals[-4+$yyTop]['v'], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 136:  #line 616 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new WithNode($yyVals[-4+$yyTop], $yyVals[-1+$yyTop] ? $yyVals[-1+$yyTop] : array()));
    } break;

    case 138:  #line 623 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 139:  #line 624 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge_recursive($yyVals[-2+$yyTop], $yyVals[0+$yyTop]); } break;

    case 140:  #line 628 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array('i' => array(), 'v' => array(new VariableNode($yyVals[0+$yyTop])));
    } break;

    case 141:  #line 631 "src/main/jay/grammars/xp.jay"
    {
      $v= new VariableNode($yyVals[-2+$yyTop]);
      $yyVal= array('i' => array($yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => $v, 'expression' => $yyVals[0+$yyTop])))), 'v' => array($v)); 
    } break;

    case 142:  #line 638 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 143:  #line 639 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 144:  #line 643 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new AssignmentNode(array('op' => '=', 'variable' => new VariableNode($yyVals[-2+$yyTop]), 'expression' => $yyVals[0+$yyTop]))); 
    } break;

    case 145:  #line 649 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('value' => $yyVals[0+$yyTop]); } break;

    case 146:  #line 650 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('key' => $yyVals[-2+$yyTop], 'value' => $yyVals[0+$yyTop]); } break;

    case 147:  #line 654 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 149:  #line 659 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 150:  #line 660 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 151:  #line 664 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new CaseNode()); } break;

    case 152:  #line 664 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->expression= $yyVals[-2+$yyTop];
      $yyVals[-4+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 153:  #line 668 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new DefaultNode()); } break;

    case 154:  #line 668 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->statements= $yyVals[0+$yyTop];
    } break;

    case 155:  #line 674 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 156:  #line 675 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop]; } break;

    case 157:  #line 679 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 158:  #line 680 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ElseNode()); } break;

    case 159:  #line 680 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]->statements= $yyVals[0+$yyTop]; } break;

    case 160:  #line 685 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop] === NULL || $yyVal= array_merge($yyVals[-1+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 161:  #line 686 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 162:  #line 690 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 163:  #line 691 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-1+$yyTop], $yyVals[0+$yyTop]); } break;

    case 164:  #line 695 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 165:  #line 695 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= array();
      foreach ($yyVals[-5+$yyTop] as $type) {
        $c= new CatchNode();
        $c->position= $p;
        $c->type= $type;
        $c->variable= $yyVals[-4+$yyTop];
        $c->statements= $yyVals[-1+$yyTop];
        $yyVal[]= $c;
      }
    } break;

    case 166:  #line 709 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 167:  #line 710 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 168:  #line 714 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 170:  #line 719 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new FinallyNode()); } break;

    case 171:  #line 719 "src/main/jay/grammars/xp.jay"
    {
    $yyVals[-4+$yyTop]->statements= $yyVals[-1+$yyTop];
  } break;

    case 172:  #line 726 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 173:  #line 727 "src/main/jay/grammars/xp.jay"
    { $yyVal= [$yyVals[0+$yyTop]]; } break;

    case 174:  #line 728 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge([$yyVals[-2+$yyTop]], $yyVals[0+$yyTop]) : [$yyVals[-2+$yyTop]]; } break;

    case 175:  #line 732 "src/main/jay/grammars/xp.jay"
    { $yyVal= new UnpackNode($yyVals[0+$yyTop]); } break;

    case 176:  #line 733 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 177:  #line 738 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 179:  #line 743 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 180:  #line 744 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 181:  #line 748 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 183:  #line 753 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new InstanceCreationNode();
      $yyVal->type= $yyVals[-4+$yyTop];
      $yyVal->parameters= $yyVals[-2+$yyTop];
      $yyVal->body= $yyVals[0+$yyTop];
    } break;

    case 184:  #line 759 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ArrayNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->values= (array)$yyVals[-1+$yyTop];
    } break;

    case 185:  #line 764 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new MapNode();
      $yyVal->type= $yyVals[-3+$yyTop];
      $yyVal->elements= (array)$yyVals[-1+$yyTop];
    } break;

    case 186:  #line 772 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMemberAccessNode(NULL, $yyVals[0+$yyTop]); 
    } break;

    case 187:  #line 775 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= new StaticMethodCallNode(NULL, $yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); 
    } break;

    case 188:  #line 778 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ConstantAccessNode(NULL, $yyVals[0+$yyTop]);
    } break;

    case 189:  #line 781 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= new ClassAccessNode(NULL);
    } break;

    case 190:  #line 787 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= array('name' => $yyVals[0+$yyTop]); } break;

    case 191:  #line 787 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]));
    } break;

    case 192:  #line 790 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new VariableNode($yyVals[0+$yyTop])); } break;

    case 193:  #line 790 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-2+$yyTop];
      }
    } break;

    case 194:  #line 796 "src/main/jay/grammars/xp.jay"
    { 
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= new BracedExpressionNode($yyVals[-2+$yyTop]);
      } else {
        $yyVal= new BracedExpressionNode($yyVals[-2+$yyTop]); 
      }
    } break;

    case 195:  #line 804 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[0+$yyTop]));
    } break;

    case 196:  #line 807 "src/main/jay/grammars/xp.jay"
    {
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      }
    } break;

    case 197:  #line 813 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 198:  #line 813 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-1+$yyTop]->position= $p;
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 199:  #line 822 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 200:  #line 822 "src/main/jay/grammars/xp.jay"
    {
      $yyVals[-1+$yyTop]->position= $p;
      $yyVals[-1+$yyTop]->type= new TypeName($yyVals[-4+$yyTop]);
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop];
      } else {
        $yyVal= $yyVals[-1+$yyTop];
      }
    } break;

    case 201:  #line 832 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InvocationNode($yyVals[-1+$yyTop])); } break;

    case 202:  #line 832 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-4+$yyTop]->arguments= $yyVals[-2+$yyTop];
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-4+$yyTop];
      } else {
        $yyVal= $yyVals[-4+$yyTop];
      }
    } break;

    case 203:  #line 841 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CloneNode($yyVals[0+$yyTop]));
    } break;

    case 204:  #line 844 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode());
    } break;

    case 205:  #line 847 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop]));
    } break;

    case 206:  #line 850 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new YieldNode($yyVals[0+$yyTop], $yyVals[-2+$yyTop]));
    } break;

    case 207:  #line 853 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new CastNode(array_merge($yyVals[0+$yyTop], array('expression' => $yyVals[-2+$yyTop])))); 
    } break;

    case 208:  #line 856 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new AssignmentNode($yyVals[0+$yyTop])); 
    } break;

    case 209:  #line 859 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new ComparisonNode($yyVals[0+$yyTop])); 
    } break;

    case 210:  #line 862 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 211:  #line 865 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
    } break;

    case 212:  #line 868 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new UnaryOpNode($yyVals[0+$yyTop])); 
      $yyVal->postfix= TRUE; 
    } break;

    case 213:  #line 872 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new TernaryNode());
      $yyVal->condition= $yyVals[-4+$yyTop];
      $yyVal->expression= $yyVals[-2+$yyTop];
      $yyVal->conditional= $yyVals[0+$yyTop];
    } break;

    case 214:  #line 878 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '||'; 
    } break;

    case 215:  #line 884 "src/main/jay/grammars/xp.jay"
    { 
      $yyVal= $yyLex->create(new BinaryOpNode()); 
      $yyVal->lhs= $yyVals[-2+$yyTop]; 
      $yyVal->rhs= $yyVals[0+$yyTop]; 
      $yyVal->op= '&&'; 
    } break;

    case 216:  #line 890 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new InstanceOfNode()); 
      $yyVal->expression= $yyVals[-2+$yyTop]; 
      $yyVal->type= $yyVals[0+$yyTop]; 
    } break;

    case 217:  #line 895 "src/main/jay/grammars/xp.jay"
    { $yyVals[-4+$yyTop]= $yyLex->create(new LambdaNode($yyVals[-2+$yyTop], $yyVals[-1+$yyTop])); } break;

    case 218:  #line 895 "src/main/jay/grammars/xp.jay"
    {
      $this->error(E_WARNING, 'Deprecated lambda syntax used', array('#{ ... }'));
      if ($yyVals[0+$yyTop]) {
        $yyVal= $yyVals[0+$yyTop][0];
        $yyVals[0+$yyTop][1]->target= $yyVals[-6+$yyTop];
      }
    } break;

    case 219:  #line 905 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new ReturnNode($yyVals[0+$yyTop])); } break;

    case 220:  #line 906 "src/main/jay/grammars/xp.jay"
    { $yyVal= (array)$yyVals[-1+$yyTop]; } break;

    case 221:  #line 910 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 223:  #line 915 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 224:  #line 916 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 225:  #line 920 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('name' => $yyVals[0+$yyTop]); } break;

    case 226:  #line 921 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array('name' => $yyVals[-1+$yyTop]), $yyVals[-2+$yyTop]); $yyVals[0+$yyTop] && $yyVal['default']= $yyVals[0+$yyTop]; } break;

    case 227:  #line 925 "src/main/jay/grammars/xp.jay"
    { switch ($yyVals[0+$yyTop]) {
      case 'true': $yyVal= $yyLex->create(new BooleanNode(TRUE)); break;
      case 'false': $yyVal= $yyLex->create(new BooleanNode(FALSE)); break;
      case 'null': $yyVal= $yyLex->create(new NullNode()); break;
      default: $yyVal= $yyLex->create(new ConstantNode($yyVals[0+$yyTop])); break;
    }} break;

    case 228:  #line 931 "src/main/jay/grammars/xp.jay"
    { $p= $yyLex->position; } break;

    case 229:  #line 931 "src/main/jay/grammars/xp.jay"
    { $yyVals[-1+$yyTop]->position= $p; $yyVals[-1+$yyTop]->type= NULL; $yyVal= $yyVals[-1+$yyTop]; } break;

    case 230:  #line 932 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new IntegerNode($yyVals[0+$yyTop])); } break;

    case 231:  #line 933 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new HexNode($yyVals[0+$yyTop])); } break;

    case 232:  #line 934 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new OctalNode($yyVals[0+$yyTop])); } break;

    case 233:  #line 935 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new DecimalNode($yyVals[0+$yyTop])); } break;

    case 234:  #line 936 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyLex->create(new StringNode($yyVals[0+$yyTop])); } break;

    case 235:  #line 940 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new ArrayNode(array('values' => (array)$yyVals[0+$yyTop])));
    } break;

    case 236:  #line 943 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MapNode(array('elements' => (array)$yyVals[0+$yyTop])));
    } break;

    case 237:  #line 949 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 239:  #line 954 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 240:  #line 955 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop] ? array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])) : $yyVals[-2+$yyTop]; } break;

    case 241:  #line 959 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 243:  #line 964 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 244:  #line 965 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(new StringNode($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 245:  #line 969 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 246:  #line 970 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 247:  #line 971 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 248:  #line 972 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 249:  #line 973 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 250:  #line 974 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 251:  #line 975 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 252:  #line 976 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 253:  #line 977 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 254:  #line 978 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-2+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 255:  #line 979 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 256:  #line 980 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('variable' => $yyVals[-3+$yyTop], 'expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 257:  #line 984 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 258:  #line 985 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 259:  #line 986 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 260:  #line 987 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 261:  #line 988 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 262:  #line 989 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 263:  #line 990 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 264:  #line 991 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].'='); } break;

    case 265:  #line 995 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 266:  #line 996 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 267:  #line 997 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 268:  #line 998 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 269:  #line 999 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 270:  #line 1000 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 271:  #line 1001 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 272:  #line 1002 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 273:  #line 1003 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 274:  #line 1004 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 275:  #line 1005 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-3+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-2+$yyTop].$yyVals[-1+$yyTop]); } break;

    case 276:  #line 1006 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('lhs' => $yyVals[-2+$yyTop], 'rhs' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 277:  #line 1010 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 278:  #line 1011 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 279:  #line 1012 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 280:  #line 1013 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 281:  #line 1014 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 282:  #line 1015 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[0+$yyTop], 'op' => $yyVals[-1+$yyTop]); } break;

    case 283:  #line 1019 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 284:  #line 1020 "src/main/jay/grammars/xp.jay"
    { $yyVal= array('expression' => $yyVals[-1+$yyTop], 'op' => $yyVals[0+$yyTop]); } break;

    case 285:  #line 1025 "src/main/jay/grammars/xp.jay"
    { $yyVal= NULL; } break;

    case 287:  #line 1030 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop], $yyVals[0+$yyTop]); } break;

    case 288:  #line 1031 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop][1]->target= $yyVals[-1+$yyTop]; $yyVal= array($yyVals[0+$yyTop][0], $yyVals[-1+$yyTop]); } break;

    case 289:  #line 1035 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new ArrayAccessNode(NULL)); } break;

    case 290:  #line 1035 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->offset= $yyVals[-1+$yyTop];
    } break;

    case 291:  #line 1038 "src/main/jay/grammars/xp.jay"
    {
      $yyVal= $yyLex->create(new MemberAccessNode(NULL, $yyVals[0+$yyTop], $yyVals[-1+$yyTop])); 
    } break;

    case 292:  #line 1041 "src/main/jay/grammars/xp.jay"
    { $yyVals[-2+$yyTop]= $yyLex->create(new MethodCallNode(NULL, $yyVals[-1+$yyTop], NULL, $yyVals[-2+$yyTop])); } break;

    case 293:  #line 1041 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-5+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 294:  #line 1044 "src/main/jay/grammars/xp.jay"
    { $yyVals[0+$yyTop]= $yyLex->create(new InstanceCallNode(NULL, NULL, FALSE)); } break;

    case 295:  #line 1044 "src/main/jay/grammars/xp.jay"
    { 
      $yyVals[-3+$yyTop]->arguments= $yyVals[-1+$yyTop];
    } break;

    case 296:  #line 1050 "src/main/jay/grammars/xp.jay"
    { $yyVal= FALSE; } break;

    case 297:  #line 1051 "src/main/jay/grammars/xp.jay"
    { $yyVal= TRUE; } break;

    case 305:  #line 1070 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop]); } break;

    case 306:  #line 1071 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-3+$yyTop], $yyVals[-1+$yyTop]); } break;

    case 307:  #line 1075 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[-2+$yyTop]->compoundName().'[]'); } break;

    case 308:  #line 1079 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('[:'.$yyVals[-1+$yyTop]->compoundName().']'); } break;

    case 309:  #line 1083 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 310:  #line 1084 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-2+$yyTop], array($yyVals[0+$yyTop])); } break;

    case 312:  #line 1089 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName($yyVals[0+$yyTop].'+'); } break;

    case 313:  #line 1093 "src/main/jay/grammars/xp.jay"
    { $yyVal= array(); } break;

    case 314:  #line 1094 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 315:  #line 1095 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[-1+$yyTop]); } break;

    case 316:  #line 1096 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge($yyVals[-3+$yyTop], array($yyVals[-1+$yyTop])); } break;

    case 317:  #line 1100 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), null); } break;

    case 318:  #line 1101 "src/main/jay/grammars/xp.jay"
    { $yyVal= new TypeName('->'.$yyVals[-1+$yyTop]->compoundName(), $yyVals[-3+$yyTop]); } break;

    case 319:  #line 1105 "src/main/jay/grammars/xp.jay"
    { $yyVal= array($yyVals[0+$yyTop]); } break;

    case 320:  #line 1106 "src/main/jay/grammars/xp.jay"
    { $yyVal= array_merge(array($yyVals[-2+$yyTop]), $yyVals[0+$yyTop]); } break;

    case 321:  #line 1112 "src/main/jay/grammars/xp.jay"
    { $yyVal= 0; } break;

    case 322:  #line 1113 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 323:  #line 1117 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[0+$yyTop]; } break;

    case 324:  #line 1118 "src/main/jay/grammars/xp.jay"
    { $yyVal= $yyVals[-1+$yyTop] | $yyVals[0+$yyTop]; } break;

    case 325:  #line 1122 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PUBLIC; } break;

    case 326:  #line 1123 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PROTECTED; } break;

    case 327:  #line 1124 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PRIVATE; } break;

    case 328:  #line 1125 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_PACKAGE; } break;

    case 329:  #line 1126 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_STATIC; } break;

    case 330:  #line 1127 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_ABSTRACT; } break;

    case 331:  #line 1128 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_FINAL; } break;

    case 332:  #line 1129 "src/main/jay/grammars/xp.jay"
    { $yyVal= MODIFIER_INLINE; } break;
#line 3076 "-"
          }
                 
          $yyTop-= self::$yyLen[$yyN];
          $yyState= $yyStates[$yyTop];
          $yyM= self::$yyLhs[$yyN];

          if (0 == $yyState && 0 == $yyM) {
            $yyState= self::$yyFinal;

            // Check whether it's necessary to fetch the next token
            $yyToken < 0 && $yyToken= $yyLex->advance() ? $yyLex->token : 0;

            // We've reached the final token!
            if (0 == $yyToken) return $yyVal;
            continue 2;
          }

          $yyState= (
            ($yyN= self::$yyGindex[$yyM]) != 0 && 
            ($yyN+= $yyState) >= 0 && 
            $yyN < self::$yyTableCount && 
            self::$yyCheck[$yyN] == $yyState
          ) ? self::$yyTable[$yyN] : self::$yyDgoto[$yyM];
          continue 2;
        }
      }
    }
   }
}
